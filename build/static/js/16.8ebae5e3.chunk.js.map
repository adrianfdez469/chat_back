{"version":3,"sources":["view/changepass/changepass.view.js","view/changepass/changepass.controller.js","view/changepass/index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","ChangePassView","idioma","passState","pass2State","onPassChange","onPass2Change","submitPass","classes","Container","component","maxWidth","className","Avatar","Typography","variant","text","title","noValidate","TextField","required","fullWidth","name","label","password","type","id","autoComplete","value","onChange","helperText","valid","invalidPass","error","repeatPassword","passNotEqual","Button","color","onClick","changePass","Grid","container","justify","item","to","signin","withRouter","props","useRecoilValue","idiomaState","NotificationHook","openErrorNotification","openSuccessNotification","useState","setPassState","setPass2State","target","event","preventDefault","length","token","match","params","axios","post","DEFAULT_CONFIG","server","then","resp","status","passChangeOk","catch","err","passChangeError","ChangePass"],"mappings":"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","file":"static/js/16.8ebae5e3.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport text from './idioma.json'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  }\r\n}));\r\n\r\nexport default function ChangePassView({idioma, passState, pass2State, onPassChange, onPass2Change, submitPass}) {\r\n  \r\n        const classes = useStyles();\r\n\r\n  return (  \r\n    <Container component=\"main\" maxWidth=\"xs\">  \r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {text.title[idioma]}\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label={text.password[idioma]}\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={passState.value}\r\n                onChange={onPassChange}\r\n                helperText={!passState.valid ? text.invalidPass[idioma] : ''}\r\n                error={!passState.valid}\r\n            />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label={text.repeatPassword[idioma]}\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={pass2State.value}\r\n                onChange={onPass2Change}\r\n                helperText={!pass2State.valid ? text.passNotEqual[idioma] : ''}\r\n                error={!pass2State.valid}\r\n            />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={submitPass}            \r\n          >\r\n            {text.changePass[idioma]}\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <RouterLink to=\"/\">\r\n              {text.signin[idioma]}\r\n              </RouterLink>\r\n            </Grid>\r\n          </Grid>\r\n         </form>\r\n      </div>\r\n      </Container>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport {useRecoilValue} from 'recoil';\r\nimport NotificationHook from '../../components/uiComponents/notification/notification.hook';\r\nimport axios from 'axios';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport ChangePassView from './changepass.view';\r\nimport {idiomaState} from './../../components/recoil/atoms';\r\nimport {DEFAULT_CONFIG} from '../../conf/configuration';\r\nimport text from './idioma.json';\r\n\r\nconst ChangePassController = props => {\r\n    \r\n    const idioma = useRecoilValue(idiomaState);\r\n\r\n    const {openErrorNotification, openSuccessNotification} = NotificationHook();\r\n    const [passState, setPassState] = useState({value: \"\", valid: true});\r\n    const [pass2State, setPass2State] = useState({value: \"\", valid: true});\r\n\r\n\r\n    const onPassChange = ({target: {value}}) => {\r\n        setPassState({...passState, value: value, valid: true});\r\n        setPass2State({...pass2State, valid: true});\r\n    }\r\n    const onPass2Change = ({target: {value}}) => {\r\n        setPass2State({...pass2State, value: value, valid: true});\r\n    }\r\n\r\n    const submitPass = (event) => {\r\n        event.preventDefault();\r\n        if(passState.value.length < 8){\r\n            setPassState({...passState, valid: false});\r\n        }else if(pass2State.value !== passState.value){\r\n            setPass2State({...pass2State, valid: false});\r\n        }else {\r\n            const token = props.match.params.token;\r\n            \r\n            axios.post(`${DEFAULT_CONFIG.server}/users/resetpassword`,{\r\n                token: token,\r\n                password: passState.value\r\n            })\r\n            .then(resp => {\r\n                if(resp.status === 200){\r\n                    openSuccessNotification(text.passChangeOk[idioma]);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                openErrorNotification(text.passChangeError[idioma]);\r\n            });\r\n        }\r\n    }\r\n    \r\n    return <ChangePassView idioma={idioma} \r\n            passState={passState}\r\n            pass2State={pass2State}\r\n\r\n            onPassChange={onPassChange}\r\n            onPass2Change={onPass2Change}\r\n            submitPass={submitPass}\r\n            />;\r\n\r\n}\r\n\r\nexport default withRouter(ChangePassController);\r\n","import React from 'react';\r\nimport ChangePassController from './changepass.controller';\r\nconst ChangePass = props => {\r\n\r\n    return <ChangePassController {...props}/>;\r\n\r\n}\r\nexport default ChangePass;"],"sourceRoot":""}