{"version":3,"sources":["view/activateuser/activateuser.view.js","view/activateuser/activateuser.controller.js","view/activateuser/index.js"],"names":["useStyles","makeStyles","theme","root","width","height","paddingTop","spacing","overflowY","button","marginTop","marginRight","actionsContainer","marginBottom","Stepper","backgroundColor","combo","minWidth","avatarPink","color","palette","getContrastText","pink","marginLeft","avatarBlue","blueGrey","avatarButton","padding","borderRadius","avatarEdit","margin","display","flexDirection","alignItems","justifyContent","ActivateUserView","idioma","text","activeStep","handleFinish","handleLanguageChange","sexSelectHandler","sexState","nicknameState","setNicknameHandler","preview","setPreview","goNextConf","goBackConf","sendActivation","activationError","avatarRef","isUserInvited","passState","onChangePass","classes","className","Container","Typography","variant","hello","hello1","descriptionText","Divider","orientation","Step","StepLabel","labelIdioma","StepContent","FormControl","Select","id","value","onChange","MenuItem","english","spanish","Button","onClick","next","labelSexo","male","female","back","disabled","labelNickname","TextField","placeholder","labelAvatar","onCrop","prev","onClose","closeIconColor","label","choosefile","ref","Avatar","alt","src","password","required","fullWidth","name","pass","type","autoComplete","helperText","valid","msg","error","length","label1","label3","content3","goLogin","withRouter","props","useRecoilState","idiomaState","setIdioma","openErrorNotification","useNotification","useState","setActiveStep","setActivationError","redirectState","setRedirect","setSexState","match","params","nickname","setNickname","previewAvatar","setPreviewAvatar","setPassState","useRef","state","to","target","axios","post","DEFAULT_CONFIG","server","token","language","gender","avatar","invited","then","resp","status","catch","err","response","connError","ActivateUser"],"mappings":"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","file":"static/js/15.e2bada60.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { pink, blueGrey } from '@material-ui/core/colors';\r\n\r\n\r\n\r\n\r\nimport { Container, Divider } from '@material-ui/core';\r\n\r\nimport AvatarEdit from 'react-avatar-edit';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        paddingTop: theme.spacing(2),\r\n        overflowY: 'auto'\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    Stepper: {\r\n        backgroundColor: 'transparent',\r\n        \r\n    },\r\n    combo: {\r\n        minWidth: 120\r\n    },\r\n    avatarPink: {\r\n        color: theme.palette.getContrastText(pink[300]),\r\n        backgroundColor: pink[300],\r\n        marginLeft: theme.spacing(7),\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n      },\r\n    avatarBlue: {\r\n        color: theme.palette.getContrastText(blueGrey[500]),\r\n        backgroundColor: blueGrey[500],\r\n        marginLeft: theme.spacing(7),\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n    },\r\n    avatarButton: {\r\n        padding: 0, \r\n        borderRadius: '50%', \r\n        minWidth: 0\r\n    },\r\n    avatarEdit: {\r\n        margin: theme.spacing(2),\r\n        marginLeft: theme.spacing(3),\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: ''\r\n    },\r\n    \r\n    \r\n}));\r\n\r\nconst ActivateUserView = ({idioma, text,activeStep, handleFinish,\r\n    handleLanguageChange, \r\n    sexSelectHandler,sexState,\r\n    nicknameState, setNicknameHandler,\r\n    preview, setPreview,\r\n    goNextConf,goBackConf,\r\n    sendActivation, activationError,\r\n    avatarRef,\r\n    isUserInvited, passState, onChangePass\r\n}) => {\r\n\r\n    const classes = useStyles();    \r\n\r\n    let orientation = 'vertical';\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Container>\r\n                <Typography variant=\"h6\">{`${text.hello[idioma]}${nicknameState}${text.hello1[idioma]}`}</Typography>\r\n                <Typography variant=\"body1\">{text.descriptionText[idioma]}</Typography>\r\n            </Container>\r\n            <Divider />\r\n            <Stepper activeStep={activeStep} orientation={orientation} className={classes.Stepper}>\r\n                <Step >\r\n                    <StepLabel >{text.labelIdioma[idioma]}</StepLabel>\r\n                    <StepContent>\r\n                        <FormControl variant=\"standard\" className={classes.combo}>\r\n                            <Select\r\n                                id=\"input-language\"\r\n                                value={idioma}\r\n                                onChange={handleLanguageChange}\r\n                            >\r\n                                <MenuItem value={'en'}>{text.english[idioma]}</MenuItem>\r\n                                <MenuItem value={'es'}>{text.spanish[idioma]}</MenuItem>\r\n                            </Select>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={goNextConf}\r\n                                className={classes.button}\r\n                            >\r\n                                {text.next[idioma]}\r\n                            </Button>\r\n                        </FormControl>                        \r\n                    </StepContent>\r\n                </Step>\r\n\r\n                <Step >\r\n                    <StepLabel >{text.labelSexo[idioma]}</StepLabel>\r\n                    <StepContent>\r\n                        <FormControl variant=\"standard\" className={classes.combo}>\r\n                            <Select\r\n                                id=\"input-language\"\r\n                                value={sexState}\r\n                                onChange={sexSelectHandler}\r\n                            >\r\n                                <MenuItem value={'M'}>{text.male[idioma]}</MenuItem>\r\n                                <MenuItem value={'F'}>{text.female[idioma]}</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <div className={classes.actionsContainer}>\r\n                            <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={goBackConf}\r\n                                className={classes.button}\r\n                            >\r\n                                {text.back[idioma]}\r\n                            </Button>\r\n                            <Button\r\n                                disabled={sexState == null}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={goNextConf}\r\n                                className={classes.button}\r\n                            >\r\n                                {text.next[idioma]}\r\n                            </Button>\r\n                            </div>\r\n                        </div>\r\n                    </StepContent>\r\n                </Step>\r\n\r\n                <Step >\r\n                    <StepLabel >{text.labelNickname[idioma]}</StepLabel>\r\n                    <StepContent>\r\n                        <FormControl variant=\"standard\" className={classes.combo}>\r\n                            <TextField \r\n                                id=\"standard-basic\"\r\n                                placeholder={text.labelNickname[idioma]}\r\n                                value={nicknameState}\r\n                                onChange={setNicknameHandler}   \r\n                            />\r\n                        </FormControl>\r\n                        <div className={classes.actionsContainer}>\r\n                            <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={goBackConf}\r\n                                className={classes.button}\r\n                            >\r\n                                {text.back[idioma]}\r\n                            </Button>\r\n                            <Button\r\n                                disabled={nicknameState === ''}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={goNextConf}\r\n                                className={classes.button}\r\n                            >\r\n                                {text.next[idioma]}\r\n                            </Button>\r\n                            </div>\r\n                        </div>\r\n                    </StepContent>\r\n                </Step>\r\n\r\n                <Step >\r\n                    <StepLabel >{text.labelAvatar[idioma]}</StepLabel>\r\n                    <StepContent>                    \r\n                        <div className={classes.avatarEdit}>\r\n                            <AvatarEdit\r\n                                width={120}\r\n                                height={100}\r\n                                onCrop={prev => {                                    \r\n                                    setPreview(prev)}\r\n                                }\r\n                                onClose={() => {setPreview(null)}}\r\n                                closeIconColor={pink[500]}\r\n                                label={text.choosefile[idioma]}        \r\n                                ref={avatarRef}                    \r\n                            />\r\n                                <Avatar                                    \r\n                                    alt={`${nicknameState}`}\r\n                                    src={preview}\r\n                                    variant=\"circle\"\r\n                                    className={sexState===\"F\" ? classes.avatarPink : classes.avatarBlue}\r\n                                />\r\n                        </div>\r\n                        <div className={classes.actionsContainer}>\r\n                            <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={goBackConf}\r\n                                className={classes.button}\r\n                            >\r\n                                {text.back[idioma]}\r\n                            </Button>\r\n                            <Button\r\n                                disabled={nicknameState === ''}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={isUserInvited ? goNextConf : sendActivation}\r\n                                className={classes.button}\r\n                            >\r\n                                {text.next[idioma]}\r\n                            </Button>\r\n                            </div>\r\n                        </div>\r\n                    </StepContent>\r\n                </Step>\r\n                \r\n                {isUserInvited \r\n                ? <Step >\r\n                    <StepLabel >{text.password[idioma]}</StepLabel>\r\n                    <StepContent>\r\n                        \r\n                        <FormControl variant=\"standard\" className={classes.combo}>\r\n                            <TextField\r\n                                variant=\"standard\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label={text.pass[idioma]}\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                value={passState.value}\r\n                                helperText={!passState.valid ? text[passState.msg][idioma] : ''}\r\n                                error={!passState.valid}\r\n                                onChange={onChangePass}\r\n                            />\r\n                            \r\n                            <div className={classes.actionsContainer}>\r\n                                <div>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        onClick={goBackConf}\r\n                                        className={classes.button}\r\n                                    >\r\n                                        {text.back[idioma]}\r\n                                    </Button>\r\n                                    <Button\r\n                                        disabled={!passState.valid || !passState.value.length > 0}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={sendActivation}\r\n                                        className={classes.button}\r\n                                    >\r\n                                        {text.next[idioma]}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </FormControl>\r\n\r\n                    </StepContent>\r\n                </Step>\r\n                : null\r\n                 }\r\n\r\n                <Step >\r\n                    <StepLabel error={activationError}>{text.label1[idioma]}</StepLabel>\r\n                </Step>\r\n\r\n                <Step >\r\n                    <StepLabel >{text.label3[idioma]}</StepLabel>\r\n                    <StepContent>\r\n                        <Typography>{text.content3[idioma]}</Typography>\r\n                        <div className={classes.actionsContainer}>\r\n                            <div>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleFinish}\r\n                                className={classes.button}\r\n                            >\r\n                                {text.goLogin[idioma]}\r\n                            </Button>\r\n                            </div>\r\n                        </div>\r\n                    </StepContent>\r\n                </Step>\r\n\r\n            </Stepper>\r\n            <Divider />\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ActivateUserView;","import React, {useState, useRef} from 'react';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {DEFAULT_CONFIG} from '../../conf/configuration';\r\nimport {useRecoilState} from 'recoil';\r\nimport {idiomaState} from '../../components/recoil/atoms';\r\nimport useNotification from '../../components/uiComponents/notification/notification.hook';\r\nimport ActivateUserView from './activateuser.view';\r\nimport text from './idioma.json';\r\n\r\n\r\nconst ActivateUserController = props => {\r\n\r\n    const [idioma, setIdioma] = useRecoilState(idiomaState);\r\n    const {openErrorNotification} = useNotification();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [activationError, setActivationError] = useState(false);\r\n    const [redirectState, setRedirect] = useState(null);\r\n    const [sexState, setSexState] = useState(null);\r\n    const [nicknameState, setNickname] = useState(props.match.params.nickname);\r\n    const [previewAvatar, setPreviewAvatar] = useState(null);\r\n    const [passState, setPassState] = useState({value: \"\", valid: true});\r\n    const avatarRef = useRef(null);\r\n\r\n\r\n    const handleLanguageChange = ({target: {value}}) => {\r\n        setIdioma(value);\r\n    }\r\n\r\n    const handleFinish = () => {\r\n        setRedirect(true);\r\n    };\r\n    const goNextConf = () => {\r\n        setActiveStep(state => state+1);\r\n    }\r\n    const goBackConf = () => {\r\n        setActiveStep(state => state-1);\r\n    }\r\n    const sexSelectHandler = ({target: {value}}) => {\r\n        setSexState(value);\r\n    }\r\n    const setNicknameHandler = ({target: {value}}) => {\r\n        setNickname(value);\r\n    }\r\n    const onChangePass = ({target:{value}}) => {\r\n\r\n        if(value.length < 8){\r\n            setPassState({...passState,value: value, valid: false, msg: 'passShort'});\r\n        }else{\r\n            setPassState({...passState,value: value, valid: true, msg: null});\r\n        }\r\n    }\r\n\r\n\r\n    const sendActivation = () => {\r\n        \r\n        goNextConf();\r\n\r\n        axios.post(`${DEFAULT_CONFIG.server}/users/activate`, \r\n            {\r\n                token: props.match.params.token,\r\n                language: idioma,\r\n                gender: sexState,\r\n                nickname: nicknameState,\r\n                avatar: previewAvatar,\r\n                isUserInvited: props.match.params.invited === 'invited',\r\n                password: passState.value\r\n            })\r\n        .then(resp => {\r\n            if(resp.status === 200){\r\n                goNextConf();\r\n            }\r\n            \r\n        })\r\n        .catch(err => {\r\n            if(!err.response){\r\n                openErrorNotification(text.connError[idioma]);\r\n            }\r\n            setActivationError(true);\r\n            \r\n        });\r\n    }\r\n\r\n    if(redirectState){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return <ActivateUserView \r\n        idioma={idioma}\r\n        text={text}\r\n        activeStep={activeStep}\r\n        handleFinish={handleFinish}\r\n        handleLanguageChange={handleLanguageChange}\r\n        sexSelectHandler={sexSelectHandler}\r\n        sexState={sexState}\r\n        nicknameState={nicknameState}\r\n        setNicknameHandler={setNicknameHandler}\r\n        preview={previewAvatar}\r\n        setPreview={setPreviewAvatar}\r\n        \r\n        goNextConf={goNextConf}\r\n        goBackConf={goBackConf}\r\n\r\n        sendActivation={sendActivation}\r\n        activationError={activationError}\r\n        avatarRef={avatarRef}\r\n\r\n        isUserInvited={props.match.params.invited === 'invited'}\r\n        passState={passState}\r\n        onChangePass={onChangePass}\r\n\r\n    />;\r\n\r\n}\r\nexport default withRouter(ActivateUserController);","import React from 'react';\r\nimport ActivateUserController from './activateuser.controller';\r\n\r\nconst ActivateUser = props => {\r\n\r\n    return <ActivateUserController />;\r\n\r\n}\r\nexport default ActivateUser;"],"sourceRoot":""}