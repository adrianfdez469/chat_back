{"version":3,"sources":["utils/axiosHook.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/icons/HowToReg.js","../node_modules/@material-ui/icons/ThumbDownAlt.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/VoiceOverOff.js","../node_modules/@material-ui/icons/Info.js","view/contacts/contact/acceptInvAction/acceptinv.view.js","view/contacts/contact/acceptInvAction/acceptInv.controller.js","view/contacts/contact/acceptInvAction/index.js","view/contacts/contact/declineInvAction/declineinv.view.js","view/contacts/contact/declineInvAction/declineInv.controller.js","view/contacts/contact/declineInvAction/index.js","view/contacts/contact/deleteAction/delete.view.js","view/contacts/contact/deleteAction/delete.controller.js","view/contacts/contact/deleteAction/index.js","view/contacts/contact/blockAction/block.view.js","view/contacts/contact/blockAction/block.controller.js","view/contacts/contact/blockAction/index.js","view/contacts/contact/contactAction.proxy.js","view/contacts/contact/contact.view.js","view/contacts/contact/contact.controller.js","view/contacts/contact/index.js","view/contacts/contacs.view.js","view/contacts/contacts.controller.js","view/contacts/index.js"],"names":["useAxiosHook","useNotificationHook","openErrorNotification","openSuccessNotification","postRequest","url","bodyParams","doFnAfterSuccess","doFnAfterError","messageOnSuccess","messageOnError","authMidleware","token","axios","post","DEFAULT_CONFIG","server","headers","then","resp","catch","err","ListItemIcon","React","props","ref","classes","className","other","_objectWithoutProperties","context","ListContext","_extends","clsx","root","alignItems","alignItemsFlexStart","withStyles","theme","minWidth","color","palette","action","active","flexShrink","display","marginTop","name","MenuItem","tabIndex","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","disabled","undefined","ListItem","button","dense","gutters","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","ListItemAvatar","ListItemSecondaryAction","muiName","position","right","top","transform","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","fillRule","d","AcceptInvActionView","idioma","onClick","fontSize","ListItemText","primary","text","acceptInv","AcceptInvActionController","preAction","contact","useRecoilValue","idiomaState","userData","loginData","friendDispatcher","useSetRecoilState","friendSelector","authMiddleware","acceptedUserId","contactId","status","payload","friend","data","socketId","socketClient","getSocket","emit","accepterId","userId","socketIdRequester","errorAccepting","AcceptInv","DeclineInvActionView","decline","DeclineInvActionController","declinedUserId","friendId","declinerId","declinedId","socketIdDeclined","errorDeclining","DeclineInv","DeleteActionView","delete","DeleteActionController","deletedUserId","onDeleteError","friendShipStatus","deleterId","socketIdDeleted","DeleteAction","BlockActionView","block","BlockActionController","blokedUserId","onBlockError","blokerId","socketIdBloked","BlockAction","ContactActionProxy","handleClose","useStyle","makeStyles","infoIcon","marginRight","textAlign","flex","padding","transition","borderRadius","border","cursor","margin","outline","userSelect","verticalAlign","justifyContent","textDecoration","listItemText","paddingRight","spacing","primaryText","secondaryText","secondary","avatarMan","getContrastText","blue","backgroundColor","avatarWoman","pink","OnlineStyledBadge","badge","boxShadow","left","height","animation","content","opacity","Badge","OfflineStyledBadge","grey","OnlineBadge","overlap","anchorOrigin","vertical","horizontal","variant","children","StyledMenu","paper","Menu","elevation","getContentAnchorEl","transformOrigin","useCustomTooltipGreenStyle","arrow","green","tooltip","useCustomTooltipRedStyle","red","CustomTooltip","classesRed","classesGreen","Tooltip","ContactView","memo","handleMenu","anchorEl","openChat","lastMsg","options","locale","es","lastMsgTime","datetime","formatRelative","Date","console","log","avatarUrl","avatarGender","gender","unread","badgeContent","Avatar","src","nickname","friendShipStatusCode","slice","secondaryTypographyProps","style","title","IconButton","edge","aria-label","id","keepMounted","open","Boolean","onClose","Divider","ContactContrller","useState","setAnchorEl","setActiveChat","activeChatWith","useCallback","event","currentTarget","notifyTo","localStorage","getItem","Contact","ContactsView","contacts","List","length","map","key","Typography","align","goMakeFriends","beta","ContactsController","setSubscribeToEvents","subscribeToEventsState","useRecoilState","searchFriends","errorLoadingFriends","friends","errorLoadingFriendsData","dataObj","contactsData","useEffect","Contacts"],"mappings":"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","file":"static/js/7.29b0f471.chunk.js","sourcesContent":["//import React from 'react';\r\nimport axios from 'axios';\r\n//import {useSetRecoilState} from 'recoil';\r\nimport authMidleware from '../authMiddleware';\r\nimport useNotificationHook from '../components/uiComponents/notification/notification.hook';\r\nimport {DEFAULT_CONFIG} from '../conf/configuration';\r\n//import useBackdrop from '../components/uiComponents/backdrop/useBackdrop';\r\n\r\nconst useAxiosHook = () => {\r\n\r\n    const {openErrorNotification, openSuccessNotification} = useNotificationHook();\r\n    //const {closeBackDrop, showBackDrop} = useBackdrop();\r\n\r\n    const postRequest = ({url, bodyParams= {}, doFnAfterSuccess=null, doFnAfterError = null, messageOnSuccess=null, messageOnError=null}) => {\r\n        \r\n        const optimisticAction = token => {\r\n            //showBackDrop();\r\n            axios.post(`${DEFAULT_CONFIG.server}${url}`, \r\n                bodyParams, \r\n                {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                .then(resp => {\r\n                    //closeBackDrop();\r\n                    if(messageOnSuccess) openSuccessNotification(messageOnSuccess);\r\n                    if(doFnAfterSuccess) doFnAfterSuccess(resp, token);\r\n                })\r\n                .catch(err => {\r\n                    //closeBackDrop();\r\n                    if(messageOnError) openErrorNotification(messageOnError);\r\n                    if(doFnAfterError) doFnAfterError(err);\r\n                })\r\n        }\r\n        /*const pesimisticAction = () => {            \r\n            clearUserData();\r\n        }*/\r\n        \r\n        authMidleware(optimisticAction/*, pesimisticAction*/);\r\n    };   \r\n\r\n\r\n    return {postRequest};\r\n\r\n}\r\nexport default useAxiosHook;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"g\", {\n  fillRule: \"evenodd\"\n}, _react.default.createElement(\"path\", {\n  d: \"M9 17l3-2.94c-.39-.04-.68-.06-1-.06-2.67 0-8 1.34-8 4v2h9l-3-3zm2-5c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4M15.47 20.5L12 17l1.4-1.41 2.07 2.08 5.13-5.17 1.4 1.41z\"\n})), 'HowToReg');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M22 4h-2c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h2V4zM2.17 11.12c-.11.25-.17.52-.17.8V13c0 1.1.9 2 2 2h5.5l-.92 4.65c-.05.22-.02.46.08.66.23.45.52.86.88 1.22L10 22l6.41-6.41c.38-.38.59-.89.59-1.42V6.34C17 5.05 15.95 4 14.66 4h-8.1c-.71 0-1.36.37-1.72.97l-2.67 6.15z\"\n}), 'ThumbDownAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12.99 9.18c0-.06.01-.12.01-.18 0-2.21-1.79-4-4-4-.06 0-.12.01-.18.01l4.17 4.17zm-6.1-3.56L4.27 3 3 4.27l2.62 2.62C5.23 7.5 5 8.22 5 9c0 2.21 1.79 4 4 4 .78 0 1.5-.23 2.11-.62L19.73 21 21 19.73l-8.62-8.62-5.49-5.49zM9 15c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4zm7.76-9.64l-1.68 1.69c.84 1.18.84 2.71 0 3.89l1.68 1.69c2.02-2.02 2.02-5.07 0-7.27zM20.07 2l-1.63 1.63c2.77 3.02 2.77 7.56 0 10.74L20.07 16c3.9-3.89 3.91-9.95 0-14z\"\n}), 'VoiceOverOff');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","import React from 'react';\r\n//import { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, ListItemIcon, IconButton, Badge, Divider, Menu, MenuItem } from '@material-ui/core';\r\nimport  MenuItem from '@material-ui/core/MenuItem';\r\nimport  ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport  ListItemText from '@material-ui/core/ListItemText';\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\n\r\nimport text from './idioma.json';\r\n\r\nconst AcceptInvActionView = ({idioma, onClick}) => {\r\n\r\n    return ( \r\n        <MenuItem onClick={onClick}>\r\n            <ListItemIcon>\r\n                <HowToRegIcon fontSize=\"small\" color=\"primary\"/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text.acceptInv[idioma]} />\r\n        </MenuItem>\r\n    );\r\n\r\n}\r\nexport default AcceptInvActionView;","import React from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport axios from 'axios';\r\nimport {idiomaState, loginData/*, updateFriendSelector*/} from '../../../../components/recoil/atoms';\r\nimport {friendSelector} from '../../../../components/recoil/selectors';\r\nimport { DEFAULT_CONFIG } from '../../../../conf/configuration';\r\nimport useNotificationHook from '../../../../components/uiComponents/notification/notification.hook';\r\nimport authMiddleware from '../../../../authMiddleware';\r\nimport AcceptInvActionView from './acceptinv.view';\r\nimport text from './idioma.json';\r\nimport socketClient from '../../../../utils/socket';\r\n\r\nconst AcceptInvActionController = ({preAction, contact}) => {\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const userData = useRecoilValue(loginData);\r\n    const {openErrorNotification} = useNotificationHook();\r\n    //const switchContact = useSetRecoilState(updateFriendSelector);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n\r\n    const onClick = () => {\r\n        preAction();\r\n        const optimisticAction = token => {\r\n            axios.post(`${DEFAULT_CONFIG.server}/users/acceptFriendRequest`, {\r\n                acceptedUserId: contact.contactId\r\n            }, {\r\n                headers: {\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n            .then(resp => {\r\n                if(resp.status === 200){\r\n                    //switchContact(resp.data.friend);\r\n                    friendDispatcher({action: 'update', payload: {friend: {...resp.data.friend, socketId: contact.socketId}}});\r\n                    const client = socketClient.getSocket();\r\n                    \r\n                    client.emit('accept friendship', {\r\n                        accepterId: userData.userId,\r\n                        socketIdRequester: contact.socketId,\r\n                        token: token\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                openErrorNotification(text.errorAccepting[idioma]);\r\n            });\r\n        }\r\n\r\n        authMiddleware(optimisticAction);\r\n        \r\n    }\r\n\r\n    return <AcceptInvActionView \r\n        idioma={idioma}\r\n        onClick={onClick}\r\n    />;\r\n\r\n}\r\nexport default AcceptInvActionController;","import React from 'react';\r\nimport AcceptInvController from './acceptInv.controller';\r\nconst AcceptInv = props => {\r\n\r\n    return <AcceptInvController {...props}/>;\r\n\r\n}\r\nexport default AcceptInv;","import React from 'react';\r\n//import { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, ListItemIcon, IconButton, Badge, Divider, Menu, MenuItem } from '@material-ui/core';\r\nimport  MenuItem from '@material-ui/core/MenuItem';\r\nimport  ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport  ListItemText from '@material-ui/core/ListItemText';\r\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\r\n\r\nconst DeclineInvActionView = ({idioma, text, onClick}) => {\r\n\r\n    return ( \r\n        <MenuItem onClick={onClick}>\r\n            <ListItemIcon>\r\n                <ThumbDownAltIcon fontSize=\"small\" color=\"error\"/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text.decline[idioma]} />\r\n        </MenuItem>\r\n    );\r\n\r\n}\r\nexport default DeclineInvActionView;","import React from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport axios from 'axios';\r\nimport {idiomaState, loginData/*, deleteFriendSelector*/} from '../../../../components/recoil/atoms';\r\nimport { friendSelector } from '../../../../components/recoil/selectors';\r\nimport authMiddleware from '../../../../authMiddleware';\r\nimport useNotificationHook from '../../../../components/uiComponents/notification/notification.hook';\r\nimport {DEFAULT_CONFIG} from '../../../../conf/configuration';\r\nimport socketClient from '../../../../utils/socket';\r\n\r\nimport text from './idioma.json'\r\n\r\nimport DeclineInvActionView from './declineinv.view';\r\n\r\n\r\nconst DeclineInvActionController = ({preAction, contact}) => {\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const {openErrorNotification} = useNotificationHook();\r\n    //const eliminarContacto = useSetRecoilState(deleteFriendSelector);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n    const userData = useRecoilValue(loginData);\r\n\r\n    const onClick = () => {\r\n        preAction();\r\n        const optimisticAction = token => {\r\n            axios.post(`${DEFAULT_CONFIG.server}/users/declineFriendRequest`, {\r\n                declinedUserId: contact.contactId\r\n            }, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            .then(resp => {\r\n                if(resp.status === 200){\r\n                    friendDispatcher({action: 'delete', payload: {friendId: contact.contactId}});\r\n                }\r\n            })\r\n            .then(() => {\r\n                const socket = socketClient.getSocket();\r\n                socket.emit('decline friendship', {\r\n                    declinerId: userData.userId,\r\n                    declinedId: contact.contactId,\r\n                    socketIdDeclined: contact.socketId,\r\n                    token: token\r\n                });\r\n            })\r\n            .catch(err => {\r\n                openErrorNotification(text.errorDeclining[idioma]);\r\n            })\r\n        }\r\n\r\n        authMiddleware(optimisticAction);\r\n        \r\n    }\r\n\r\n    return <DeclineInvActionView \r\n        idioma={idioma}\r\n        onClick={onClick}\r\n        text={text}\r\n    />;\r\n\r\n}\r\nexport default DeclineInvActionController;","import React from 'react';\r\nimport DeclineInvController from './declineInv.controller';\r\nconst DeclineInv = props => {\r\n\r\n    return <DeclineInvController {...props}/>;\r\n\r\n}\r\nexport default DeclineInv;","import React from 'react';\r\n//import { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, ListItemIcon, IconButton, Badge, Divider, Menu, MenuItem } from '@material-ui/core';\r\nimport  MenuItem from '@material-ui/core/MenuItem';\r\nimport  ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport  ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst DeleteActionView = ({idioma, onClick, text}) => {\r\n\r\n    return ( \r\n        <MenuItem onClick={onClick}>\r\n            <ListItemIcon>\r\n                <DeleteIcon fontSize=\"small\" color=\"error\"/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text.delete[idioma]} />\r\n        </MenuItem>\r\n    );\r\n\r\n}\r\nexport default DeleteActionView;","import React from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, loginData/*, deleteFriendSelector*/} from '../../../../components/recoil/atoms';\r\nimport {friendSelector} from '../../../../components/recoil/selectors';\r\nimport useAxiosHook from '../../../../utils/axiosHook';\r\nimport DeleteActionView from './delete.view';\r\nimport text from './idioma.json';\r\nimport socketClient from '../../../../utils/socket';\r\n\r\nconst DeleteActionController = ({preAction, contact}) => {\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const userData = useRecoilValue(loginData);\r\n    const {postRequest} = useAxiosHook();\r\n    //const deleteFriend = useSetRecoilState(deleteFriendSelector);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n\r\n\r\n    const onClick = () => {\r\n\r\n        preAction();\r\n        postRequest({\r\n            url: '/users/deleteContact',\r\n            bodyParams: {deletedUserId: contact.contactId},\r\n            messageOnError: text.onDeleteError[idioma],\r\n            doFnAfterSuccess: (resp, token) => {\r\n                if(resp.status === 200){\r\n                    friendDispatcher({action: 'delete', payload: {friendId: contact.contactId}});\r\n\r\n                    if(contact.friendShipStatus === 1){\r\n                        const client = socketClient.getSocket();\r\n                        client.emit('delete contact', {\r\n                            deleterId: userData.userId,\r\n                            socketIdDeleted: contact.socketId,\r\n                            token: token\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return <DeleteActionView \r\n        idioma={idioma}\r\n        text={text}\r\n        onClick={onClick}\r\n    />;\r\n\r\n}\r\nexport default DeleteActionController;","import React from 'react';\r\nimport DeleteController from './delete.controller';\r\nconst DeleteAction = props => {\r\n\r\n    return <DeleteController {...props} />;\r\n\r\n}\r\nexport default DeleteAction;","import React from 'react';\r\n//import { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, ListItemIcon, IconButton, Badge, Divider, Menu, MenuItem } from '@material-ui/core';\r\nimport  MenuItem from '@material-ui/core/MenuItem';\r\nimport  ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport  ListItemText from '@material-ui/core/ListItemText';\r\nimport VoiceOverOffIcon from '@material-ui/icons/VoiceOverOff';\r\n\r\nimport text from './idioma.json';\r\n\r\nconst BlockActionView = ({idioma, onClick}) => {\r\n\r\n    return ( \r\n        <MenuItem onClick={onClick}>\r\n            <ListItemIcon>\r\n                <VoiceOverOffIcon fontSize=\"small\" color=\"error\"/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text.block[idioma]} />\r\n        </MenuItem>\r\n    );\r\n\r\n}\r\nexport default BlockActionView;","import React from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, loginData/*, deleteFriendSelector*/} from '../../../../components/recoil/atoms';\r\nimport {friendSelector} from '../../../../components/recoil/selectors';\r\nimport useAxiosHook from '../../../../utils/axiosHook';\r\nimport BlockActionView from './block.view';\r\nimport text from './idioma.json';\r\nimport socketClient from '../../../../utils/socket';\r\n\r\nconst BlockActionController = ({preAction, contact}) => {\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const userData = useRecoilValue(loginData);\r\n    const {postRequest} = useAxiosHook();\r\n    //const deleteContact = useSetRecoilState(deleteFriendSelector);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n\r\n    const onClick = () => {\r\n        preAction();\r\n        \r\n        postRequest({\r\n            url: '/users/blockUser',\r\n            bodyParams: {blokedUserId: contact.contactId},\r\n            messageOnError: text.onBlockError[idioma],\r\n            doFnAfterSuccess: (resp, token) => {\r\n                if(resp.status === 200){\r\n                    //deleteContact(contact.contactId);\r\n                    friendDispatcher({action: 'delete', payload: {friendId: contact.contactId}});\r\n                    const client = socketClient.getSocket();\r\n                    client.emit('block contact', {\r\n                        blokerId: userData.userId, \r\n                        socketIdBloked: contact.socketId,\r\n                        token: token\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return <BlockActionView \r\n        idioma={idioma}\r\n        onClick={onClick}\r\n    />;\r\n\r\n}\r\nexport default BlockActionController;","import React from 'react';\r\nimport BlockController from './block.controller';\r\nconst BlockAction = props => {\r\n\r\n    return <BlockController {...props}/>;\r\n\r\n}\r\nexport default BlockAction;","import React from 'react';\r\n\r\nimport AcceptInv from './acceptInvAction';\r\nimport DeclineInv from './declineInvAction';\r\nimport DeleteFriend from './deleteAction';\r\nimport BlockContact from './blockAction';\r\n/*\r\n    1- ACEPTED -> Eliminar, Bloquear\r\n    2- REQUESTED -> Cancelar, Bloquear\r\n    3- ASKED -> Aceptar, Cancelar, bloquear\r\n    4- DECLINED -> Cancelar, Bloquear\r\n    5- Blocked -> Eliminar\r\n    6- Deleted -> Eliminar\r\n*/\r\n\r\nconst ContactActionProxy = ({handleClose, contact}) => {\r\n    \r\n\r\n    const preAction = () => {\r\n        handleClose()\r\n    }\r\n\r\n    \r\n    \r\n    switch(contact.friendShipStatus){\r\n        case 1: return (\r\n            <>\r\n                <DeleteFriend  preAction={preAction} contact={contact}/>\r\n                <BlockContact  preAction={preAction} contact={contact}/>\r\n            </>\r\n            );\r\n        case 2: return (\r\n            <>\r\n                <DeclineInv preAction={preAction} contact={contact}/>\r\n                <BlockContact preAction={preAction} contact={contact}/>\r\n            </>\r\n        ); \r\n        case 3: return (\r\n            <>\r\n                <AcceptInv  preAction={preAction} contact={contact}/>\r\n                <DeclineInv  preAction={preAction} contact={contact}/>\r\n                <BlockContact  preAction={preAction} contact={contact}/>\r\n            </>\r\n        );\r\n        case 4: return (\r\n            <>\r\n                <DeleteFriend  preAction={preAction} contact={contact}/>\r\n                <BlockContact  preAction={preAction} contact={contact}/>\r\n            </>\r\n        );\r\n        case 5: return <DeleteFriend  preAction={preAction} contact={contact}/>;\r\n        case 6: return <DeleteFriend  preAction={preAction} contact={contact}/>;\r\n        default: return null;\r\n    }\r\n}\r\n\r\nexport default ContactActionProxy;","import React from 'react';\r\nimport { formatRelative } from 'date-fns';\r\nimport { es } from 'date-fns/locale';\r\nimport { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton, Badge, Divider, Menu, Tooltip, Typography } from '@material-ui/core';\r\nimport { red, green, blue, pink } from '@material-ui/core/colors';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport {DEFAULT_CONFIG} from '../../../conf/configuration';\r\n\r\nimport text from './idioma.json';\r\n\r\nimport ActionProxy from './contactAction.proxy';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    infoIcon: {\r\n        marginRight: '-12px',\r\n        overflow: 'visible',\r\n        textAlign: 'center',\r\n        flex: '0 0 auto',\r\n        \r\n        color: 'rgba(0, 0, 0, 0.54)',\r\n        padding: '12px',\r\n        fontSize: '1.5rem',\r\n        transition: 'background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n        borderRadius: '50%',\r\n\r\n        \r\n        border: 0,\r\n        cursor: 'pointer',\r\n        margin: 0,\r\n        display: 'inline-flex',\r\n        outline: 0,\r\n        \r\n        position: 'relative',\r\n        alignItems: 'center',\r\n        userSelect: 'none',\r\n        \r\n        verticalAlign: 'middle',\r\n        \r\n        justifyContent: 'center',\r\n        textDecoration: 'none'\r\n    },\r\n    listItemText: {\r\n        paddingRight: theme.spacing(10)\r\n    },\r\n    primaryText: {\r\n        color: theme.palette.text.primary\r\n    },\r\n    secondaryText: {\r\n        color: theme.palette.text.secondary\r\n    },avatarMan: {\r\n        color: theme.palette.getContrastText(blue[400]),\r\n        backgroundColor: blue[400],\r\n    },\r\n    avatarWoman: {\r\n        color: theme.palette.getContrastText(pink[300]),\r\n        backgroundColor: pink[300],\r\n    },\r\n}));\r\n\r\nconst OnlineStyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: '#44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px white`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: '$ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst OfflineStyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: theme.palette.grey[500],\r\n        color: theme.palette.grey[500],\r\n\r\n        \r\n        \r\n        boxShadow: `0 0 0 2px white`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst OnlineBadge = props => {\r\n    \r\n    if(props.contact.socketId && props.contact.friendShipStatus === 1){\r\n        return (<OnlineStyledBadge\r\n                overlap=\"circle\"\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    variant=\"dot\"\r\n                >\r\n                    {props.children}\r\n                </OnlineStyledBadge>)\r\n            ;\r\n    }\r\n    else {\r\n        return (<OfflineStyledBadge\r\n            overlap=\"circle\"\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                variant=\"dot\"\r\n            >\r\n                {props.children}\r\n            </OfflineStyledBadge>)\r\n        ;\r\n    }\r\n}\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  })((props) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\nconst useCustomTooltipGreenStyle = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: green[500]\r\n    },\r\n    tooltip: {\r\n      backgroundColor: green[500]\r\n    },\r\n  }));\r\n  const useCustomTooltipRedStyle = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: red[500]\r\n    },\r\n    tooltip: {\r\n      backgroundColor: red[500]\r\n    },\r\n  }));\r\nconst CustomTooltip = props => {\r\n    const classesRed = useCustomTooltipRedStyle();\r\n    const classesGreen = useCustomTooltipGreenStyle();\r\n\r\n    return <Tooltip arrow classes={props.color === 'red' ? classesRed : classesGreen} {...props} />;\r\n}\r\n\r\n\r\nconst ContactView = React.memo(\r\n    ({idioma, contact, handleMenu,\r\n    handleClose, anchorEl, openChat}) => {\r\n    const lastMsg = contact.lastMsg ? contact.lastMsg : '' ;\r\n    \r\n    const options = idioma === 'es' ? { locale: es } : {};\r\n    const lastMsgTime = contact.datetime ? formatRelative(new Date(contact.datetime), new Date(), options) : '';\r\n    console.log(contact);\r\n    \r\n    \r\n    const classes = useStyle();\r\n    const avatarUrl = contact.avatarUrl ? `${DEFAULT_CONFIG.server}${contact.avatarUrl}` : null;\r\n\r\n    const avatarGender = contact.gender === \"M\" ? 'avatarMan' : \"avatarWoman\";\r\n\r\n    return (<>\r\n        <ListItem button onClick={openChat}>\r\n            <ListItemAvatar>\r\n                <OnlineBadge contact={contact}>\r\n                    {contact.unread && contact.unread > 0 \r\n                    ? <Badge color=\"secondary\" badgeContent={contact.unread}>\r\n                        <Avatar\r\n                            src={avatarUrl}\r\n                            className={contact.gender && classes[avatarGender]}\r\n                        />\r\n                    </Badge>\r\n                    : <Avatar\r\n                            src={avatarUrl}\r\n                            className={contact.gender && classes[avatarGender]}\r\n                        />\r\n                    }\r\n                </OnlineBadge>\r\n            </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={contact.nickname}\r\n                    \r\n                    secondary={contact.friendShipStatus > 1 ? text[contact.friendShipStatusCode][idioma] : `${lastMsg.slice(0, 55)}... ${lastMsgTime}`}\r\n                    secondaryTypographyProps={contact.friendShipStatus > 3 \r\n                        ? {\r\n                            style: {color: `${red[500]}`}\r\n\r\n                        } \r\n                        : contact.friendShipStatus < 4 && contact.friendShipStatus > 1 ? {\r\n                            style: {color: `${green[500]}`}\r\n                        } : {}\r\n                    }\r\n                    className={classes.listItemText}\r\n                    classes={{\r\n                        primary: classes.primaryText,\r\n                        secondary: classes.secondaryText\r\n                    }}\r\n                />\r\n                \r\n                {contact.friendShipStatus > 1 ?\r\n                    <CustomTooltip title={text[`desc${contact.friendShipStatusCode}`][idioma]} color={contact.friendShipStatus > 3 ? 'red' : 'geen'}>\r\n                        <div className={classes.infoIcon}>\r\n                            <InfoIcon fontSize=\"small\" style={{color: contact.friendShipStatus > 3 ? red[500] : green[500]}}/>\r\n                        </div>\r\n                    </CustomTooltip>\r\n                : null }\r\n            \r\n            <ListItemSecondaryAction>\r\n                \r\n                \r\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleMenu}>\r\n                    <MoreVertIcon fontSize=\"default\"/>\r\n                </IconButton>\r\n                <StyledMenu\r\n                    id=\"customized-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >   \r\n                    <ActionProxy handleClose={handleClose} contact={contact}/>\r\n                </StyledMenu>\r\n            </ListItemSecondaryAction>\r\n            \r\n        </ListItem>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n        </>\r\n    );\r\n})\r\n\r\n\r\nexport default ContactView;","import React, {useState, useCallback} from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, activeChatWith, loginData} from '../../../components/recoil/atoms';\r\nimport {friendSelector} from '../../../components/recoil/selectors';\r\nimport ContactView from './contact.view';\r\nimport socketClient from '../../../utils/socket';\r\n\r\nconst ContactContrller = ({contact}) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const userData = useRecoilValue(loginData);\r\n    const setActiveChat = useSetRecoilState(activeChatWith);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n    \r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    \r\n    const handleClose = useCallback(() => {\r\n        setAnchorEl(null);\r\n    },[]);\r\n\r\n    const openChat = () => {        \r\n        setActiveChat(contact.contactId);\r\n\r\n        // Poner el estado en leidos\r\n        friendDispatcher({\r\n            action: 'reset_cant_no_leidos',\r\n            payload: {\r\n                contactId: contact.contactId,\r\n            }\r\n        });\r\n        // Emit como leidos\r\n        const client = socketClient.getSocket();\r\n        client.emit('read messages', {\r\n            userId: userData.userId,\r\n            contactId: contact.contactId,\r\n            notifyTo: contact.socketId,\r\n            token: localStorage.getItem('token')\r\n        });\r\n    }\r\n\r\n    return <ContactView \r\n        handleMenu={handleMenu}\r\n        handleClose={handleClose}\r\n        contact={contact}\r\n        anchorEl={anchorEl}\r\n        idioma={idioma}\r\n        openChat={openChat}\r\n    />;\r\n\r\n}\r\nexport default ContactContrller;","import React from 'react';\r\n\r\nimport ContactController from './contact.controller';\r\nconst Contact = props => {\r\n\r\n    return <ContactController \r\n        {...props}\r\n    />;\r\n\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Contact from './contact';\r\n\r\nconst ContactsView = ({idioma, text, contacts}) => {\r\n\r\n    return (\r\n        <List>\r\n            {contacts.length > 0 \r\n                ? contacts.map((contact) => <Contact contact={contact} key={contact.contactId}/>)\r\n                : <>\r\n                <Divider/>\r\n                    <Typography variant=\"h5\" align='justify'>{text.goMakeFriends[idioma]}</Typography>\r\n                    <Divider/>\r\n                    <Typography variant=\"subtitle1\" align='justify' >{text.beta[idioma]}</Typography>\r\n                </>\r\n            }\r\n        </List>\r\n    );\r\n\r\n}\r\nexport default ContactsView;","import React, { useEffect} from 'react';\r\nimport text from './idioma.json';\r\nimport {useRecoilValue, useRecoilState, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, subscribeToEventsState/*friendSelector*/ /*, friendsAtom*/} from '../../components/recoil/atoms';\r\nimport {friendSelector} from '../../components/recoil/selectors';\r\nimport useAxiosHook from '../../utils/axiosHook';\r\n\r\nimport ContactsView from './contacs.view';\r\n\r\n\r\n\r\nconst ContactsController = props => {\r\n\r\n    const setSubscribeToEvents = useSetRecoilState(subscribeToEventsState);\r\n    //const setContacts = useSetRecoilState(friendsAtom);\r\n    const {postRequest} = useAxiosHook();\r\n    \r\n    //const [contacts, addContact] = useRecoilState(friendSelector);\r\n    const [contacts, friendDispatcher] = useRecoilState(friendSelector);\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n\r\n    const getFriendData = () => {\r\n        postRequest({\r\n            url: '/users/getContactData',\r\n            messageOnError: text.errorLoadingFriendsData[idioma],\r\n            doFnAfterSuccess: resp => {\r\n                if(resp.status === 200){\r\n                    friendDispatcher({\r\n                        action: 'set_message_info',\r\n                        payload: {\r\n                            dataObj: resp.data.contactsData\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    const searchFriends = () => {\r\n        \r\n        if(contacts.length === 0){\r\n            \r\n            postRequest({\r\n                url: '/users/searchFirends',\r\n                messageOnError: text.errorLoadingFriends[idioma],\r\n                doFnAfterSuccess: resp => {\r\n                    if(resp.status === 200){\r\n                        \r\n                        friendDispatcher({\r\n                            action: 'initialize', \r\n                            payload: {\r\n                                friends: resp.data.friends\r\n                            }});\r\n                        setSubscribeToEvents(true);\r\n                        if(resp.data.friends.length > 0){\r\n                            getFriendData();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }else{\r\n            console.log('NO LOS MANDA A BUSCAR');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchFriends();\r\n    }, []);\r\n\r\n    return <ContactsView \r\n        idioma={idioma}\r\n        contacts={contacts}\r\n        text={text}\r\n\r\n    />;\r\n\r\n}\r\n\r\nexport default ContactsController;","import React from 'react';\r\nimport ContactsController from './contacts.controller';\r\nconst Contacts = props => {\r\n\r\n    return <ContactsController />;\r\n\r\n}\r\nexport default Contacts;"],"sourceRoot":""}