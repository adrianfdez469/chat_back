{"version":3,"sources":["utils/axiosHook.js","../node_modules/@material-ui/core/esm/AppBar/AppBar.js","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/icons/ArrowBack.js","../node_modules/@material-ui/icons/Done.js","../node_modules/@material-ui/icons/DoneAll.js","../node_modules/@material-ui/icons/Telegram.js","view/chat/chatHeader/chatHeader.view.js","view/chat/chatHeader/chatHeader.controller.js","view/chat/chatHeader/index.js","../node_modules/@material-ui/core/esm/colors/lightGreen.js","view/chat/chatBody/chatBody.view.js","view/chat/chatBody/chatBody.controller.js","view/chat/chatBody/index.js","view/chat/chatEditor/chatEditor.view.js","view/chat/chatEditor/chatEditor.controller.js","view/chat/chatEditor/index.js","view/chat/chat.view.js","view/chat/index.js"],"names":["useAxiosHook","useNotificationHook","openErrorNotification","openSuccessNotification","postRequest","url","bodyParams","doFnAfterSuccess","doFnAfterError","messageOnSuccess","messageOnError","authMidleware","token","axios","post","DEFAULT_CONFIG","server","headers","then","resp","catch","err","AppBar","React","props","ref","classes","className","_props$color","color","_props$position","position","other","_objectWithoutProperties","Paper","_extends","square","component","elevation","clsx","root","concat","capitalize","withStyles","theme","backgroundColorDefault","palette","type","grey","display","flexDirection","width","boxSizing","zIndex","appBar","flexShrink","positionFixed","top","left","right","positionAbsolute","positionSticky","positionStatic","positionRelative","colorDefault","backgroundColor","getContrastText","colorPrimary","primary","main","contrastText","colorSecondary","secondary","colorInherit","colorTransparent","name","Toolbar","_props$component","Component","_props$disableGutters","disableGutters","_props$variant","variant","gutters","alignItems","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","grow","flexGrow","menuButton","marginRight","title","marginLeft","customAppBar","values","sm","avatarMan","blue","avatarWoman","pink","OnlineStyledBadge","badge","boxShadow","background","paper","height","borderRadius","animation","border","content","transform","opacity","Badge","OfflineStyledBadge","OnlineBadge","contact","socketId","friendShipStatus","overlap","anchorOrigin","vertical","horizontal","children","ChatHeaderView","closeChat","avatarUrl","avatarGender","gender","IconButton","edge","aria-label","onClick","Avatar","src","Typography","noWrap","nickname","ChatHeaderController","useRecoilState","activeChatWith","idContact","setActiveChatWith","useRecoilValue","friendSelector","find","f","contactId","ChatHeader","lightGreen","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","useMessageStyle","message","padding","maxWidth","marginTop","marginBottom","info","dark","timeMessage","text","disabled","typography","subtitle2","mymsg","textAlign","alignSelf","notmymsg","msgAvatar","myMsgAvatar","notMyMsgAvatar","doneIcon","fontSize","Message","memo","state","datetime","avatarSrc","idioma","msgStyle","avatarStyle","options","locale","es","date","formatRelative","Date","stateIcon","style","alt","useChatStyle","chatConversation","overflowY","offset","offsetDown","bottom","ChatBodyView","messages","useEffect","element","document","getElementById","scrollTop","scrollHeight","id","map","elem","idx","arr","key","ChatBodyController","initConversation","useSetRecoilState","initConversationSelector","getConversationWithContact","userAvatarState","userDate","loginData","idiomaState","friends","length","errorLoadConversation","status","conversation","data","socketClient","getSocket","emit","readerId","userId","messengerId","messengerSocketId","ChatBody","icon","textarea","fontFamily","maxHeight","cursor","ChatEditorView","sendMessage","refAreaTexto","keyPress","role","contentEditable","onKeyPress","ChatEditorController","openWarningNotification","useNotification","userData","addMsgToConversation","addMsgToConversationSelector","useRef","useState","consecutive","setConsecutive","current","innerText","replace","messageId","prev","userOriginId","userDestinyId","toSocketId","localStorage","getItem","focus","notEditable","event","charCode","preventDefault","ChatEditor","ChatView","Chat"],"mappings":"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","file":"static/js/9.6a6ad8cc.chunk.js","sourcesContent":["//import React from 'react';\r\nimport axios from 'axios';\r\n//import {useSetRecoilState} from 'recoil';\r\nimport authMidleware from '../authMiddleware';\r\nimport useNotificationHook from '../components/uiComponents/notification/notification.hook';\r\nimport {DEFAULT_CONFIG} from '../conf/configuration';\r\n//import useBackdrop from '../components/uiComponents/backdrop/useBackdrop';\r\n\r\nconst useAxiosHook = () => {\r\n\r\n    const {openErrorNotification, openSuccessNotification} = useNotificationHook();\r\n    //const {closeBackDrop, showBackDrop} = useBackdrop();\r\n\r\n    const postRequest = ({url, bodyParams= {}, doFnAfterSuccess=null, doFnAfterError = null, messageOnSuccess=null, messageOnError=null}) => {\r\n        \r\n        const optimisticAction = token => {\r\n            //showBackDrop();\r\n            axios.post(`${DEFAULT_CONFIG.server}${url}`, \r\n                bodyParams, \r\n                {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                .then(resp => {\r\n                    //closeBackDrop();\r\n                    if(messageOnSuccess) openSuccessNotification(messageOnSuccess);\r\n                    if(doFnAfterSuccess) doFnAfterSuccess(resp, token);\r\n                })\r\n                .catch(err => {\r\n                    //closeBackDrop();\r\n                    if(messageOnError) openErrorNotification(messageOnError);\r\n                    if(doFnAfterError) doFnAfterError(err);\r\n                })\r\n        }\r\n        /*const pesimisticAction = () => {            \r\n            clearUserData();\r\n        }*/\r\n        \r\n        authMidleware(optimisticAction/*, pesimisticAction*/);\r\n    };   \r\n\r\n\r\n    return {postRequest};\r\n\r\n}\r\nexport default useAxiosHook;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  var backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      boxSizing: 'border-box',\n      // Prevent padding issue with the Modal and fixed positioned AppBar.\n      zIndex: theme.zIndex.appBar,\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `position=\"fixed\"`. */\n    positionFixed: {\n      position: 'fixed',\n      top: 0,\n      left: 'auto',\n      right: 0,\n      '@media print': {\n        // Prevent the app bar to be visible on each printed page.\n        position: 'absolute'\n      }\n    },\n\n    /* Styles applied to the root element if `position=\"absolute\"`. */\n    positionAbsolute: {\n      position: 'absolute',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"sticky\"`. */\n    positionSticky: {\n      // ⚠️ sticky is not supported by IE 11.\n      position: 'sticky',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"static\"`. */\n    positionStatic: {\n      position: 'static'\n    },\n\n    /* Styles applied to the root element if `position=\"relative\"`. */\n    positionRelative: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if `color=\"default\"`. */\n    colorDefault: {\n      backgroundColor: backgroundColorDefault,\n      color: theme.palette.getContrastText(backgroundColorDefault)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"transparent\"`. */\n    colorTransparent: {\n      backgroundColor: 'transparent',\n      color: 'inherit'\n    }\n  };\n};\nvar AppBar = /*#__PURE__*/React.forwardRef(function AppBar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$position = props.position,\n      position = _props$position === void 0 ? 'fixed' : _props$position,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"position\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    component: \"header\",\n    elevation: 4,\n    className: clsx(classes.root, classes[\"position\".concat(capitalize(position))], classes[\"color\".concat(capitalize(color))], className, position === 'fixed' && 'mui-fixed'),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AppBar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary', 'transparent']),\n\n  /**\n   * The positioning type. The behavior of the different options is described\n   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).\n   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.\n   */\n  position: PropTypes.oneOf(['absolute', 'fixed', 'relative', 'static', 'sticky'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAppBar'\n})(AppBar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z\"\n}), 'DoneAll');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9.78 18.65l.28-4.23 7.68-6.92c.34-.31-.07-.46-.52-.19L7.74 13.3 3.64 12c-.88-.25-.89-.86.2-1.3l15.97-6.16c.73-.33 1.43.18 1.15 1.3l-2.72 12.81c-.19.91-.74 1.13-1.5.71L12.6 16.3l-1.99 1.93c-.23.23-.42.42-.83.42z\"\n}), 'Telegram');\n\nexports.default = _default;","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ToolBar from '@material-ui/core/Toolbar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport {blue, pink} from '@material-ui/core/colors';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {DEFAULT_CONFIG} from '../../../conf/configuration'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(0.5),\r\n    },\r\n    title: {\r\n        display: 'block',\r\n        //display: 'none',\r\n        /*[theme.breakpoints.up('xs')]: {\r\n          display: 'block',\r\n        },*/\r\n\r\n        marginLeft: theme.spacing(1)\r\n        \r\n    },\r\n    customAppBar: {\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.breakpoints.values.sm,\r\n        },\r\n        right: 'auto'\r\n    },\r\n    avatarMan: {\r\n      color: theme.palette.getContrastText(blue[400]),\r\n      backgroundColor: blue[400],\r\n    },\r\n    avatarWoman: {\r\n      color: theme.palette.getContrastText(pink[300]),\r\n      backgroundColor: pink[300],\r\n    }\r\n}));\r\n\r\n\r\nconst OnlineStyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: '#44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: '$ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst OfflineStyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: theme.palette.grey[500],\r\n        color: theme.palette.grey[500],\r\n        \r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst OnlineBadge = props => {\r\n    \r\n    if(props.contact.socketId && props.contact.friendShipStatus === 1){\r\n        return (<OnlineStyledBadge\r\n                overlap=\"circle\"\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    variant=\"dot\"\r\n                >\r\n                    {props.children}\r\n                </OnlineStyledBadge>)\r\n            ;\r\n    }\r\n    else {\r\n        return (<OfflineStyledBadge\r\n            overlap=\"circle\"\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                variant=\"dot\"\r\n            >\r\n                {props.children}\r\n            </OfflineStyledBadge>)\r\n        ;\r\n    }\r\n}\r\n\r\nconst ChatHeaderView = ({closeChat, contact}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const avatarUrl = contact.avatarUrl ? DEFAULT_CONFIG.server + contact.avatarUrl : null;\r\n    const avatarGender = contact.gender === \"M\" ? 'avatarMan' : \"avatarWoman\";\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.customAppBar}>\r\n            <ToolBar>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={closeChat}\r\n                >\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                    <OnlineBadge contact={contact}>\r\n                        <Avatar\r\n                            src={avatarUrl}\r\n                            className={contact.gender && avatarGender}\r\n                        />\r\n                    </OnlineBadge>\r\n                <Typography className={classes.title} variant=\"h5\" noWrap>\r\n                    {contact.nickname}\r\n                </Typography>\r\n                <div className={classes.grow} />\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n            </ToolBar>\r\n        </AppBar>\r\n    );\r\n\r\n}\r\nexport default ChatHeaderView;","import React from 'react';\r\nimport {useRecoilValue, useRecoilState} from 'recoil';\r\nimport { friendSelector } from '../../../components/recoil/selectors'; \r\nimport { activeChatWith } from '../../../components/recoil/atoms'; \r\nimport ChatHeaderView from './chatHeader.view';\r\n\r\nconst ChatHeaderController = () => {\r\n\r\n    const [idContact, setActiveChatWith] = useRecoilState(activeChatWith);\r\n    const friends = useRecoilValue(friendSelector);\r\n    const contact = friends.find(f => f.contactId === idContact);\r\n\r\n    const closeChat = () => {\r\n        setActiveChatWith(null);\r\n    }\r\n    \r\n    return <ChatHeaderView \r\n        closeChat={closeChat}\r\n        contact={contact}\r\n    />;\r\n\r\n}\r\nexport default ChatHeaderController;","import React from 'react';\r\nimport ChatHeaderController from './chatHeader.controller';\r\nconst ChatHeader = props => {\r\n\r\n    return <ChatHeaderController />;\r\n\r\n}\r\nexport default ChatHeader;","var lightGreen = {\n  50: '#f1f8e9',\n  100: '#dcedc8',\n  200: '#c5e1a5',\n  300: '#aed581',\n  400: '#9ccc65',\n  500: '#8bc34a',\n  600: '#7cb342',\n  700: '#689f38',\n  800: '#558b2f',\n  900: '#33691e',\n  A100: '#ccff90',\n  A200: '#b2ff59',\n  A400: '#76ff03',\n  A700: '#64dd17'\n};\nexport default lightGreen;","import React from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { grey, lightGreen, green } from '@material-ui/core/colors';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport {DEFAULT_CONFIG} from '../../../conf/configuration';\r\nimport { formatRelative } from 'date-fns'\r\nimport { es } from 'date-fns/locale';\r\n\r\nconst useMessageStyle = makeStyles(theme => ({\r\n    message: {\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\r\n        maxWidth: '60%',\r\n        //margin: `${theme.spacing(2)}px ${theme.spacing(2)}px`,\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: 0,\r\n        marginLeft: `${theme.spacing(2)}px`,\r\n        marginRight: `${theme.spacing(2)}px`,        \r\n        borderRadius: '10px',\r\n        backgroundColor: theme.palette.info.dark,\r\n        color: theme.palette.info.contrastText,\r\n        position: \"relative\"\r\n    },\r\n    timeMessage: {\r\n        paddingLeft: theme.spacing(2),\r\n        //paddingRight: theme.spacing(2),\r\n        maxWidth: '60%',\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: `${theme.spacing(2)}px`,\r\n        marginRight: `${theme.spacing(1)}px`,\r\n        color: theme.palette.text.disabled,\r\n        ...theme.typography.subtitle2\r\n    },\r\n    mymsg: {\r\n        textAlign: 'right',\r\n        alignSelf: 'flex-end',\r\n        borderRadius: '10px 0 10px 10px'\r\n    },\r\n    notmymsg: { \r\n        alignSelf: 'flex-start',\r\n        borderRadius: '0 10px 10px 10px'\r\n    },\r\n    msgAvatar: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        position: \"absolute\",\r\n        top: `-${theme.spacing(1.5)}px`,\r\n    },\r\n    myMsgAvatar : {\r\n        right: `-${theme.spacing(1.5)}px`,\r\n        \r\n    },\r\n    notMyMsgAvatar: {\r\n        left: `-${theme.spacing(1.5)}px`\r\n    },\r\n    doneIcon: {\r\n        marginRight: theme.spacing(1),\r\n        fontSize: theme.spacing(2.2)\r\n    }\r\n}));\r\n\r\nconst Message = React.memo(\r\n    ({state, content, datetime ,contact, avatarSrc, idioma}) => {\r\n\r\n    const classes = useMessageStyle();\r\n\r\n    const msgStyle = state > 0 ? classes.mymsg : classes.notmymsg;\r\n    const avatarStyle = state > 0 ? classes.myMsgAvatar : classes.notMyMsgAvatar;\r\n    const avatarUrl = state > 0 ? avatarSrc : DEFAULT_CONFIG.server + contact.avatarUrl;\r\n\r\n    const options = idioma === 'es' ? { locale: es } : {};\r\n    const date = formatRelative(new Date(datetime), new Date(), options)\r\n    \r\n    let stateIcon = null;\r\n    if(state === 1) stateIcon = <DoneIcon className={classes.doneIcon} style={{ color: grey[500] }}/>\r\n    if(state === 2) stateIcon = <DoneAllIcon className={classes.doneIcon} style={{ color: grey[500] }}/>\r\n    if(state === 3) stateIcon = <DoneAllIcon className={classes.doneIcon} style={{ color: lightGreen[500] }}/>\r\n    \r\n\r\n    return (<>\r\n        <div className={`${classes.message} ${msgStyle}`}>\r\n            <Avatar\r\n                alt={contact.nickname}\r\n                src={avatarUrl}\r\n                variant=\"circle\"\r\n                className={`${classes.msgAvatar} ${avatarStyle}`}\r\n                \r\n            />\r\n            {content}\r\n        </div>\r\n        <span className={` ${msgStyle}`}>\r\n            <span className={`${classes.timeMessage}`}>\r\n                {date}\r\n            </span>\r\n            {stateIcon}\r\n        </span>\r\n        \r\n    </>\r\n    );\r\n});\r\n\r\nconst useChatStyle = makeStyles(theme => ({\r\n    chatConversation: {\r\n        position: 'relative',\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n        height: '100%'\r\n        \r\n    },\r\n    offset: theme.mixins.toolbar,\r\n    offsetDown: {\r\n        ...theme.mixins.toolbar, \r\n        bottom: 0,\r\n        position: 'relative'\r\n    }\r\n}));\r\n\r\nconst ChatBodyView = ({contact, avatarSrc, messages, idioma}) => {\r\n\r\n    React.useEffect(() => {\r\n        var element = document.getElementById('chatConversation');\r\n        if(element)\r\n            element.scrollTop = element.scrollHeight;\r\n    });\r\n\r\n    const classes = useChatStyle();\r\n    return (\r\n        \r\n                <div id=\"chatConversation\" className={classes.chatConversation}>\r\n                    <div className={classes.offset} />\r\n                    {\r\n                        messages.map((elem, idx, arr) => {\r\n                            return <Message {...elem} key={idx} contact={contact} avatarSrc={avatarSrc} idioma={idioma}/>\r\n                        })\r\n                    }\r\n                    <div className={classes.offsetDown} />\r\n                </div>\r\n\r\n    );\r\n\r\n}\r\nexport default ChatBodyView;","import React, { useEffect } from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport { friendSelector, initConversationSelector } from '../../../components/recoil/selectors'; \r\nimport {userAvatarState, activeChatWith, idiomaState, loginData, getConversationWithContact} from '../../../components/recoil/atoms';\r\nimport ChatBodyView from './chatBody.view';\r\nimport useAxiosHook from '../../../utils/axiosHook';\r\nimport text from './idioma.json';\r\nimport socketClient from '../../../utils/socket';\r\n\r\nconst ChatBodyController = () => {\r\n    \r\n    const idContact = useRecoilValue(activeChatWith);\r\n    const initConversation = useSetRecoilState(initConversationSelector);\r\n    const messages = useRecoilValue(getConversationWithContact(idContact));\r\n    const avatarSrc = useRecoilValue(userAvatarState);\r\n    const userDate = useRecoilValue(loginData);\r\n    const idioma = useRecoilValue(idiomaState);\r\n    \r\n    const friends = useRecoilValue(friendSelector);\r\n    const {postRequest} = useAxiosHook();\r\n    const contact = friends.find(f => f.contactId === idContact);\r\n\r\n\r\n    const loadConversation = () => {\r\n        if(messages.length === 0){\r\n            postRequest({\r\n                url: '/messages/getMessagesByContact',\r\n                messageOnError: text.errorLoadConversation[idioma],\r\n                bodyParams: {contactId: contact.contactId},\r\n                doFnAfterSuccess: (resp, token) => {\r\n                    if(resp.status === 200){\r\n                        \r\n                        initConversation({\r\n                            contactId: contact.contactId,\r\n                            conversation: resp.data.conversation\r\n                        });\r\n    \r\n    \r\n                        const client = socketClient.getSocket();\r\n                        client.emit('read messages', {\r\n                            readerId: userDate.userId,\r\n                            messengerId: contact.contactId,\r\n                            messengerSocketId: contact.socketId,\r\n                            token: token\r\n                        });\r\n                    }\r\n                },\r\n                //doFnAfterError: err => console.log(err)\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadConversation();\r\n    }, []);\r\n\r\n    if(messages ){\r\n        return <ChatBodyView \r\n                    contact={contact}\r\n                    avatarSrc={avatarSrc}\r\n                    messages={messages}\r\n                    idioma={idioma}\r\n                /> ;\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default ChatBodyController;","import React from 'react';\r\nimport ChatBodyController from './chatBody.controller';\r\nconst ChatBody = props => {\r\n\r\n    return <ChatBodyController />;\r\n\r\n}\r\nexport default ChatBody;","import React from 'react';\r\n\r\nimport {AppBar, Toolbar, IconButton, makeStyles, createStyles} from '@material-ui/core';\r\n\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar:{\r\n        top: 'auto',\r\n        bottom: 0,\r\n        position: \"fixed\",\r\n        width: '100%',        \r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.breakpoints.values.sm,\r\n        },\r\n        right: 'auto'\r\n    },\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    toolbar: {\r\n        padding: 0\r\n    },\r\n    icon: {\r\n        fontSize: theme.spacing(3.75)\r\n    },\r\n    textarea: {\r\n        border: '1px solid white',\r\n        fontFamily: 'inherit',\r\n        fontSize: 'large',    \r\n        padding: '1px 6px',\r\n        backgroundColor: theme.palette.background.paper,\r\n        //color: 'rgba(0,0,0,0.7)',\r\n        color: theme.palette.text.primary,\r\n        \r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom:  theme.spacing(1),\r\n        maxHeight: theme.spacing(10),\r\n        minHeight: theme.spacing(4),\r\n        overflowY: 'auto',\r\n        borderRadius: theme.spacing(0.5),\r\n        marginLeft: theme.spacing(2),\r\n        cursor: 'text'\r\n    }\r\n}));\r\n\r\n\r\nconst ChatEditorView = ({sendMessage, refAreaTexto, keyPress, }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar color=\"primary\"  className={classes.appBar}>\r\n            <Toolbar variant=\"dense\" className={classes.toolbar}>\r\n                <div className={classes.textarea}  role=\"textbox\" contentEditable ref={refAreaTexto} onKeyPress={keyPress}></div>\r\n                <div className={classes.grow} />\r\n                <IconButton color=\"inherit\" onClick={sendMessage}>\r\n                    <TelegramIcon className={classes.icon}/>\r\n                </IconButton>                \r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n\r\n}\r\nexport default ChatEditorView;","import React, {useRef, useEffect, useState} from 'react';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport {loginData, activeChatWith, idiomaState} from '../../../components/recoil/atoms';\r\nimport {friendSelector, addMsgToConversationSelector} from '../../../components/recoil/selectors';\r\nimport useNotification from '../../../components/uiComponents/notification/notification.hook';\r\nimport ChatEditorView from './chatEditor.view';\r\nimport socketClient from '../../../utils/socket';\r\nimport text from './idioma.json';\r\n\r\nconst ChatEditorController = props => {\r\n\r\n    const {openWarningNotification} = useNotification();\r\n    const userData = useRecoilValue(loginData);\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const addMsgToConversation = useSetRecoilState(addMsgToConversationSelector);\r\n    const idContact = useRecoilValue(activeChatWith);\r\n    const friends = useRecoilValue(friendSelector);\r\n    const contact = friends.find(f => f.contactId === idContact);\r\n    const refAreaTexto = useRef('');\r\n    const [consecutive, setConsecutive] = useState(0);\r\n\r\n\r\n    const sendMessage = () => {\r\n\r\n        const oldtext = refAreaTexto.current.innerText;\r\n        const text = oldtext.replace(/^(\\s*\\r*)(.)(\\s*\\r*)$/, '$2');\r\n        if(text !== ''){\r\n            addMsgToConversation({\r\n                contactId: contact.contactId,\r\n                messageId: consecutive,//messageId,\r\n                content: refAreaTexto.current.innerText,\r\n                datetime: new Date(),\r\n                state: 1\r\n            });\r\n            setConsecutive(prev => prev + 1);\r\n\r\n            const client = socketClient.getSocket();\r\n            client.emit('send message', {\r\n                content: refAreaTexto.current.innerText,\r\n                userOriginId: userData.userId,\r\n                userDestinyId: idContact,\r\n                toSocketId: contact.socketId,\r\n                token: localStorage.getItem('token'),\r\n                consecutive: consecutive\r\n            });\r\n\r\n            refAreaTexto.current.innerText = '';\r\n            refAreaTexto.current.focus();\r\n        }\r\n    }\r\n\r\n    const keyPress = (event) => {\r\n        \r\n        if(event.charCode === 13){\r\n            event.preventDefault();\r\n            sendMessage();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        contact.friendShipStatus === 1 ? refAreaTexto.current.focus() : openWarningNotification(text.notEditable[idioma]);\r\n    }, []);\r\n\r\n    return contact.friendShipStatus === 1 ? <ChatEditorView \r\n        sendMessage={sendMessage}\r\n        keyPress={keyPress}\r\n        refAreaTexto={refAreaTexto}\r\n    /> : null;\r\n\r\n}\r\nexport default ChatEditorController;","import React from 'react';\r\n\r\nimport ChatEditorController from './chatEditor.controller';\r\nconst ChatEditor = props => {\r\n\r\n    return <ChatEditorController />;\r\n\r\n}\r\nexport default ChatEditor;","import React from 'react';\r\n\r\n\r\n\r\nimport ChatHeader from './chatHeader';\r\nimport ChatBody from './chatBody';\r\nimport ChatEditor from './chatEditor';\r\n\r\nconst ChatView = () => {\r\n\r\n    return (\r\n        <>\r\n            <ChatHeader />\r\n            <ChatBody />\r\n            <ChatEditor />\r\n        </>\r\n    );\r\n\r\n}\r\nexport default ChatView;","import React from 'react';\r\nimport ChatView from './chat.view';\r\n\r\nconst Chat = props => {\r\n\r\n    return <ChatView />;\r\n}\r\nexport default Chat;"],"sourceRoot":""}