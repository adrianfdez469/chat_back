{"version":3,"sources":["components/recoil/selectors.js","utils/axiosHook.js","../node_modules/@material-ui/core/esm/AppBar/AppBar.js","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/icons/ArrowBack.js","../node_modules/@material-ui/icons/Done.js","../node_modules/@material-ui/icons/DoneAll.js","../node_modules/@material-ui/icons/Telegram.js","view/chat/chatHeader/chatHeader.view.js","view/chat/chatHeader/chatHeader.controller.js","view/chat/chatHeader/index.js","../node_modules/@material-ui/core/esm/colors/lightGreen.js","view/chat/chatBody/chatBody.view.js","view/chat/chatBody/chatBody.controller.js","view/chat/chatBody/index.js","view/chat/chatEditor/chatEditor.view.js","view/chat/chatEditor/chatEditor.controller.js","view/chat/chatEditor/index.js","view/chat/chat.view.js","view/chat/index.js"],"names":["friendSelector","selector","key","get","friendsAtom","length","sort","f1","f2","friendShipStatus","socketId","email","set","a","action","payload","oldFriends","friends","push","friend","fIndex","findIndex","f","contactId","slice","concat","index","unread","data","dataObj","map","cantidad","lastMsg","lastMessage","datetime","filter","friendId","Array","isArray","idx","dat","userId","conectedFriendName","nickname","updatedFriend","notification","msg","idiomaState","variant","disconectedFriendName","initConversationSelector","conversation","getMessageState","userOriginId","UserDestinyId","readed","getConversationWithContact","oldConversation","message","_id","content","state","userOrigin","userDestiny","addMsgToConversationSelector","newMessageObj","messageId","editMsgToStateSavedSelector","consecutive","modMessage","editAllMsgToReadedSelector","useAxiosHook","useNotificationHook","openErrorNotification","openSuccessNotification","postRequest","url","bodyParams","doFnAfterSuccess","doFnAfterError","messageOnSuccess","messageOnError","authMidleware","token","axios","post","DEFAULT_CONFIG","server","headers","then","resp","catch","err","AppBar","React","props","ref","classes","className","_props$color","color","_props$position","position","other","_objectWithoutProperties","Paper","_extends","square","component","elevation","clsx","root","capitalize","withStyles","theme","backgroundColorDefault","palette","type","grey","display","flexDirection","width","boxSizing","zIndex","appBar","flexShrink","positionFixed","top","left","right","positionAbsolute","positionSticky","positionStatic","positionRelative","colorDefault","backgroundColor","getContrastText","colorPrimary","primary","main","contrastText","colorSecondary","secondary","colorInherit","colorTransparent","name","Toolbar","_props$component","Component","_props$disableGutters","disableGutters","_props$variant","gutters","alignItems","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","grow","flexGrow","menuButton","marginRight","title","marginLeft","customAppBar","values","sm","avatarMan","blue","avatarWoman","pink","OnlineStyledBadge","badge","boxShadow","background","paper","height","borderRadius","animation","border","transform","opacity","Badge","OfflineStyledBadge","OnlineBadge","contact","overlap","anchorOrigin","vertical","horizontal","children","ChatHeaderView","closeChat","avatarUrl","avatarGender","gender","IconButton","edge","aria-label","onClick","Avatar","src","Typography","noWrap","ChatHeaderController","useRecoilState","activeChatWith","idContact","setActiveChatWith","useRecoilValue","find","ChatHeader","lightGreen","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","useMessageStyle","padding","maxWidth","marginTop","marginBottom","info","dark","timeMessage","text","disabled","typography","subtitle2","mymsg","textAlign","alignSelf","notmymsg","msgAvatar","myMsgAvatar","notMyMsgAvatar","doneIcon","fontSize","Message","memo","avatarSrc","idioma","msgStyle","avatarStyle","options","locale","es","date","formatRelative","Date","stateIcon","style","alt","useChatStyle","chatConversation","overflowY","offset","offsetDown","bottom","ChatBodyView","messages","useEffect","element","document","getElementById","scrollTop","scrollHeight","id","elem","arr","ChatBodyController","initConversation","useSetRecoilState","userAvatarState","userDate","loginData","errorLoadConversation","status","socketClient","getSocket","emit","readerId","messengerId","messengerSocketId","ChatBody","icon","textarea","fontFamily","maxHeight","cursor","ChatEditorView","sendMessage","refAreaTexto","keyPress","role","contentEditable","onKeyPress","ChatEditorController","openWarningNotification","useNotification","userData","addMsgToConversation","useRef","useState","setConsecutive","current","innerText","replace","prev","userDestinyId","toSocketId","localStorage","getItem","focus","notEditable","event","charCode","preventDefault","ChatEditor","ChatView","Chat"],"mappings":"kVAIMA,EAAiBC,mBAAS,CAC5BC,IAAK,iBACLC,IAAK,YAAY,IAAVA,EAAS,EAATA,IACH,OAAGA,EAAIC,KAAaC,OAAS,EACZ,YAAOF,EAAIC,MAETE,MACX,SAACC,EAAGC,GAEA,GAA2B,IAAxBD,EAAGE,kBAAkD,IAAxBD,EAAGC,iBAAuB,CACtD,GAAGF,EAAGG,WAAaF,EAAGE,SAAU,OAAQ,EACxC,IAAIH,EAAGG,UAAYF,EAAGE,SAAU,OAAO,EAE3C,OAAGH,EAAGE,iBAAmBD,EAAGC,kBAA0B,EACnDF,EAAGE,iBAAmBD,EAAGC,iBAAyB,EAClDF,EAAGI,MAAQH,EAAGG,OAAe,EAC7BJ,EAAGI,MAAQH,EAAGG,MAAc,OAA/B,KAID,IAIfC,IAAI,WAAD,4BAAE,mDAAAC,EAAA,sDAAQD,EAAR,EAAQA,IAAKT,EAAb,EAAaA,IAAOW,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,QAA5B,KAEMD,EAFN,OAGQ,eAHR,OAWQ,QAXR,OAkBQ,WAlBR,OA2BQ,yBA3BR,QAiCQ,qBAjCR,QAwDQ,WAxDR,QA6DQ,YA7DR,QAgGQ,eAhGR,+BAIOF,EAAIR,KAAa,SAAAY,GACb,OAAyB,IAAtBA,EAAWX,OACHU,EAAQE,QAEZD,KARlB,mCAYOJ,EAAIR,KAAa,SAAAY,GACb,IAAMC,EAAO,YAAOD,GAEpB,OADAC,EAAQC,KAAKH,EAAQI,QACdF,KAflB,mCAmBOL,EAAIR,KAAa,SAAAY,GACb,IAAMI,EAASJ,EAAWK,WAAU,SAAAC,GAAC,OAAIA,EAAEC,YAAcR,EAAQI,OAAOI,aAIxE,OAHgBP,EAAWQ,MAAM,EAAGJ,GACXK,OAAO,CAACV,EAAQI,SAChBM,OAAOT,EAAWQ,MAAMJ,EAAO,OAvBnE,oCA4BOR,EAAIR,KAAa,SAAAY,GACb,IAAMU,EAAQV,EAAWK,WAAU,SAAAF,GAAM,OAAIA,EAAOI,YAAcR,EAAQQ,aAC1E,OAAOP,EAAWQ,MAAM,EAAGE,GAAOD,OAAO,CAAC,2BAAIT,EAAWU,IAAhB,IAAwBC,OAAQ,MAAKF,OAAOT,EAAWQ,MAAME,EAAM,OA9BvH,oCAkCOd,EAAIR,KAAa,SAAAY,GACb,IAAMY,EAAOb,EAAQc,QAkBrB,OAjBmBb,EAAWc,KAAI,SAAAX,GAC9B,GAAGS,EAAKT,EAAOI,WAAW,CACtB,IAAIQ,EAAW,EAOf,OANGZ,EAAOQ,SACNI,EAAWZ,EAAOQ,QAEnBC,EAAKT,EAAOI,WAAWQ,WACtBA,GAAYH,EAAKT,EAAOI,WAAWQ,UAEhC,2BAAIZ,GAAX,IACIQ,OAASI,EACTC,QAASJ,EAAKT,EAAOI,WAAWU,YAChCC,SAAUN,EAAKT,EAAOI,WAAWW,WAGzC,OAAOf,QAnDtB,oCAyDOP,EAAIR,KAAa,SAAAY,GACb,OAAOA,EAAWmB,QAAO,SAAAb,GAAC,OAAIA,EAAEC,YAAcR,EAAQqB,eA1DjE,oCA8DUC,MAAMC,QAAQvB,EAAQa,MACrBhB,EAAIR,KAAa,SAAAY,GACb,OAAOA,EAAWc,KAAI,SAAAX,GAClB,IAAMoB,EAAMxB,EAAQa,KAAKP,WAAU,SAAAmB,GAAG,OAAIA,EAAIC,SAAWtB,EAAOI,aAChE,OAAGgB,GAAO,EACC,2BAAIpB,GAAX,IAAmBT,SAAUK,EAAQa,KAAKW,GAAK7B,WAE5C,eAAIS,UAGjB,EAEyBJ,EAAQa,KAA5Ba,EAFN,EAEMA,OAAQ/B,EAFd,EAEcA,SACXgC,EAAqB,KACrBjC,EAAmB,EAEvBG,EAAIR,KAAa,SAAAY,GACb,IAAMI,EAASJ,EAAWK,WAAU,SAAAC,GAAC,OAAIA,EAAEC,YAAckB,KACzD,GAAGrB,GAAU,EAAE,CACXsB,EAAqB1B,EAAWI,GAAQuB,SACxClC,EAAmBO,EAAWI,GAAQX,iBACtC,IAAMmC,EAAa,2BAAO5B,EAAWI,IAAlB,IAA2BV,SAAUA,IAKxD,OAHgBM,EAAWQ,MAAM,EAAGJ,GACXK,OAAO,CAACmB,IACRnB,OAAOT,EAAWQ,MAAMJ,EAAO,IAG5D,OAAOJ,KAER0B,GAA2C,IAArBjC,GACrBM,EAAQ8B,aAAR,UAAwBH,EAAxB,YAA8C3B,EAAQ+B,IAAI3C,EAAI4C,OAAiB,CAACC,QAAS,UA7FxG,oCAiGWC,EAAwB,KACxBxC,EAAmB,EAEvBG,EAAIR,KAAa,SAAAY,GAEb,IAAMU,EAAQV,EAAWK,WAAU,SAAAF,GAAM,OAAIA,EAAOT,WAAaK,EAAQL,YACzE,OAAGgB,GAAS,GACRuB,EAAwBjC,EAAWU,GAAOiB,SAC1ClC,EAAmBO,EAAWU,GAAOjB,iBAC9B,YAAIO,GAAYQ,MAAM,EAAGE,GAAOD,OAAO,CAAC,2BAAIT,EAAWU,IAAhB,IAAwBhB,SAAU,SAAQe,OAAOT,EAAWQ,MAAME,EAAM,KAEnHV,KAERiC,GAA8C,IAArBxC,GACxBM,EAAQ8B,aAAR,UAAwBI,EAAxB,YAAiDlC,EAAQ+B,IAAI3C,EAAI4C,OAAiB,CAACC,QAAS,YA/GvG,qGAAF,qDAAC,KAgIFE,EAA2BjD,mBAAS,CACtCC,IAAI,uBACJU,IAAK,cAAuC,IAArCA,EAAoC,EAApCA,IAAOW,EAA6B,EAA7BA,UAAW4B,EAAkB,EAAlBA,aAEfC,EAAkB,SAACC,EAAcC,EAAe/B,EAAWgC,GAE7D,OAAGF,IAAiB9B,EACT,EACF+B,IAAkB/B,EAChBgC,EAAS,EAAI,OADlB,GAKV3C,EAAI4C,YAA2BjC,IAAY,SAAAkC,GACvC,OAAON,EAAarB,KAAI,SAAA4B,GACpB,MAAO,CACHC,IAAKD,EAAQC,IACbC,QAASF,EAAQE,QACjB1B,SAAUwB,EAAQxB,SAClB2B,MAAOT,EAAgBM,EAAQI,WAAYJ,EAAQK,YAAaxC,EAAWmC,EAAQH,kBAOjGS,EAA+B/D,mBAAS,CAC1CC,IAAK,2BACLU,IAAK,cAA8D,IAA5DA,EAA2D,EAA3DA,IAAOW,EAAoD,EAApDA,UACJ0C,EAAgB,CAClBN,IAF0D,EAAzCO,UAGjBN,QAH0D,EAA9BA,QAI5B1B,SAJ0D,EAArBA,SAKrC2B,MAL0D,EAAXA,OAQnDjD,EAAI4C,YAA2BjC,IAAY,SAAAkC,GACvC,OAAOA,EAAgBhC,OAAO,CAACwC,UAOrCE,EAA8BlE,mBAAS,CACzCC,IAAK,8BACLU,IAAK,cAA2D,IAAzDA,EAAwD,EAAxDA,IAAOW,EAAiD,EAAjDA,UAAW2C,EAAsC,EAAtCA,UAAWhC,EAA2B,EAA3BA,SAAUkC,EAAiB,EAAjBA,YAE1CxD,EAAI4C,YAA2BjC,IAAY,SAAAkC,GAEvC,IAAM/B,EAAQ+B,EAAgBpC,WAAU,SAAAqC,GAAO,OAAIA,EAAQC,MAAQS,GAAiC,IAAlBV,EAAQG,SAC1F,GAAGnC,GAAS,EAAE,CACV,IAAM2C,EAAU,2BAAOZ,EAAgB/B,IAAvB,IAA+BmC,MAAO,EAAGF,IAAKO,EAAWhC,SAAUA,IACnF,OAAOuB,EAAgBjC,MAAM,EAAGE,GAAOD,OAAO,CAAC4C,IAAa5C,OAAOgC,EAAgBjC,MAAME,EAAM,IAEnG,OAAO+B,QAKba,EAA6BrE,mBAAS,CACxCC,IAAK,4BACLU,IAAK,cAAyB,IAAvBA,EAAsB,EAAtBA,IAAOW,EAAe,EAAfA,UACVX,EAAI4C,YAA2BjC,IAAY,SAAAkC,GACvC,OAAOA,EACF3B,KAAI,SAAA4B,GACD,OAAqB,IAAlBA,EAAQG,MACA,2BAAIH,GAAX,IAAoBG,MAAO,IAEpBH,Y,iCCjO/B,8CA8Cea,IAtCM,WAAO,IAAD,EAEkCC,cAAlDC,EAFgB,EAEhBA,sBAAuBC,EAFP,EAEOA,wBAiC9B,MAAO,CAACC,YA9BY,SAAC,GAAqH,IAApHC,EAAmH,EAAnHA,IAAmH,IAA9GC,kBAA8G,MAAlG,GAAkG,MAA9FC,wBAA8F,MAA7E,KAA6E,MAAvEC,sBAAuE,MAAtD,KAAsD,MAAhDC,wBAAgD,MAA/B,KAA+B,MAAzBC,sBAAyB,MAAV,KAAU,EA0BrIC,aAxByB,SAAAC,GAErBC,IAAMC,KAAN,UAAcC,IAAeC,QAA7B,OAAsCX,GAClCC,EACA,CACIW,QAAS,CACL,cAAiBL,KAGxBM,MAAK,SAAAC,GAECV,GAAkBN,EAAwBM,GAC1CF,GAAkBA,EAAiBY,EAAMP,MAE/CQ,OAAM,SAAAC,GAEAX,GAAgBR,EAAsBQ,GACtCF,GAAgBA,EAAea,a,iCChCtD,8DA2FIC,EAAsBC,cAAiB,SAAgBC,EAAOC,GAChE,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAeJ,EAAMK,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAkBN,EAAMO,SACxBA,OAA+B,IAApBD,EAA6B,QAAUA,EAClDE,EAAQC,YAAyBT,EAAO,CAAC,UAAW,YAAa,QAAS,aAE9E,OAAoBD,gBAAoBW,IAAOC,YAAS,CACtDC,QAAQ,EACRC,UAAW,SACXC,UAAW,EACXX,UAAWY,YAAKb,EAAQc,KAAMd,EAAQ,WAAWxE,OAAOuF,YAAWV,KAAaL,EAAQ,QAAQxE,OAAOuF,YAAWZ,KAAUF,EAAwB,UAAbI,GAAwB,aAC/JN,IAAKA,GACJO,OAoCUU,iBAtIK,SAAgBC,GAClC,IAAIC,EAAgD,UAAvBD,EAAME,QAAQC,KAAmBH,EAAME,QAAQE,KAAK,KAAOJ,EAAME,QAAQE,KAAK,KAC3G,MAAO,CAELP,KAAM,CACJQ,QAAS,OACTC,cAAe,SACfC,MAAO,OACPC,UAAW,aAEXC,OAAQT,EAAMS,OAAOC,OACrBC,WAAY,GAIdC,cAAe,CACbxB,SAAU,QACVyB,IAAK,EACLC,KAAM,OACNC,MAAO,EACP,eAAgB,CAEd3B,SAAU,aAKd4B,iBAAkB,CAChB5B,SAAU,WACVyB,IAAK,EACLC,KAAM,OACNC,MAAO,GAITE,eAAgB,CAEd7B,SAAU,SACVyB,IAAK,EACLC,KAAM,OACNC,MAAO,GAITG,eAAgB,CACd9B,SAAU,UAIZ+B,iBAAkB,CAChB/B,SAAU,YAIZgC,aAAc,CACZC,gBAAiBpB,EACjBf,MAAOc,EAAME,QAAQoB,gBAAgBrB,IAIvCsB,aAAc,CACZF,gBAAiBrB,EAAME,QAAQsB,QAAQC,KACvCvC,MAAOc,EAAME,QAAQsB,QAAQE,cAI/BC,eAAgB,CACdN,gBAAiBrB,EAAME,QAAQ0B,UAAUH,KACzCvC,MAAOc,EAAME,QAAQ0B,UAAUF,cAIjCG,aAAc,CACZ3C,MAAO,WAIT4C,iBAAkB,CAChBT,gBAAiB,cACjBnC,MAAO,cAuDqB,CAChC6C,KAAM,aADOhC,CAEZpB,I,iCChJH,sDAkCIqD,EAAuBpD,cAAiB,SAAiBC,EAAOC,GAClE,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBiD,EAAmBpD,EAAMa,UACzBwC,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAwBtD,EAAMuD,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAiBxD,EAAM/C,QACvBA,OAA6B,IAAnBuG,EAA4B,UAAYA,EAClDhD,EAAQC,YAAyBT,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,YAEpG,OAAoBD,gBAAoBsD,EAAW1C,YAAS,CAC1DR,UAAWY,YAAKb,EAAQc,KAAMd,EAAQjD,GAAUkD,GAAYoD,GAAkBrD,EAAQuD,SACtFxD,IAAKA,GACJO,OAqCUU,iBA9EK,SAAgBC,GAClC,MAAO,CAELH,KAAM,CACJT,SAAU,WACViB,QAAS,OACTkC,WAAY,UAIdD,QAASE,YAAgB,CACvBC,YAAazC,EAAM0C,QAAQ,GAC3BC,aAAc3C,EAAM0C,QAAQ,IAC3B1C,EAAM4C,YAAYC,GAAG,MAAO,CAC7BJ,YAAazC,EAAM0C,QAAQ,GAC3BC,aAAc3C,EAAM0C,QAAQ,KAI9BI,QAAS9C,EAAM+C,OAAOC,QAGtBC,MAAO,CACLC,UAAW,OAuDiB,CAChCnB,KAAM,cADOhC,CAEZiC,I,iCCrFH,IAAImB,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,iEACD,aAEJN,EAAQE,QAAUE,G,iCCflB,IAAIR,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,uDACD,QAEJN,EAAQE,QAAUE,G,iCCflB,IAAIR,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,8JACD,WAEJN,EAAQE,QAAUE,G,oKCflB,IAAIR,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,wNACD,YAEJN,EAAQE,QAAUE,G,yXCAZG,EAAYC,aAAW,SAAC/D,GAAD,YAAY,CACrCgE,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAanE,EAAM0C,QAAQ,KAE7B0B,MAAO,CACH/D,QAAS,QAMTgE,WAAYrE,EAAM0C,QAAQ,IAG9B4B,cAAY,GACR/D,MAAO,QADC,cAEPP,EAAM4C,YAAYC,GAAG,MAAQ,CAC1BtC,MAAOP,EAAM4C,YAAY2B,OAAOC,KAH5B,sBAKD,QALC,GAOZC,UAAW,CACTvF,MAAOc,EAAME,QAAQoB,gBAAgBoD,IAAK,MAC1CrD,gBAAiBqD,IAAK,MAExBC,YAAa,CACXzF,MAAOc,EAAME,QAAQoB,gBAAgBsD,IAAK,MAC1CvD,gBAAiBuD,IAAK,UAKtBC,EAAoB9E,aAAW,SAACC,GAAD,MAAY,CAC7C8E,MAAO,CACHzD,gBAAiB,UACjBnC,MAAO,UACP6F,UAAU,aAAD,OAAe/E,EAAME,QAAQ8E,WAAWC,OACjD,WAAY,CACR7F,SAAU,WACVyB,IAAK,EACLC,KAAM,EACNP,MAAO,OACP2E,OAAQ,OACRC,aAAc,MACdC,UAAW,oCACXC,OAAQ,yBACR3I,QAAS,OAGjB,oBAAqB,CACjB,KAAM,CACF4I,UAAW,YACXC,QAAS,GAEb,OAAQ,CACJD,UAAW,aACXC,QAAS,OAxBKxF,CA2BtByF,KAEEC,EAAqB1F,aAAW,SAACC,GAAD,MAAY,CAC9C8E,MAAO,CACHzD,gBAAiBrB,EAAME,QAAQE,KAAK,KACpClB,MAAOc,EAAME,QAAQE,KAAK,KAE1B2E,UAAU,aAAD,OAAe/E,EAAME,QAAQ8E,WAAWC,OACjD,WAAY,CACR7F,SAAU,WACVyB,IAAK,EACLC,KAAM,EACNP,MAAO,OACP2E,OAAQ,OACRC,aAAc,MACdE,OAAQ,yBACR3I,QAAS,OAGjB,oBAAqB,CACjB,KAAM,CACF4I,UAAW,YACXC,QAAS,GAEb,OAAQ,CACJD,UAAW,aACXC,QAAS,OAxBMxF,CA2BvByF,KAEEE,EAAc,SAAA7G,GAEhB,OAAGA,EAAM8G,QAAQnM,UAA+C,IAAnCqF,EAAM8G,QAAQpM,iBAC/B,kBAACsL,EAAD,CACAe,QAAQ,SACJC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBjK,QAAQ,OAEP+C,EAAMmH,UAKX,kBAACP,EAAD,CACJG,QAAQ,SACJC,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBjK,QAAQ,OAEP+C,EAAMmH,WA2CRC,EArCQ,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,UAAWP,EAAa,EAAbA,QAE1B5G,EAAU+E,IAEVqC,EAAYR,EAAQQ,UAAY/H,IAAeC,OAASsH,EAAQQ,UAAY,KAC5EC,EAAkC,MAAnBT,EAAQU,OAAiB,YAAc,cAE5D,OACI,kBAAC1H,EAAA,EAAD,CAAQS,SAAS,QAAQJ,UAAWD,EAAQuF,cACxC,kBAAC,IAAD,KACI,kBAACgC,EAAA,EAAD,CACIC,KAAK,QACLvH,UAAWD,EAAQmF,WACnBhF,MAAM,UACNsH,aAAW,cACXC,QAASP,GAET,kBAAC,IAAD,OAEA,kBAAC,EAAD,CAAaP,QAASA,GAClB,kBAACe,EAAA,EAAD,CACIC,IAAKR,EACLnH,UAAW2G,EAAQU,QAAUD,KAGzC,kBAACQ,EAAA,EAAD,CAAY5H,UAAWD,EAAQqF,MAAOtI,QAAQ,KAAK+K,QAAM,GACpDlB,EAAQlK,UAEb,yBAAKuD,UAAWD,EAAQiF,OACxB,kBAACsC,EAAA,EAAD,CAAYE,aAAW,mBAAmBtH,MAAM,WAC5C,kBAAC,IAAD,UCpJL4H,EAhBc,WAAO,IAAD,EAEQC,yBAAeC,KAFvB,mBAExBC,EAFwB,KAEbC,EAFa,KAIzBvB,EADUwB,yBAAerO,KACPsO,MAAK,SAAAhN,GAAC,OAAIA,EAAEC,YAAc4M,KAMlD,OAAO,kBAAC,EAAD,CACHf,UALc,WACdgB,EAAkB,OAKlBvB,QAASA,KCXF0B,EALI,SAAAxI,GAEf,OAAO,kBAAC,EAAD,O,gBCYIyI,EAhBE,CACfC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,W,sDCHFC,EAAkBtE,aAAW,SAAA/D,GAAK,MAAK,CACzCxD,QAAS,CACL8L,QAAQ,GAAD,OAAKtI,EAAM0C,QAAQ,GAAnB,cAA2B1C,EAAM0C,QAAQ,GAAzC,MACP6F,SAAU,MAEVC,UAAWxI,EAAM0C,QAAQ,GACzB+F,aAAc,EACdpE,WAAW,GAAD,OAAKrE,EAAM0C,QAAQ,GAAnB,MACVyB,YAAY,GAAD,OAAKnE,EAAM0C,QAAQ,GAAnB,MACXyC,aAAc,OACd9D,gBAAiBrB,EAAME,QAAQwI,KAAKC,KACpCzJ,MAAOc,EAAME,QAAQwI,KAAKhH,aAC1BtC,SAAU,YAEdwJ,YAAY,aACRnG,YAAazC,EAAM0C,QAAQ,GAE3B6F,SAAU,MACVE,aAAczI,EAAM0C,QAAQ,GAC5B2B,WAAW,GAAD,OAAKrE,EAAM0C,QAAQ,GAAnB,MACVyB,YAAY,GAAD,OAAKnE,EAAM0C,QAAQ,GAAnB,MACXxD,MAAOc,EAAME,QAAQ2I,KAAKC,UACvB9I,EAAM+I,WAAWC,WAExBC,MAAO,CACHC,UAAW,QACXC,UAAW,WACXhE,aAAc,oBAElBiE,SAAU,CACND,UAAW,aACXhE,aAAc,oBAElBkE,UAAW,CACP9I,MAAOP,EAAM0C,QAAQ,GACrBwC,OAAQlF,EAAM0C,QAAQ,GACtBtD,SAAU,WACVyB,IAAI,IAAD,OAAMb,EAAM0C,QAAQ,KAApB,OAEP4G,YAAc,CACVvI,MAAM,IAAD,OAAMf,EAAM0C,QAAQ,KAApB,OAGT6G,eAAgB,CACZzI,KAAK,IAAD,OAAMd,EAAM0C,QAAQ,KAApB,OAER8G,SAAU,CACNrF,YAAanE,EAAM0C,QAAQ,GAC3B+G,SAAUzJ,EAAM0C,QAAQ,UAI1BgH,EAAU9K,IAAM+K,MAClB,YAA6D,IAA3DhN,EAA0D,EAA1DA,MAAOD,EAAmD,EAAnDA,QAAS1B,EAA0C,EAA1CA,SAAU2K,EAAgC,EAAhCA,QAASiE,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,OAE1C9K,EAAUsJ,IAEVyB,EAAWnN,EAAQ,EAAIoC,EAAQkK,MAAQlK,EAAQqK,SAC/CW,EAAcpN,EAAQ,EAAIoC,EAAQuK,YAAcvK,EAAQwK,eACxDpD,EAAYxJ,EAAQ,EAAIiN,EAAYxL,IAAeC,OAASsH,EAAQQ,UAEpE6D,EAAqB,OAAXH,EAAkB,CAAEI,OAAQC,KAAO,GAC7CC,EAAOC,YAAe,IAAIC,KAAKrP,GAAW,IAAIqP,KAAQL,GAExDM,EAAY,KAMhB,OALa,IAAV3N,IAAa2N,EAAY,kBAAC,IAAD,CAAUtL,UAAWD,EAAQyK,SAAUe,MAAO,CAAErL,MAAOkB,IAAK,SAC3E,IAAVzD,IAAa2N,EAAY,kBAAC,IAAD,CAAatL,UAAWD,EAAQyK,SAAUe,MAAO,CAAErL,MAAOkB,IAAK,SAC9E,IAAVzD,IAAa2N,EAAY,kBAAC,IAAD,CAAatL,UAAWD,EAAQyK,SAAUe,MAAO,CAAErL,MAAOoI,EAAW,SAGzF,oCACJ,yBAAKtI,UAAS,UAAKD,EAAQvC,QAAb,YAAwBsN,IAClC,kBAACpD,EAAA,EAAD,CACI8D,IAAK7E,EAAQlK,SACbkL,IAAKR,EACLrK,QAAQ,SACRkD,UAAS,UAAKD,EAAQsK,UAAb,YAA0BU,KAGtCrN,GAEL,0BAAMsC,UAAS,WAAM8K,IACjB,0BAAM9K,UAAS,UAAKD,EAAQ6J,cACvBuB,GAEJG,OAOPG,EAAe1G,aAAW,SAAA/D,GAAK,MAAK,CACtC0K,iBAAkB,CACdtL,SAAU,WACV6E,SAAU,EACV5D,QAAS,OACTC,cAAe,SACfqK,UAAW,OACXzF,OAAQ,QAGZ0F,OAAQ5K,EAAM+C,OAAOC,QACrB6H,WAAW,2BACJ7K,EAAM+C,OAAOC,SADV,IAEN8H,OAAQ,EACR1L,SAAU,iBA4BH2L,EAxBM,SAAC,GAA4C,IAA3CpF,EAA0C,EAA1CA,QAASiE,EAAiC,EAAjCA,UAAWoB,EAAsB,EAAtBA,SAAUnB,EAAY,EAAZA,OAEjDjL,IAAMqM,WAAU,WACZ,IAAIC,EAAUC,SAASC,eAAe,oBACnCF,IACCA,EAAQG,UAAYH,EAAQI,iBAGpC,IAAMvM,EAAU0L,IAChB,OAEY,yBAAKc,GAAG,mBAAmBvM,UAAWD,EAAQ2L,kBAC1C,yBAAK1L,UAAWD,EAAQ6L,SAEpBI,EAASpQ,KAAI,SAAC4Q,EAAMnQ,EAAKoQ,GACrB,OAAO,kBAAC/B,EAAD,iBAAa8B,EAAb,CAAmBxS,IAAKqC,EAAKsK,QAASA,EAASiE,UAAWA,EAAWC,OAAQA,QAG5F,yBAAK7K,UAAWD,EAAQ8L,e,2BCvE7Ba,EA3DY,WAEvB,IAAMzE,EAAYE,yBAAeH,KAC3B2E,EAAmBC,4BAAkB5P,KACrCgP,EAAW7D,yBAAe7K,YAA2B2K,IACrD2C,EAAYzC,yBAAe0E,KAC3BC,EAAW3E,yBAAe4E,KAC1BlC,EAAS1C,yBAAetL,KAExB9B,EAAUoN,yBAAerO,KACxB2E,EAAeJ,cAAfI,YACDkI,EAAU5L,EAAQqN,MAAK,SAAAhN,GAAC,OAAIA,EAAEC,YAAc4M,KAoClD,OAJAgE,qBAAU,WA5BiB,IAApBD,EAAS7R,QACRsE,EAAY,CACRC,IAAK,iCACLK,eAAgB8K,EAAKmD,sBAAsBnC,GAC3ClM,WAAY,CAACtD,UAAWsL,EAAQtL,WAChCuD,iBAAkB,SAACY,EAAMP,GACF,MAAhBO,EAAKyN,SAEJN,EAAiB,CACbtR,UAAWsL,EAAQtL,UACnB4B,aAAcuC,EAAK9D,KAAKuB,eAIbiQ,IAAaC,YACrBC,KAAK,gBAAiB,CACzBC,SAAUP,EAASvQ,OACnB+Q,YAAa3G,EAAQtL,UACrBkS,kBAAmB5G,EAAQnM,SAC3ByE,MAAOA,UAW5B,IAEA+M,EACQ,kBAAC,EAAD,CACKrF,QAASA,EACTiE,UAAWA,EACXoB,SAAUA,EACVnB,OAAQA,IAGb,MCzDA2C,EALE,SAAA3N,GAEb,OAAO,kBAAC,EAAD,O,0BCGLiF,EAAYC,aAAW,SAAA/D,GAAK,YAAK,CACnCU,QAAM,GACFG,IAAK,OACLiK,OAAQ,EACR1L,SAAU,QACVmB,MAAO,QAJL,cAKDP,EAAM4C,YAAYC,GAAG,MAAQ,CAC1BtC,MAAOP,EAAM4C,YAAY2B,OAAOC,KANlC,sBAQK,QARL,GAUNR,KAAM,CACFC,SAAU,GAEdjB,QAAS,CACLsF,QAAS,GAEbmE,KAAM,CACFhD,SAAUzJ,EAAM0C,QAAQ,OAE5BgK,SAAU,CACNrH,OAAQ,kBACRsH,WAAY,UACZlD,SAAU,QACVnB,QAAS,UACTjH,gBAAiBrB,EAAME,QAAQ8E,WAAWC,MAE1C/F,MAAOc,EAAME,QAAQ2I,KAAKrH,QAE1BjB,MAAO,OACPiI,UAAWxI,EAAM0C,QAAQ,GACzB+F,aAAezI,EAAM0C,QAAQ,GAC7BkK,UAAW5M,EAAM0C,QAAQ,IACzBQ,UAAWlD,EAAM0C,QAAQ,GACzBiI,UAAW,OACXxF,aAAcnF,EAAM0C,QAAQ,IAC5B2B,WAAYrE,EAAM0C,QAAQ,GAC1BmK,OAAQ,YAqBDC,GAhBQ,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,SAC1ClO,EAAU+E,IAEhB,OACI,kBAACnF,EAAA,EAAD,CAAQO,MAAM,UAAWF,UAAWD,EAAQ2B,QACxC,kBAACsB,EAAA,EAAD,CAASlG,QAAQ,QAAQkD,UAAWD,EAAQiE,SACxC,yBAAKhE,UAAWD,EAAQ2N,SAAWQ,KAAK,UAAUC,iBAAe,EAACrO,IAAKkO,EAAcI,WAAYH,IACjG,yBAAKjO,UAAWD,EAAQiF,OACxB,kBAACsC,EAAA,EAAD,CAAYpH,MAAM,UAAUuH,QAASsG,GACjC,kBAAC,IAAD,CAAc/N,UAAWD,EAAQ0N,W,UCYtCY,GA7Dc,SAAAxO,GAAU,IAE5ByO,EAA2BC,cAA3BD,wBACDE,EAAWrG,yBAAe4E,KAC1BlC,EAAS1C,yBAAetL,KACxB4R,EAAuB7B,4BAAkB9O,KACzCmK,EAAYE,yBAAeH,KAE3BrB,EADUwB,yBAAerO,KACPsO,MAAK,SAAAhN,GAAC,OAAIA,EAAEC,YAAc4M,KAC5C+F,EAAeU,iBAAO,IATM,EAUIC,mBAAS,GAVb,mBAU3BzQ,EAV2B,KAUd0Q,EAVc,KAa5Bb,EAAc,WAIJ,KAFIC,EAAaa,QAAQC,UAChBC,QAAQ,wBAAyB,QAElDN,EAAqB,CACjBpT,UAAWsL,EAAQtL,UACnB2C,UAAWE,EACXR,QAASsQ,EAAaa,QAAQC,UAC9B9S,SAAU,IAAIqP,KACd1N,MAAO,IAEXiR,GAAe,SAAAI,GAAI,OAAIA,EAAO,KAEf9B,IAAaC,YACrBC,KAAK,eAAgB,CACxB1P,QAASsQ,EAAaa,QAAQC,UAC9B3R,aAAcqR,EAASjS,OACvB0S,cAAehH,EACfiH,WAAYvI,EAAQnM,SACpByE,MAAOkQ,aAAaC,QAAQ,SAC5BlR,YAAaA,IAGjB8P,EAAaa,QAAQC,UAAY,GACjCd,EAAaa,QAAQQ,UAgB7B,OAJApD,qBAAU,WACuB,IAA7BtF,EAAQpM,iBAAyByT,EAAaa,QAAQQ,QAAUf,EAAwBzE,GAAKyF,YAAYzE,MAC1G,IAEiC,IAA7BlE,EAAQpM,iBAAyB,kBAAC,GAAD,CACpCwT,YAAaA,EACbE,SAda,SAACsB,GAEQ,KAAnBA,EAAMC,WACLD,EAAME,iBACN1B,MAWJC,aAAcA,IACb,MC3DM0B,GALI,SAAA7P,GAEf,OAAO,kBAAC,GAAD,OCcI8P,GAXE,WAEb,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,QCPGC,UAJF,SAAA/P,GAET,OAAO,kBAAC,GAAD","file":"static/js/9.64867cfe.chunk.js","sourcesContent":["import {selector} from 'recoil';\r\n\r\nimport {friendsAtom, idiomaState, messagesAtom, getConversationWithContact} from './atoms';\r\n\r\nconst friendSelector = selector({\r\n    key: 'friendSelector',\r\n    get: ({get}) => {\r\n        if(get(friendsAtom).length > 0){\r\n            const friends = [...get(friendsAtom)];\r\n\r\n            return friends.sort(\r\n                (f1,f2) => {\r\n                    \r\n                    if(f1.friendShipStatus === 1 && f2.friendShipStatus === 1){\r\n                        if(f1.socketId && !f2.socketId) return -1;\r\n                        if(!f1.socketId && f2.socketId) return 1;    \r\n                    }\r\n                    if(f1.friendShipStatus < f2.friendShipStatus) return -1; \r\n                    if(f1.friendShipStatus > f2.friendShipStatus) return 1;\r\n                    if(f1.email < f2.email) return -1; \r\n                    if(f1.email > f2.email) return 1; \r\n                }\r\n            );\r\n        }else{\r\n            return [];\r\n        }\r\n        \r\n    },\r\n    set: async ({set, get}, {action, payload}) => {\r\n\r\n        switch(action){\r\n            case 'initialize': \r\n                set(friendsAtom, oldFriends => {\r\n                    if(oldFriends.length === 0){\r\n                        return payload.friends;\r\n                    }\r\n                    return oldFriends;\r\n                });\r\n                break;\r\n            case 'add':\r\n                set(friendsAtom, oldFriends => {\r\n                    const friends = [...oldFriends];\r\n                    friends.push(payload.friend);\r\n                    return friends;\r\n                });\r\n                break;\r\n            case 'update':\r\n                set(friendsAtom, oldFriends => {\r\n                    const fIndex = oldFriends.findIndex(f => f.contactId === payload.friend.contactId);\r\n                    const friends = oldFriends.slice(0, fIndex)\r\n                                            .concat([payload.friend])\r\n                                            .concat(oldFriends.slice(fIndex+1));\r\n                    return friends;\r\n                });\r\n                break;\r\n            case 'reset_cant_no_leidos':\r\n                set(friendsAtom, oldFriends => {\r\n                    const index = oldFriends.findIndex(friend => friend.contactId === payload.contactId);\r\n                    return oldFriends.slice(0, index).concat([{...oldFriends[index], unread: 0}]).concat(oldFriends.slice(index+1));\r\n                });\r\n                break;\r\n            case 'set_message_info': // Para poner la cantidad de mensajes sin leer, el ultimo mensaje y la fecha del ultimo mensaje\r\n                set(friendsAtom, oldFriends => {\r\n                    const data = payload.dataObj;\r\n                    const newFriends = oldFriends.map(friend => {\r\n                        if(data[friend.contactId]){\r\n                            let cantidad = 0;\r\n                            if(friend.unread){\r\n                                cantidad = friend.unread;\r\n                            }\r\n                            if(data[friend.contactId].cantidad){\r\n                                cantidad += data[friend.contactId].cantidad; \r\n                            }\r\n                            return {...friend, \r\n                                unread:  cantidad,\r\n                                lastMsg: data[friend.contactId].lastMessage,\r\n                                datetime: data[friend.contactId].datetime\r\n                            }\r\n                        }\r\n                        return friend;\r\n                    });\r\n                    return newFriends;\r\n                });\r\n            break;\r\n            case 'delete':\r\n                set(friendsAtom, oldFriends => {\r\n                    return oldFriends.filter(f => f.contactId !== payload.friendId);\r\n                });\r\n                break;\r\n            case 'connect':                \r\n                if(Array.isArray(payload.data)){\r\n                    set(friendsAtom, oldFriends => {\r\n                        return oldFriends.map(friend => {\r\n                            const idx = payload.data.findIndex(dat => dat.userId === friend.contactId);\r\n                            if(idx >= 0){\r\n                                return {...friend, socketId: payload.data[idx].socketId};     \r\n                            }\r\n                            return {...friend};\r\n                        });\r\n                    }); \r\n                }else{\r\n\r\n                    const {userId, socketId} = payload.data;\r\n                    let conectedFriendName = null;\r\n                    let friendShipStatus = 0;\r\n                    \r\n                    set(friendsAtom, oldFriends => {\r\n                        const fIndex = oldFriends.findIndex(f => f.contactId === userId);\r\n                        if(fIndex >= 0){\r\n                            conectedFriendName = oldFriends[fIndex].nickname;\r\n                            friendShipStatus = oldFriends[fIndex].friendShipStatus;\r\n                            const updatedFriend = {...oldFriends[fIndex], socketId: socketId };\r\n                        \r\n                            const friends = oldFriends.slice(0, fIndex)\r\n                                                    .concat([updatedFriend])\r\n                                                    .concat(oldFriends.slice(fIndex+1));\r\n                            return friends;\r\n                        }\r\n                        return oldFriends;\r\n                    });\r\n                    if(conectedFriendName && friendShipStatus === 1)\r\n                        payload.notification(`${conectedFriendName} ${payload.msg[get(idiomaState)]}`, {variant: 'info'});\r\n                }                \r\n                break;\r\n            case 'disconnect':\r\n                let disconectedFriendName = null;\r\n                let friendShipStatus = 0;\r\n                \r\n                set(friendsAtom, oldFriends => {\r\n                    \r\n                    const index = oldFriends.findIndex(friend => friend.socketId === payload.socketId);\r\n                    if(index >= 0){\r\n                        disconectedFriendName = oldFriends[index].nickname;\r\n                        friendShipStatus = oldFriends[index].friendShipStatus;\r\n                        return [...oldFriends].slice(0, index).concat([{...oldFriends[index], socketId: null}]).concat(oldFriends.slice(index+1));\r\n                    }\r\n                    return oldFriends;\r\n                });\r\n                if(disconectedFriendName && friendShipStatus === 1)\r\n                    payload.notification(`${disconectedFriendName} ${payload.msg[get(idiomaState)]}`, {variant: 'warning'});\r\n                break;\r\n            \r\n                default: break;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\nconst messageStates = {\r\n    'NINGUNO': 0, // Cuando no es enviado por el propio usuario, sino que se lo enviaron a el, por lo que los estados no tienen sentido para este tipo de mensajes\r\n    'ENVIADO': 1,\r\n    'GUARDADO': 2,\r\n    'LEIDO': 3\r\n};\r\n\r\nconst initConversationSelector = selector({\r\n    key:'conversationSelector',\r\n    set: ({set}, {contactId, conversation}) => {\r\n\r\n        const getMessageState = (userOriginId, UserDestinyId, contactId, readed) => {\r\n\r\n            if(userOriginId === contactId){\r\n                return 0;\r\n            }else if(UserDestinyId === contactId){\r\n                return readed ? 3 : 2;\r\n            }\r\n        }\r\n\r\n        set(getConversationWithContact(contactId), oldConversation => {\r\n            return conversation.map(message => {\r\n                return {\r\n                    _id: message._id,\r\n                    content: message.content,\r\n                    datetime: message.datetime,\r\n                    state: getMessageState(message.userOrigin, message.userDestiny, contactId, message.readed)\r\n                };\r\n            })\r\n        });\r\n    }\r\n});\r\n\r\nconst addMsgToConversationSelector = selector({\r\n    key: 'addMessageToConversation',\r\n    set: ({set}, {contactId, messageId, content, datetime, state}) => {\r\n        const newMessageObj = {\r\n            _id: messageId,\r\n            content: content,\r\n            datetime: datetime,\r\n            state: state\r\n        };        \r\n        \r\n        set(getConversationWithContact(contactId), oldConversation => {\r\n            return oldConversation.concat([newMessageObj]);\r\n        });\r\n\r\n    }\r\n});\r\n\r\n\r\nconst editMsgToStateSavedSelector = selector({\r\n    key: 'editMsgToStateSavedSelector',\r\n    set: ({set}, {contactId, messageId, datetime, consecutive}) => {\r\n        \r\n        set(getConversationWithContact(contactId), oldConversation => {\r\n            \r\n            const index = oldConversation.findIndex(message => message._id === consecutive && message.state === 1);\r\n            if(index >= 0){\r\n                const modMessage = {...oldConversation[index], state: 2, _id: messageId, datetime: datetime};\r\n                return oldConversation.slice(0, index).concat([modMessage]).concat(oldConversation.slice(index+1));\r\n            }\r\n            return oldConversation;\r\n        });\r\n    }\r\n});\r\n\r\nconst editAllMsgToReadedSelector = selector({\r\n    key: 'editAllMsgToSavedSelector',\r\n    set: ({set}, {contactId}) => {\r\n        set(getConversationWithContact(contactId), oldConversation => {\r\n            return oldConversation\r\n                .map(message => {\r\n                    if(message.state !== 0)\r\n                        return {...message, state: 3}\r\n                    else\r\n                        return message;\r\n                });\r\n        });\r\n    }\r\n});\r\n\r\nexport {friendSelector, initConversationSelector, addMsgToConversationSelector, editMsgToStateSavedSelector, editAllMsgToReadedSelector}","//import React from 'react';\r\nimport axios from 'axios';\r\n//import {useSetRecoilState} from 'recoil';\r\nimport authMidleware from '../authMiddleware';\r\nimport useNotificationHook from '../components/uiComponents/notification/notification.hook';\r\nimport {DEFAULT_CONFIG} from '../conf/configuration';\r\n//import useBackdrop from '../components/uiComponents/backdrop/useBackdrop';\r\n\r\nconst useAxiosHook = () => {\r\n\r\n    const {openErrorNotification, openSuccessNotification} = useNotificationHook();\r\n    //const {closeBackDrop, showBackDrop} = useBackdrop();\r\n\r\n    const postRequest = ({url, bodyParams= {}, doFnAfterSuccess=null, doFnAfterError = null, messageOnSuccess=null, messageOnError=null}) => {\r\n        \r\n        const optimisticAction = token => {\r\n            //showBackDrop();\r\n            axios.post(`${DEFAULT_CONFIG.server}${url}`, \r\n                bodyParams, \r\n                {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                .then(resp => {\r\n                    //closeBackDrop();\r\n                    if(messageOnSuccess) openSuccessNotification(messageOnSuccess);\r\n                    if(doFnAfterSuccess) doFnAfterSuccess(resp, token);\r\n                })\r\n                .catch(err => {\r\n                    //closeBackDrop();\r\n                    if(messageOnError) openErrorNotification(messageOnError);\r\n                    if(doFnAfterError) doFnAfterError(err);\r\n                })\r\n        }\r\n        /*const pesimisticAction = () => {            \r\n            clearUserData();\r\n        }*/\r\n        \r\n        authMidleware(optimisticAction/*, pesimisticAction*/);\r\n    };   \r\n\r\n\r\n    return {postRequest};\r\n\r\n}\r\nexport default useAxiosHook;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  var backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      boxSizing: 'border-box',\n      // Prevent padding issue with the Modal and fixed positioned AppBar.\n      zIndex: theme.zIndex.appBar,\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `position=\"fixed\"`. */\n    positionFixed: {\n      position: 'fixed',\n      top: 0,\n      left: 'auto',\n      right: 0,\n      '@media print': {\n        // Prevent the app bar to be visible on each printed page.\n        position: 'absolute'\n      }\n    },\n\n    /* Styles applied to the root element if `position=\"absolute\"`. */\n    positionAbsolute: {\n      position: 'absolute',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"sticky\"`. */\n    positionSticky: {\n      // ⚠️ sticky is not supported by IE 11.\n      position: 'sticky',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"static\"`. */\n    positionStatic: {\n      position: 'static'\n    },\n\n    /* Styles applied to the root element if `position=\"relative\"`. */\n    positionRelative: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if `color=\"default\"`. */\n    colorDefault: {\n      backgroundColor: backgroundColorDefault,\n      color: theme.palette.getContrastText(backgroundColorDefault)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"transparent\"`. */\n    colorTransparent: {\n      backgroundColor: 'transparent',\n      color: 'inherit'\n    }\n  };\n};\nvar AppBar = /*#__PURE__*/React.forwardRef(function AppBar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$position = props.position,\n      position = _props$position === void 0 ? 'fixed' : _props$position,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"position\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    component: \"header\",\n    elevation: 4,\n    className: clsx(classes.root, classes[\"position\".concat(capitalize(position))], classes[\"color\".concat(capitalize(color))], className, position === 'fixed' && 'mui-fixed'),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AppBar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary', 'transparent']),\n\n  /**\n   * The positioning type. The behavior of the different options is described\n   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).\n   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.\n   */\n  position: PropTypes.oneOf(['absolute', 'fixed', 'relative', 'static', 'sticky'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAppBar'\n})(AppBar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z\"\n}), 'DoneAll');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9.78 18.65l.28-4.23 7.68-6.92c.34-.31-.07-.46-.52-.19L7.74 13.3 3.64 12c-.88-.25-.89-.86.2-1.3l15.97-6.16c.73-.33 1.43.18 1.15 1.3l-2.72 12.81c-.19.91-.74 1.13-1.5.71L12.6 16.3l-1.99 1.93c-.23.23-.42.42-.83.42z\"\n}), 'Telegram');\n\nexports.default = _default;","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ToolBar from '@material-ui/core/Toolbar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport {blue, pink} from '@material-ui/core/colors';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {DEFAULT_CONFIG} from '../../../conf/configuration'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(0.5),\r\n    },\r\n    title: {\r\n        display: 'block',\r\n        //display: 'none',\r\n        /*[theme.breakpoints.up('xs')]: {\r\n          display: 'block',\r\n        },*/\r\n\r\n        marginLeft: theme.spacing(1)\r\n        \r\n    },\r\n    customAppBar: {\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.breakpoints.values.sm,\r\n        },\r\n        right: 'auto'\r\n    },\r\n    avatarMan: {\r\n      color: theme.palette.getContrastText(blue[400]),\r\n      backgroundColor: blue[400],\r\n    },\r\n    avatarWoman: {\r\n      color: theme.palette.getContrastText(pink[300]),\r\n      backgroundColor: pink[300],\r\n    }\r\n}));\r\n\r\n\r\nconst OnlineStyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: '#44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: '$ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst OfflineStyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: theme.palette.grey[500],\r\n        color: theme.palette.grey[500],\r\n        \r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst OnlineBadge = props => {\r\n    \r\n    if(props.contact.socketId && props.contact.friendShipStatus === 1){\r\n        return (<OnlineStyledBadge\r\n                overlap=\"circle\"\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    variant=\"dot\"\r\n                >\r\n                    {props.children}\r\n                </OnlineStyledBadge>)\r\n            ;\r\n    }\r\n    else {\r\n        return (<OfflineStyledBadge\r\n            overlap=\"circle\"\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                variant=\"dot\"\r\n            >\r\n                {props.children}\r\n            </OfflineStyledBadge>)\r\n        ;\r\n    }\r\n}\r\n\r\nconst ChatHeaderView = ({closeChat, contact}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const avatarUrl = contact.avatarUrl ? DEFAULT_CONFIG.server + contact.avatarUrl : null;\r\n    const avatarGender = contact.gender === \"M\" ? 'avatarMan' : \"avatarWoman\";\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.customAppBar}>\r\n            <ToolBar>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={closeChat}\r\n                >\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                    <OnlineBadge contact={contact}>\r\n                        <Avatar\r\n                            src={avatarUrl}\r\n                            className={contact.gender && avatarGender}\r\n                        />\r\n                    </OnlineBadge>\r\n                <Typography className={classes.title} variant=\"h5\" noWrap>\r\n                    {contact.nickname}\r\n                </Typography>\r\n                <div className={classes.grow} />\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n            </ToolBar>\r\n        </AppBar>\r\n    );\r\n\r\n}\r\nexport default ChatHeaderView;","import React from 'react';\r\nimport {useRecoilValue, useRecoilState} from 'recoil';\r\nimport { friendSelector } from '../../../components/recoil/selectors'; \r\nimport { activeChatWith } from '../../../components/recoil/atoms'; \r\nimport ChatHeaderView from './chatHeader.view';\r\n\r\nconst ChatHeaderController = () => {\r\n\r\n    const [idContact, setActiveChatWith] = useRecoilState(activeChatWith);\r\n    const friends = useRecoilValue(friendSelector);\r\n    const contact = friends.find(f => f.contactId === idContact);\r\n\r\n    const closeChat = () => {\r\n        setActiveChatWith(null);\r\n    }\r\n    \r\n    return <ChatHeaderView \r\n        closeChat={closeChat}\r\n        contact={contact}\r\n    />;\r\n\r\n}\r\nexport default ChatHeaderController;","import React from 'react';\r\nimport ChatHeaderController from './chatHeader.controller';\r\nconst ChatHeader = props => {\r\n\r\n    return <ChatHeaderController />;\r\n\r\n}\r\nexport default ChatHeader;","var lightGreen = {\n  50: '#f1f8e9',\n  100: '#dcedc8',\n  200: '#c5e1a5',\n  300: '#aed581',\n  400: '#9ccc65',\n  500: '#8bc34a',\n  600: '#7cb342',\n  700: '#689f38',\n  800: '#558b2f',\n  900: '#33691e',\n  A100: '#ccff90',\n  A200: '#b2ff59',\n  A400: '#76ff03',\n  A700: '#64dd17'\n};\nexport default lightGreen;","import React from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { grey, lightGreen, green } from '@material-ui/core/colors';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport {DEFAULT_CONFIG} from '../../../conf/configuration';\r\nimport { formatRelative } from 'date-fns'\r\nimport { es } from 'date-fns/locale';\r\n\r\nconst useMessageStyle = makeStyles(theme => ({\r\n    message: {\r\n        padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\r\n        maxWidth: '60%',\r\n        //margin: `${theme.spacing(2)}px ${theme.spacing(2)}px`,\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: 0,\r\n        marginLeft: `${theme.spacing(2)}px`,\r\n        marginRight: `${theme.spacing(2)}px`,        \r\n        borderRadius: '10px',\r\n        backgroundColor: theme.palette.info.dark,\r\n        color: theme.palette.info.contrastText,\r\n        position: \"relative\"\r\n    },\r\n    timeMessage: {\r\n        paddingLeft: theme.spacing(2),\r\n        //paddingRight: theme.spacing(2),\r\n        maxWidth: '60%',\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: `${theme.spacing(2)}px`,\r\n        marginRight: `${theme.spacing(1)}px`,\r\n        color: theme.palette.text.disabled,\r\n        ...theme.typography.subtitle2\r\n    },\r\n    mymsg: {\r\n        textAlign: 'right',\r\n        alignSelf: 'flex-end',\r\n        borderRadius: '10px 0 10px 10px'\r\n    },\r\n    notmymsg: { \r\n        alignSelf: 'flex-start',\r\n        borderRadius: '0 10px 10px 10px'\r\n    },\r\n    msgAvatar: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        position: \"absolute\",\r\n        top: `-${theme.spacing(1.5)}px`,\r\n    },\r\n    myMsgAvatar : {\r\n        right: `-${theme.spacing(1.5)}px`,\r\n        \r\n    },\r\n    notMyMsgAvatar: {\r\n        left: `-${theme.spacing(1.5)}px`\r\n    },\r\n    doneIcon: {\r\n        marginRight: theme.spacing(1),\r\n        fontSize: theme.spacing(2.2)\r\n    }\r\n}));\r\n\r\nconst Message = React.memo(\r\n    ({state, content, datetime ,contact, avatarSrc, idioma}) => {\r\n\r\n    const classes = useMessageStyle();\r\n\r\n    const msgStyle = state > 0 ? classes.mymsg : classes.notmymsg;\r\n    const avatarStyle = state > 0 ? classes.myMsgAvatar : classes.notMyMsgAvatar;\r\n    const avatarUrl = state > 0 ? avatarSrc : DEFAULT_CONFIG.server + contact.avatarUrl;\r\n\r\n    const options = idioma === 'es' ? { locale: es } : {};\r\n    const date = formatRelative(new Date(datetime), new Date(), options)\r\n    \r\n    let stateIcon = null;\r\n    if(state === 1) stateIcon = <DoneIcon className={classes.doneIcon} style={{ color: grey[500] }}/>\r\n    if(state === 2) stateIcon = <DoneAllIcon className={classes.doneIcon} style={{ color: grey[500] }}/>\r\n    if(state === 3) stateIcon = <DoneAllIcon className={classes.doneIcon} style={{ color: lightGreen[500] }}/>\r\n    \r\n\r\n    return (<>\r\n        <div className={`${classes.message} ${msgStyle}`}>\r\n            <Avatar\r\n                alt={contact.nickname}\r\n                src={avatarUrl}\r\n                variant=\"circle\"\r\n                className={`${classes.msgAvatar} ${avatarStyle}`}\r\n                \r\n            />\r\n            {content}\r\n        </div>\r\n        <span className={` ${msgStyle}`}>\r\n            <span className={`${classes.timeMessage}`}>\r\n                {date}\r\n            </span>\r\n            {stateIcon}\r\n        </span>\r\n        \r\n    </>\r\n    );\r\n});\r\n\r\nconst useChatStyle = makeStyles(theme => ({\r\n    chatConversation: {\r\n        position: 'relative',\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n        height: '100%'\r\n        \r\n    },\r\n    offset: theme.mixins.toolbar,\r\n    offsetDown: {\r\n        ...theme.mixins.toolbar, \r\n        bottom: 0,\r\n        position: 'relative'\r\n    }\r\n}));\r\n\r\nconst ChatBodyView = ({contact, avatarSrc, messages, idioma}) => {\r\n\r\n    React.useEffect(() => {\r\n        var element = document.getElementById('chatConversation');\r\n        if(element)\r\n            element.scrollTop = element.scrollHeight;\r\n    });\r\n\r\n    const classes = useChatStyle();\r\n    return (\r\n        \r\n                <div id=\"chatConversation\" className={classes.chatConversation}>\r\n                    <div className={classes.offset} />\r\n                    {\r\n                        messages.map((elem, idx, arr) => {\r\n                            return <Message {...elem} key={idx} contact={contact} avatarSrc={avatarSrc} idioma={idioma}/>\r\n                        })\r\n                    }\r\n                    <div className={classes.offsetDown} />\r\n                </div>\r\n\r\n    );\r\n\r\n}\r\nexport default ChatBodyView;","import React, { useEffect } from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport { friendSelector, initConversationSelector } from '../../../components/recoil/selectors'; \r\nimport {userAvatarState, activeChatWith, idiomaState, loginData, getConversationWithContact} from '../../../components/recoil/atoms';\r\nimport ChatBodyView from './chatBody.view';\r\nimport useAxiosHook from '../../../utils/axiosHook';\r\nimport text from './idioma.json';\r\nimport socketClient from '../../../utils/socket';\r\n\r\nconst ChatBodyController = () => {\r\n    \r\n    const idContact = useRecoilValue(activeChatWith);\r\n    const initConversation = useSetRecoilState(initConversationSelector);\r\n    const messages = useRecoilValue(getConversationWithContact(idContact));\r\n    const avatarSrc = useRecoilValue(userAvatarState);\r\n    const userDate = useRecoilValue(loginData);\r\n    const idioma = useRecoilValue(idiomaState);\r\n    \r\n    const friends = useRecoilValue(friendSelector);\r\n    const {postRequest} = useAxiosHook();\r\n    const contact = friends.find(f => f.contactId === idContact);\r\n\r\n\r\n    const loadConversation = () => {\r\n        if(messages.length === 0){\r\n            postRequest({\r\n                url: '/messages/getMessagesByContact',\r\n                messageOnError: text.errorLoadConversation[idioma],\r\n                bodyParams: {contactId: contact.contactId},\r\n                doFnAfterSuccess: (resp, token) => {\r\n                    if(resp.status === 200){\r\n                        \r\n                        initConversation({\r\n                            contactId: contact.contactId,\r\n                            conversation: resp.data.conversation\r\n                        });\r\n    \r\n    \r\n                        const client = socketClient.getSocket();\r\n                        client.emit('read messages', {\r\n                            readerId: userDate.userId,\r\n                            messengerId: contact.contactId,\r\n                            messengerSocketId: contact.socketId,\r\n                            token: token\r\n                        });\r\n                    }\r\n                },\r\n                //doFnAfterError: err => console.log(err)\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadConversation();\r\n    }, []);\r\n\r\n    if(messages ){\r\n        return <ChatBodyView \r\n                    contact={contact}\r\n                    avatarSrc={avatarSrc}\r\n                    messages={messages}\r\n                    idioma={idioma}\r\n                /> ;\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default ChatBodyController;","import React from 'react';\r\nimport ChatBodyController from './chatBody.controller';\r\nconst ChatBody = props => {\r\n\r\n    return <ChatBodyController />;\r\n\r\n}\r\nexport default ChatBody;","import React from 'react';\r\n\r\nimport {AppBar, Toolbar, IconButton, makeStyles, createStyles} from '@material-ui/core';\r\n\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar:{\r\n        top: 'auto',\r\n        bottom: 0,\r\n        position: \"fixed\",\r\n        width: '100%',        \r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.breakpoints.values.sm,\r\n        },\r\n        right: 'auto'\r\n    },\r\n    grow: {\r\n        flexGrow: 1\r\n    },\r\n    toolbar: {\r\n        padding: 0\r\n    },\r\n    icon: {\r\n        fontSize: theme.spacing(3.75)\r\n    },\r\n    textarea: {\r\n        border: '1px solid white',\r\n        fontFamily: 'inherit',\r\n        fontSize: 'large',    \r\n        padding: '1px 6px',\r\n        backgroundColor: theme.palette.background.paper,\r\n        //color: 'rgba(0,0,0,0.7)',\r\n        color: theme.palette.text.primary,\r\n        \r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom:  theme.spacing(1),\r\n        maxHeight: theme.spacing(10),\r\n        minHeight: theme.spacing(4),\r\n        overflowY: 'auto',\r\n        borderRadius: theme.spacing(0.5),\r\n        marginLeft: theme.spacing(2),\r\n        cursor: 'text'\r\n    }\r\n}));\r\n\r\n\r\nconst ChatEditorView = ({sendMessage, refAreaTexto, keyPress, }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar color=\"primary\"  className={classes.appBar}>\r\n            <Toolbar variant=\"dense\" className={classes.toolbar}>\r\n                <div className={classes.textarea}  role=\"textbox\" contentEditable ref={refAreaTexto} onKeyPress={keyPress}></div>\r\n                <div className={classes.grow} />\r\n                <IconButton color=\"inherit\" onClick={sendMessage}>\r\n                    <TelegramIcon className={classes.icon}/>\r\n                </IconButton>                \r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n\r\n}\r\nexport default ChatEditorView;","import React, {useRef, useEffect, useState} from 'react';\r\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\r\nimport {loginData, activeChatWith, idiomaState} from '../../../components/recoil/atoms';\r\nimport {friendSelector, addMsgToConversationSelector} from '../../../components/recoil/selectors';\r\nimport useNotification from '../../../components/uiComponents/notification/notification.hook';\r\nimport ChatEditorView from './chatEditor.view';\r\nimport socketClient from '../../../utils/socket';\r\nimport text from './idioma.json';\r\n\r\nconst ChatEditorController = props => {\r\n\r\n    const {openWarningNotification} = useNotification();\r\n    const userData = useRecoilValue(loginData);\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const addMsgToConversation = useSetRecoilState(addMsgToConversationSelector);\r\n    const idContact = useRecoilValue(activeChatWith);\r\n    const friends = useRecoilValue(friendSelector);\r\n    const contact = friends.find(f => f.contactId === idContact);\r\n    const refAreaTexto = useRef('');\r\n    const [consecutive, setConsecutive] = useState(0);\r\n\r\n\r\n    const sendMessage = () => {\r\n\r\n        const oldtext = refAreaTexto.current.innerText;\r\n        const text = oldtext.replace(/^(\\s*\\r*)(.)(\\s*\\r*)$/, '$2');\r\n        if(text !== ''){\r\n            addMsgToConversation({\r\n                contactId: contact.contactId,\r\n                messageId: consecutive,//messageId,\r\n                content: refAreaTexto.current.innerText,\r\n                datetime: new Date(),\r\n                state: 1\r\n            });\r\n            setConsecutive(prev => prev + 1);\r\n\r\n            const client = socketClient.getSocket();\r\n            client.emit('send message', {\r\n                content: refAreaTexto.current.innerText,\r\n                userOriginId: userData.userId,\r\n                userDestinyId: idContact,\r\n                toSocketId: contact.socketId,\r\n                token: localStorage.getItem('token'),\r\n                consecutive: consecutive\r\n            });\r\n\r\n            refAreaTexto.current.innerText = '';\r\n            refAreaTexto.current.focus();\r\n        }\r\n    }\r\n\r\n    const keyPress = (event) => {\r\n        \r\n        if(event.charCode === 13){\r\n            event.preventDefault();\r\n            sendMessage();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        contact.friendShipStatus === 1 ? refAreaTexto.current.focus() : openWarningNotification(text.notEditable[idioma]);\r\n    }, []);\r\n\r\n    return contact.friendShipStatus === 1 ? <ChatEditorView \r\n        sendMessage={sendMessage}\r\n        keyPress={keyPress}\r\n        refAreaTexto={refAreaTexto}\r\n    /> : null;\r\n\r\n}\r\nexport default ChatEditorController;","import React from 'react';\r\n\r\nimport ChatEditorController from './chatEditor.controller';\r\nconst ChatEditor = props => {\r\n\r\n    return <ChatEditorController />;\r\n\r\n}\r\nexport default ChatEditor;","import React from 'react';\r\n\r\n\r\n\r\nimport ChatHeader from './chatHeader';\r\nimport ChatBody from './chatBody';\r\nimport ChatEditor from './chatEditor';\r\n\r\nconst ChatView = () => {\r\n\r\n    return (\r\n        <>\r\n            <ChatHeader />\r\n            <ChatBody />\r\n            <ChatEditor />\r\n        </>\r\n    );\r\n\r\n}\r\nexport default ChatView;","import React from 'react';\r\nimport ChatView from './chat.view';\r\n\r\nconst Chat = props => {\r\n\r\n    return <ChatView />;\r\n}\r\nexport default Chat;"],"sourceRoot":""}