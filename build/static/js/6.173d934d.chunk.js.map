{"version":3,"sources":["components/recoil/selectors.js","utils/axiosHook.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/icons/HowToReg.js","../node_modules/@material-ui/icons/ThumbDownAlt.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/VoiceOverOff.js","../node_modules/@material-ui/icons/Info.js","view/contacts/contact/acceptInvAction/acceptinv.view.js","view/contacts/contact/acceptInvAction/acceptInv.controller.js","view/contacts/contact/acceptInvAction/index.js","view/contacts/contact/declineInvAction/declineinv.view.js","view/contacts/contact/declineInvAction/declineInv.controller.js","view/contacts/contact/declineInvAction/index.js","view/contacts/contact/deleteAction/delete.view.js","view/contacts/contact/deleteAction/delete.controller.js","view/contacts/contact/deleteAction/index.js","view/contacts/contact/blockAction/block.view.js","view/contacts/contact/blockAction/block.controller.js","view/contacts/contact/blockAction/index.js","view/contacts/contact/contactAction.proxy.js","view/contacts/contact/contact.view.js","view/contacts/contact/contact.controller.js","view/contacts/contact/index.js","view/contacts/contacs.view.js","view/contacts/contacts.controller.js","view/contacts/index.js"],"names":["friendSelector","selector","key","get","friendsAtom","length","sort","f1","f2","friendShipStatus","socketId","email","set","a","action","payload","oldFriends","friends","push","friend","fIndex","findIndex","f","contactId","slice","concat","index","unread","data","dataObj","map","cantidad","lastMsg","lastMessage","datetime","filter","friendId","Array","isArray","idx","dat","userId","conectedFriendName","nickname","updatedFriend","notification","msg","idiomaState","variant","disconectedFriendName","initConversationSelector","conversation","getMessageState","userOriginId","UserDestinyId","readed","getConversationWithContact","oldConversation","message","_id","content","state","userOrigin","userDestiny","addMsgToConversationSelector","newMessageObj","messageId","editMsgToStateSavedSelector","consecutive","modMessage","editAllMsgToReadedSelector","useAxiosHook","useNotificationHook","openErrorNotification","openSuccessNotification","postRequest","url","bodyParams","doFnAfterSuccess","doFnAfterError","messageOnSuccess","messageOnError","authMidleware","token","axios","post","DEFAULT_CONFIG","server","headers","then","resp","catch","err","ListItemAvatar","React","props","ref","classes","className","other","_objectWithoutProperties","context","ListContext","_extends","clsx","root","alignItems","alignItemsFlexStart","withStyles","minWidth","flexShrink","marginTop","name","ListItemSecondaryAction","muiName","position","right","top","transform","MenuItem","tabIndex","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","disabled","undefined","ListItem","button","dense","gutters","theme","typography","body1","_defineProperty","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","ListItemIcon","color","palette","active","display","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","fillRule","d","AcceptInvActionView","idioma","onClick","fontSize","ListItemText","primary","text","acceptInv","AcceptInvActionController","preAction","contact","useRecoilValue","userData","loginData","friendDispatcher","useSetRecoilState","authMiddleware","acceptedUserId","status","socketClient","getSocket","emit","accepterId","socketIdRequester","errorAccepting","AcceptInv","DeclineInvActionView","decline","DeclineInvActionController","declinedUserId","declinerId","declinedId","socketIdDeclined","errorDeclining","DeclineInv","DeleteActionView","delete","DeleteActionController","deletedUserId","onDeleteError","deleterId","socketIdDeleted","DeleteAction","BlockActionView","block","BlockActionController","blokedUserId","onBlockError","blokerId","socketIdBloked","BlockAction","ContactActionProxy","handleClose","useStyle","makeStyles","infoIcon","marginRight","textAlign","flex","padding","transition","borderRadius","border","cursor","margin","outline","userSelect","verticalAlign","justifyContent","textDecoration","listItemText","paddingRight","spacing","primaryText","secondaryText","secondary","avatarMan","getContrastText","blue","backgroundColor","avatarWoman","pink","OnlineStyledBadge","badge","boxShadow","left","height","animation","opacity","Badge","OfflineStyledBadge","grey","OnlineBadge","overlap","anchorOrigin","vertical","horizontal","children","StyledMenu","paper","Menu","elevation","getContentAnchorEl","transformOrigin","useCustomTooltipGreenStyle","arrow","green","tooltip","useCustomTooltipRedStyle","red","CustomTooltip","classesRed","classesGreen","Tooltip","ContactView","memo","handleMenu","anchorEl","openChat","options","locale","es","lastMsgTime","formatRelative","Date","console","log","avatarUrl","avatarGender","gender","badgeContent","Avatar","src","friendShipStatusCode","secondaryTypographyProps","style","title","IconButton","edge","aria-label","id","keepMounted","open","Boolean","onClose","Divider","ContactContrller","useState","setAnchorEl","setActiveChat","activeChatWith","useCallback","event","currentTarget","notifyTo","localStorage","getItem","Contact","ContactsView","contacts","List","Typography","align","goMakeFriends","beta","ContactsController","setSubscribeToEvents","subscribeToEventsState","useRecoilState","searchFriends","errorLoadingFriends","errorLoadingFriendsData","contactsData","useEffect","Contacts"],"mappings":"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","file":"static/js/6.173d934d.chunk.js","sourcesContent":["import {selector} from 'recoil';\r\n\r\nimport {friendsAtom, idiomaState, messagesAtom, getConversationWithContact} from './atoms';\r\n\r\nconst friendSelector = selector({\r\n    key: 'friendSelector',\r\n    get: ({get}) => {\r\n        if(get(friendsAtom).length > 0){\r\n            const friends = [...get(friendsAtom)];\r\n\r\n            return friends.sort(\r\n                (f1,f2) => {\r\n                    \r\n                    if(f1.friendShipStatus === 1 && f2.friendShipStatus === 1){\r\n                        if(f1.socketId && !f2.socketId) return -1;\r\n                        if(!f1.socketId && f2.socketId) return 1;    \r\n                    }\r\n                    if(f1.friendShipStatus < f2.friendShipStatus) return -1; \r\n                    if(f1.friendShipStatus > f2.friendShipStatus) return 1;\r\n                    if(f1.email < f2.email) return -1; \r\n                    if(f1.email > f2.email) return 1; \r\n                }\r\n            );\r\n        }else{\r\n            return [];\r\n        }\r\n        \r\n    },\r\n    set: async ({set, get}, {action, payload}) => {\r\n\r\n        switch(action){\r\n            case 'initialize': \r\n                set(friendsAtom, oldFriends => {\r\n                    if(oldFriends.length === 0){\r\n                        return payload.friends;\r\n                    }\r\n                    return oldFriends;\r\n                });\r\n                break;\r\n            case 'add':\r\n                set(friendsAtom, oldFriends => {\r\n                    const friends = [...oldFriends];\r\n                    friends.push(payload.friend);\r\n                    return friends;\r\n                });\r\n                break;\r\n            case 'update':\r\n                set(friendsAtom, oldFriends => {\r\n                    const fIndex = oldFriends.findIndex(f => f.contactId === payload.friend.contactId);\r\n                    const friends = oldFriends.slice(0, fIndex)\r\n                                            .concat([payload.friend])\r\n                                            .concat(oldFriends.slice(fIndex+1));\r\n                    return friends;\r\n                });\r\n                break;\r\n            case 'reset_cant_no_leidos':\r\n                set(friendsAtom, oldFriends => {\r\n                    const index = oldFriends.findIndex(friend => friend.contactId === payload.contactId);\r\n                    return oldFriends.slice(0, index).concat([{...oldFriends[index], unread: 0}]).concat(oldFriends.slice(index+1));\r\n                });\r\n                break;\r\n            case 'set_message_info': // Para poner la cantidad de mensajes sin leer, el ultimo mensaje y la fecha del ultimo mensaje\r\n                set(friendsAtom, oldFriends => {\r\n                    const data = payload.dataObj;\r\n                    const newFriends = oldFriends.map(friend => {\r\n                        if(data[friend.contactId]){\r\n                            let cantidad = 0;\r\n                            if(friend.unread){\r\n                                cantidad = friend.unread;\r\n                            }\r\n                            if(data[friend.contactId].cantidad){\r\n                                cantidad += data[friend.contactId].cantidad; \r\n                            }\r\n                            return {...friend, \r\n                                unread:  cantidad,\r\n                                lastMsg: data[friend.contactId].lastMessage,\r\n                                datetime: data[friend.contactId].datetime\r\n                            }\r\n                        }\r\n                        return friend;\r\n                    });\r\n                    return newFriends;\r\n                });\r\n            break;\r\n            case 'delete':\r\n                set(friendsAtom, oldFriends => {\r\n                    return oldFriends.filter(f => f.contactId !== payload.friendId);\r\n                });\r\n                break;\r\n            case 'connect':                \r\n                if(Array.isArray(payload.data)){\r\n                    set(friendsAtom, oldFriends => {\r\n                        return oldFriends.map(friend => {\r\n                            const idx = payload.data.findIndex(dat => dat.userId === friend.contactId);\r\n                            if(idx >= 0){\r\n                                return {...friend, socketId: payload.data[idx].socketId};     \r\n                            }\r\n                            return {...friend};\r\n                        });\r\n                    }); \r\n                }else{\r\n\r\n                    const {userId, socketId} = payload.data;\r\n                    let conectedFriendName = null;\r\n                    let friendShipStatus = 0;\r\n                    \r\n                    set(friendsAtom, oldFriends => {\r\n                        const fIndex = oldFriends.findIndex(f => f.contactId === userId);\r\n                        if(fIndex >= 0){\r\n                            conectedFriendName = oldFriends[fIndex].nickname;\r\n                            friendShipStatus = oldFriends[fIndex].friendShipStatus;\r\n                            const updatedFriend = {...oldFriends[fIndex], socketId: socketId };\r\n                        \r\n                            const friends = oldFriends.slice(0, fIndex)\r\n                                                    .concat([updatedFriend])\r\n                                                    .concat(oldFriends.slice(fIndex+1));\r\n                            return friends;\r\n                        }\r\n                        return oldFriends;\r\n                    });\r\n                    if(conectedFriendName && friendShipStatus === 1)\r\n                        payload.notification(`${conectedFriendName} ${payload.msg[get(idiomaState)]}`, {variant: 'info'});\r\n                }                \r\n                break;\r\n            case 'disconnect':\r\n                let disconectedFriendName = null;\r\n                let friendShipStatus = 0;\r\n                \r\n                set(friendsAtom, oldFriends => {\r\n                    \r\n                    const index = oldFriends.findIndex(friend => friend.socketId === payload.socketId);\r\n                    if(index >= 0){\r\n                        disconectedFriendName = oldFriends[index].nickname;\r\n                        friendShipStatus = oldFriends[index].friendShipStatus;\r\n                        return [...oldFriends].slice(0, index).concat([{...oldFriends[index], socketId: null}]).concat(oldFriends.slice(index+1));\r\n                    }\r\n                    return oldFriends;\r\n                });\r\n                if(disconectedFriendName && friendShipStatus === 1)\r\n                    payload.notification(`${disconectedFriendName} ${payload.msg[get(idiomaState)]}`, {variant: 'warning'});\r\n                break;\r\n            \r\n                default: break;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\nconst messageStates = {\r\n    'NINGUNO': 0, // Cuando no es enviado por el propio usuario, sino que se lo enviaron a el, por lo que los estados no tienen sentido para este tipo de mensajes\r\n    'ENVIADO': 1,\r\n    'GUARDADO': 2,\r\n    'LEIDO': 3\r\n};\r\n\r\nconst initConversationSelector = selector({\r\n    key:'conversationSelector',\r\n    set: ({set}, {contactId, conversation}) => {\r\n\r\n        const getMessageState = (userOriginId, UserDestinyId, contactId, readed) => {\r\n\r\n            if(userOriginId === contactId){\r\n                return 0;\r\n            }else if(UserDestinyId === contactId){\r\n                return readed ? 3 : 2;\r\n            }\r\n        }\r\n\r\n        set(getConversationWithContact(contactId), oldConversation => {\r\n            return conversation.map(message => {\r\n                return {\r\n                    _id: message._id,\r\n                    content: message.content,\r\n                    datetime: message.datetime,\r\n                    state: getMessageState(message.userOrigin, message.userDestiny, contactId, message.readed)\r\n                };\r\n            })\r\n        });\r\n    }\r\n});\r\n\r\nconst addMsgToConversationSelector = selector({\r\n    key: 'addMessageToConversation',\r\n    set: ({set}, {contactId, messageId, content, datetime, state}) => {\r\n        const newMessageObj = {\r\n            _id: messageId,\r\n            content: content,\r\n            datetime: datetime,\r\n            state: state\r\n        };        \r\n        \r\n        set(getConversationWithContact(contactId), oldConversation => {\r\n            return oldConversation.concat([newMessageObj]);\r\n        });\r\n\r\n    }\r\n});\r\n\r\n\r\nconst editMsgToStateSavedSelector = selector({\r\n    key: 'editMsgToStateSavedSelector',\r\n    set: ({set}, {contactId, messageId, datetime, consecutive}) => {\r\n        \r\n        set(getConversationWithContact(contactId), oldConversation => {\r\n            \r\n            const index = oldConversation.findIndex(message => message._id === consecutive && message.state === 1);\r\n            if(index >= 0){\r\n                const modMessage = {...oldConversation[index], state: 2, _id: messageId, datetime: datetime};\r\n                return oldConversation.slice(0, index).concat([modMessage]).concat(oldConversation.slice(index+1));\r\n            }\r\n            return oldConversation;\r\n        });\r\n    }\r\n});\r\n\r\nconst editAllMsgToReadedSelector = selector({\r\n    key: 'editAllMsgToSavedSelector',\r\n    set: ({set}, {contactId}) => {\r\n        set(getConversationWithContact(contactId), oldConversation => {\r\n            return oldConversation\r\n                .map(message => {\r\n                    if(message.state !== 0)\r\n                        return {...message, state: 3}\r\n                    else\r\n                        return message;\r\n                });\r\n        });\r\n    }\r\n});\r\n\r\nexport {friendSelector, initConversationSelector, addMsgToConversationSelector, editMsgToStateSavedSelector, editAllMsgToReadedSelector}","//import React from 'react';\r\nimport axios from 'axios';\r\n//import {useSetRecoilState} from 'recoil';\r\nimport authMidleware from '../authMiddleware';\r\nimport useNotificationHook from '../components/uiComponents/notification/notification.hook';\r\nimport {DEFAULT_CONFIG} from '../conf/configuration';\r\n//import useBackdrop from '../components/uiComponents/backdrop/useBackdrop';\r\n\r\nconst useAxiosHook = () => {\r\n\r\n    const {openErrorNotification, openSuccessNotification} = useNotificationHook();\r\n    //const {closeBackDrop, showBackDrop} = useBackdrop();\r\n\r\n    const postRequest = ({url, bodyParams= {}, doFnAfterSuccess=null, doFnAfterError = null, messageOnSuccess=null, messageOnError=null}) => {\r\n        \r\n        const optimisticAction = token => {\r\n            //showBackDrop();\r\n            axios.post(`${DEFAULT_CONFIG.server}${url}`, \r\n                bodyParams, \r\n                {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                .then(resp => {\r\n                    //closeBackDrop();\r\n                    if(messageOnSuccess) openSuccessNotification(messageOnSuccess);\r\n                    if(doFnAfterSuccess) doFnAfterSuccess(resp, token);\r\n                })\r\n                .catch(err => {\r\n                    //closeBackDrop();\r\n                    if(messageOnError) openErrorNotification(messageOnError);\r\n                    if(doFnAfterError) doFnAfterError(err);\r\n                })\r\n        }\r\n        /*const pesimisticAction = () => {            \r\n            clearUserData();\r\n        }*/\r\n        \r\n        authMidleware(optimisticAction/*, pesimisticAction*/);\r\n    };   \r\n\r\n\r\n    return {postRequest};\r\n\r\n}\r\nexport default useAxiosHook;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"g\", {\n  fillRule: \"evenodd\"\n}, _react.default.createElement(\"path\", {\n  d: \"M9 17l3-2.94c-.39-.04-.68-.06-1-.06-2.67 0-8 1.34-8 4v2h9l-3-3zm2-5c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4M15.47 20.5L12 17l1.4-1.41 2.07 2.08 5.13-5.17 1.4 1.41z\"\n})), 'HowToReg');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M22 4h-2c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h2V4zM2.17 11.12c-.11.25-.17.52-.17.8V13c0 1.1.9 2 2 2h5.5l-.92 4.65c-.05.22-.02.46.08.66.23.45.52.86.88 1.22L10 22l6.41-6.41c.38-.38.59-.89.59-1.42V6.34C17 5.05 15.95 4 14.66 4h-8.1c-.71 0-1.36.37-1.72.97l-2.67 6.15z\"\n}), 'ThumbDownAlt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12.99 9.18c0-.06.01-.12.01-.18 0-2.21-1.79-4-4-4-.06 0-.12.01-.18.01l4.17 4.17zm-6.1-3.56L4.27 3 3 4.27l2.62 2.62C5.23 7.5 5 8.22 5 9c0 2.21 1.79 4 4 4 .78 0 1.5-.23 2.11-.62L19.73 21 21 19.73l-8.62-8.62-5.49-5.49zM9 15c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4zm7.76-9.64l-1.68 1.69c.84 1.18.84 2.71 0 3.89l1.68 1.69c2.02-2.02 2.02-5.07 0-7.27zM20.07 2l-1.63 1.63c2.77 3.02 2.77 7.56 0 10.74L20.07 16c3.9-3.89 3.91-9.95 0-14z\"\n}), 'VoiceOverOff');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","import React from 'react';\r\n//import { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, ListItemIcon, IconButton, Badge, Divider, Menu, MenuItem } from '@material-ui/core';\r\nimport  MenuItem from '@material-ui/core/MenuItem';\r\nimport  ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport  ListItemText from '@material-ui/core/ListItemText';\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\n\r\nimport text from './idioma.json';\r\n\r\nconst AcceptInvActionView = ({idioma, onClick}) => {\r\n\r\n    return ( \r\n        <MenuItem onClick={onClick}>\r\n            <ListItemIcon>\r\n                <HowToRegIcon fontSize=\"small\" color=\"primary\"/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text.acceptInv[idioma]} />\r\n        </MenuItem>\r\n    );\r\n\r\n}\r\nexport default AcceptInvActionView;","import React from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport axios from 'axios';\r\nimport {idiomaState, loginData/*, updateFriendSelector*/} from '../../../../components/recoil/atoms';\r\nimport {friendSelector} from '../../../../components/recoil/selectors';\r\nimport { DEFAULT_CONFIG } from '../../../../conf/configuration';\r\nimport useNotificationHook from '../../../../components/uiComponents/notification/notification.hook';\r\nimport authMiddleware from '../../../../authMiddleware';\r\nimport AcceptInvActionView from './acceptinv.view';\r\nimport text from './idioma.json';\r\nimport socketClient from '../../../../utils/socket';\r\n\r\nconst AcceptInvActionController = ({preAction, contact}) => {\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const userData = useRecoilValue(loginData);\r\n    const {openErrorNotification} = useNotificationHook();\r\n    //const switchContact = useSetRecoilState(updateFriendSelector);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n\r\n    const onClick = () => {\r\n        preAction();\r\n        const optimisticAction = token => {\r\n            axios.post(`${DEFAULT_CONFIG.server}/users/acceptFriendRequest`, {\r\n                acceptedUserId: contact.contactId\r\n            }, {\r\n                headers: {\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n            .then(resp => {\r\n                if(resp.status === 200){\r\n                    //switchContact(resp.data.friend);\r\n                    friendDispatcher({action: 'update', payload: {friend: {...resp.data.friend, socketId: contact.socketId}}});\r\n                    const client = socketClient.getSocket();\r\n                    \r\n                    client.emit('accept friendship', {\r\n                        accepterId: userData.userId,\r\n                        socketIdRequester: contact.socketId,\r\n                        token: token\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                openErrorNotification(text.errorAccepting[idioma]);\r\n            });\r\n        }\r\n\r\n        authMiddleware(optimisticAction);\r\n        \r\n    }\r\n\r\n    return <AcceptInvActionView \r\n        idioma={idioma}\r\n        onClick={onClick}\r\n    />;\r\n\r\n}\r\nexport default AcceptInvActionController;","import React from 'react';\r\nimport AcceptInvController from './acceptInv.controller';\r\nconst AcceptInv = props => {\r\n\r\n    return <AcceptInvController {...props}/>;\r\n\r\n}\r\nexport default AcceptInv;","import React from 'react';\r\n//import { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, ListItemIcon, IconButton, Badge, Divider, Menu, MenuItem } from '@material-ui/core';\r\nimport  MenuItem from '@material-ui/core/MenuItem';\r\nimport  ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport  ListItemText from '@material-ui/core/ListItemText';\r\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\r\n\r\nconst DeclineInvActionView = ({idioma, text, onClick}) => {\r\n\r\n    return ( \r\n        <MenuItem onClick={onClick}>\r\n            <ListItemIcon>\r\n                <ThumbDownAltIcon fontSize=\"small\" color=\"error\"/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text.decline[idioma]} />\r\n        </MenuItem>\r\n    );\r\n\r\n}\r\nexport default DeclineInvActionView;","import React from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport axios from 'axios';\r\nimport {idiomaState, loginData/*, deleteFriendSelector*/} from '../../../../components/recoil/atoms';\r\nimport { friendSelector } from '../../../../components/recoil/selectors';\r\nimport authMiddleware from '../../../../authMiddleware';\r\nimport useNotificationHook from '../../../../components/uiComponents/notification/notification.hook';\r\nimport {DEFAULT_CONFIG} from '../../../../conf/configuration';\r\nimport socketClient from '../../../../utils/socket';\r\n\r\nimport text from './idioma.json'\r\n\r\nimport DeclineInvActionView from './declineinv.view';\r\n\r\n\r\nconst DeclineInvActionController = ({preAction, contact}) => {\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const {openErrorNotification} = useNotificationHook();\r\n    //const eliminarContacto = useSetRecoilState(deleteFriendSelector);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n    const userData = useRecoilValue(loginData);\r\n\r\n    const onClick = () => {\r\n        preAction();\r\n        const optimisticAction = token => {\r\n            axios.post(`${DEFAULT_CONFIG.server}/users/declineFriendRequest`, {\r\n                declinedUserId: contact.contactId\r\n            }, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            .then(resp => {\r\n                if(resp.status === 200){\r\n                    friendDispatcher({action: 'delete', payload: {friendId: contact.contactId}});\r\n                }\r\n            })\r\n            .then(() => {\r\n                const socket = socketClient.getSocket();\r\n                socket.emit('decline friendship', {\r\n                    declinerId: userData.userId,\r\n                    declinedId: contact.contactId,\r\n                    socketIdDeclined: contact.socketId,\r\n                    token: token\r\n                });\r\n            })\r\n            .catch(err => {\r\n                openErrorNotification(text.errorDeclining[idioma]);\r\n            })\r\n        }\r\n\r\n        authMiddleware(optimisticAction);\r\n        \r\n    }\r\n\r\n    return <DeclineInvActionView \r\n        idioma={idioma}\r\n        onClick={onClick}\r\n        text={text}\r\n    />;\r\n\r\n}\r\nexport default DeclineInvActionController;","import React from 'react';\r\nimport DeclineInvController from './declineInv.controller';\r\nconst DeclineInv = props => {\r\n\r\n    return <DeclineInvController {...props}/>;\r\n\r\n}\r\nexport default DeclineInv;","import React from 'react';\r\n//import { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, ListItemIcon, IconButton, Badge, Divider, Menu, MenuItem } from '@material-ui/core';\r\nimport  MenuItem from '@material-ui/core/MenuItem';\r\nimport  ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport  ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst DeleteActionView = ({idioma, onClick, text}) => {\r\n\r\n    return ( \r\n        <MenuItem onClick={onClick}>\r\n            <ListItemIcon>\r\n                <DeleteIcon fontSize=\"small\" color=\"error\"/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text.delete[idioma]} />\r\n        </MenuItem>\r\n    );\r\n\r\n}\r\nexport default DeleteActionView;","import React from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, loginData/*, deleteFriendSelector*/} from '../../../../components/recoil/atoms';\r\nimport {friendSelector} from '../../../../components/recoil/selectors';\r\nimport useAxiosHook from '../../../../utils/axiosHook';\r\nimport DeleteActionView from './delete.view';\r\nimport text from './idioma.json';\r\nimport socketClient from '../../../../utils/socket';\r\n\r\nconst DeleteActionController = ({preAction, contact}) => {\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const userData = useRecoilValue(loginData);\r\n    const {postRequest} = useAxiosHook();\r\n    //const deleteFriend = useSetRecoilState(deleteFriendSelector);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n\r\n\r\n    const onClick = () => {\r\n\r\n        preAction();\r\n        postRequest({\r\n            url: '/users/deleteContact',\r\n            bodyParams: {deletedUserId: contact.contactId},\r\n            messageOnError: text.onDeleteError[idioma],\r\n            doFnAfterSuccess: (resp, token) => {\r\n                if(resp.status === 200){\r\n                    friendDispatcher({action: 'delete', payload: {friendId: contact.contactId}});\r\n\r\n                    if(contact.friendShipStatus === 1){\r\n                        const client = socketClient.getSocket();\r\n                        client.emit('delete contact', {\r\n                            deleterId: userData.userId,\r\n                            socketIdDeleted: contact.socketId,\r\n                            token: token\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return <DeleteActionView \r\n        idioma={idioma}\r\n        text={text}\r\n        onClick={onClick}\r\n    />;\r\n\r\n}\r\nexport default DeleteActionController;","import React from 'react';\r\nimport DeleteController from './delete.controller';\r\nconst DeleteAction = props => {\r\n\r\n    return <DeleteController {...props} />;\r\n\r\n}\r\nexport default DeleteAction;","import React from 'react';\r\n//import { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, ListItemIcon, IconButton, Badge, Divider, Menu, MenuItem } from '@material-ui/core';\r\nimport  MenuItem from '@material-ui/core/MenuItem';\r\nimport  ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport  ListItemText from '@material-ui/core/ListItemText';\r\nimport VoiceOverOffIcon from '@material-ui/icons/VoiceOverOff';\r\n\r\nimport text from './idioma.json';\r\n\r\nconst BlockActionView = ({idioma, onClick}) => {\r\n\r\n    return ( \r\n        <MenuItem onClick={onClick}>\r\n            <ListItemIcon>\r\n                <VoiceOverOffIcon fontSize=\"small\" color=\"error\"/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text.block[idioma]} />\r\n        </MenuItem>\r\n    );\r\n\r\n}\r\nexport default BlockActionView;","import React from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, loginData/*, deleteFriendSelector*/} from '../../../../components/recoil/atoms';\r\nimport {friendSelector} from '../../../../components/recoil/selectors';\r\nimport useAxiosHook from '../../../../utils/axiosHook';\r\nimport BlockActionView from './block.view';\r\nimport text from './idioma.json';\r\nimport socketClient from '../../../../utils/socket';\r\n\r\nconst BlockActionController = ({preAction, contact}) => {\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const userData = useRecoilValue(loginData);\r\n    const {postRequest} = useAxiosHook();\r\n    //const deleteContact = useSetRecoilState(deleteFriendSelector);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n\r\n    const onClick = () => {\r\n        preAction();\r\n        \r\n        postRequest({\r\n            url: '/users/blockUser',\r\n            bodyParams: {blokedUserId: contact.contactId},\r\n            messageOnError: text.onBlockError[idioma],\r\n            doFnAfterSuccess: (resp, token) => {\r\n                if(resp.status === 200){\r\n                    //deleteContact(contact.contactId);\r\n                    friendDispatcher({action: 'delete', payload: {friendId: contact.contactId}});\r\n                    const client = socketClient.getSocket();\r\n                    client.emit('block contact', {\r\n                        blokerId: userData.userId, \r\n                        socketIdBloked: contact.socketId,\r\n                        token: token\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return <BlockActionView \r\n        idioma={idioma}\r\n        onClick={onClick}\r\n    />;\r\n\r\n}\r\nexport default BlockActionController;","import React from 'react';\r\nimport BlockController from './block.controller';\r\nconst BlockAction = props => {\r\n\r\n    return <BlockController {...props}/>;\r\n\r\n}\r\nexport default BlockAction;","import React from 'react';\r\n\r\nimport AcceptInv from './acceptInvAction';\r\nimport DeclineInv from './declineInvAction';\r\nimport DeleteFriend from './deleteAction';\r\nimport BlockContact from './blockAction';\r\n/*\r\n    1- ACEPTED -> Eliminar, Bloquear\r\n    2- REQUESTED -> Cancelar, Bloquear\r\n    3- ASKED -> Aceptar, Cancelar, bloquear\r\n    4- DECLINED -> Cancelar, Bloquear\r\n    5- Blocked -> Eliminar\r\n    6- Deleted -> Eliminar\r\n*/\r\n\r\nconst ContactActionProxy = ({handleClose, contact}) => {\r\n    \r\n\r\n    const preAction = () => {\r\n        handleClose()\r\n    }\r\n\r\n    \r\n    \r\n    switch(contact.friendShipStatus){\r\n        case 1: return (\r\n            <>\r\n                <DeleteFriend  preAction={preAction} contact={contact}/>\r\n                <BlockContact  preAction={preAction} contact={contact}/>\r\n            </>\r\n            );\r\n        case 2: return (\r\n            <>\r\n                <DeclineInv preAction={preAction} contact={contact}/>\r\n                <BlockContact preAction={preAction} contact={contact}/>\r\n            </>\r\n        ); \r\n        case 3: return (\r\n            <>\r\n                <AcceptInv  preAction={preAction} contact={contact}/>\r\n                <DeclineInv  preAction={preAction} contact={contact}/>\r\n                <BlockContact  preAction={preAction} contact={contact}/>\r\n            </>\r\n        );\r\n        case 4: return (\r\n            <>\r\n                <DeleteFriend  preAction={preAction} contact={contact}/>\r\n                <BlockContact  preAction={preAction} contact={contact}/>\r\n            </>\r\n        );\r\n        case 5: return <DeleteFriend  preAction={preAction} contact={contact}/>;\r\n        case 6: return <DeleteFriend  preAction={preAction} contact={contact}/>;\r\n        default: return null;\r\n    }\r\n}\r\n\r\nexport default ContactActionProxy;","import React from 'react';\r\nimport { formatRelative } from 'date-fns';\r\nimport { es } from 'date-fns/locale';\r\nimport { ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton, Badge, Divider, Menu, Tooltip, Typography } from '@material-ui/core';\r\nimport { red, green, blue, pink } from '@material-ui/core/colors';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport {DEFAULT_CONFIG} from '../../../conf/configuration';\r\n\r\nimport text from './idioma.json';\r\n\r\nimport ActionProxy from './contactAction.proxy';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    infoIcon: {\r\n        marginRight: '-12px',\r\n        overflow: 'visible',\r\n        textAlign: 'center',\r\n        flex: '0 0 auto',\r\n        \r\n        color: 'rgba(0, 0, 0, 0.54)',\r\n        padding: '12px',\r\n        fontSize: '1.5rem',\r\n        transition: 'background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n        borderRadius: '50%',\r\n\r\n        \r\n        border: 0,\r\n        cursor: 'pointer',\r\n        margin: 0,\r\n        display: 'inline-flex',\r\n        outline: 0,\r\n        \r\n        position: 'relative',\r\n        alignItems: 'center',\r\n        userSelect: 'none',\r\n        \r\n        verticalAlign: 'middle',\r\n        \r\n        justifyContent: 'center',\r\n        textDecoration: 'none'\r\n    },\r\n    listItemText: {\r\n        paddingRight: theme.spacing(10)\r\n    },\r\n    primaryText: {\r\n        color: theme.palette.text.primary\r\n    },\r\n    secondaryText: {\r\n        color: theme.palette.text.secondary\r\n    },avatarMan: {\r\n        color: theme.palette.getContrastText(blue[400]),\r\n        backgroundColor: blue[400],\r\n    },\r\n    avatarWoman: {\r\n        color: theme.palette.getContrastText(pink[300]),\r\n        backgroundColor: pink[300],\r\n    },\r\n}));\r\n\r\nconst OnlineStyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: '#44b700',\r\n        color: '#44b700',\r\n        boxShadow: `0 0 0 2px white`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            animation: '$ripple 1.2s infinite ease-in-out',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst OfflineStyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: theme.palette.grey[500],\r\n        color: theme.palette.grey[500],\r\n\r\n        \r\n        \r\n        boxShadow: `0 0 0 2px white`,\r\n        '&::after': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '50%',\r\n            border: '1px solid currentColor',\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    '@keyframes ripple': {\r\n        '0%': {\r\n            transform: 'scale(.8)',\r\n            opacity: 1,\r\n        },\r\n        '100%': {\r\n            transform: 'scale(2.4)',\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n\r\nconst OnlineBadge = props => {\r\n    \r\n    if(props.contact.socketId && props.contact.friendShipStatus === 1){\r\n        return (<OnlineStyledBadge\r\n                overlap=\"circle\"\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                    }}\r\n                    variant=\"dot\"\r\n                >\r\n                    {props.children}\r\n                </OnlineStyledBadge>)\r\n            ;\r\n    }\r\n    else {\r\n        return (<OfflineStyledBadge\r\n            overlap=\"circle\"\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                variant=\"dot\"\r\n            >\r\n                {props.children}\r\n            </OfflineStyledBadge>)\r\n        ;\r\n    }\r\n}\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  })((props) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\nconst useCustomTooltipGreenStyle = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: green[500]\r\n    },\r\n    tooltip: {\r\n      backgroundColor: green[500]\r\n    },\r\n  }));\r\n  const useCustomTooltipRedStyle = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: red[500]\r\n    },\r\n    tooltip: {\r\n      backgroundColor: red[500]\r\n    },\r\n  }));\r\nconst CustomTooltip = props => {\r\n    const classesRed = useCustomTooltipRedStyle();\r\n    const classesGreen = useCustomTooltipGreenStyle();\r\n\r\n    return <Tooltip arrow classes={props.color === 'red' ? classesRed : classesGreen} {...props} />;\r\n}\r\n\r\n\r\nconst ContactView = React.memo(\r\n    ({idioma, contact, handleMenu,\r\n    handleClose, anchorEl, openChat}) => {\r\n    const lastMsg = contact.lastMsg ? contact.lastMsg : '' ;\r\n    \r\n    const options = idioma === 'es' ? { locale: es } : {};\r\n    const lastMsgTime = contact.datetime ? formatRelative(new Date(contact.datetime), new Date(), options) : '';\r\n    console.log(contact);\r\n    \r\n    \r\n    const classes = useStyle();\r\n    const avatarUrl = contact.avatarUrl ? `${DEFAULT_CONFIG.server}${contact.avatarUrl}` : null;\r\n\r\n    const avatarGender = contact.gender === \"M\" ? 'avatarMan' : \"avatarWoman\";\r\n\r\n    return (<>\r\n        <ListItem button onClick={openChat}>\r\n            <ListItemAvatar>\r\n                <OnlineBadge contact={contact}>\r\n                    {contact.unread && contact.unread > 0 \r\n                    ? <Badge color=\"secondary\" badgeContent={contact.unread}>\r\n                        <Avatar\r\n                            src={avatarUrl}\r\n                            className={contact.gender && classes[avatarGender]}\r\n                        />\r\n                    </Badge>\r\n                    : <Avatar\r\n                            src={avatarUrl}\r\n                            className={contact.gender && classes[avatarGender]}\r\n                        />\r\n                    }\r\n                </OnlineBadge>\r\n            </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={contact.nickname}\r\n                    \r\n                    secondary={contact.friendShipStatus > 1 ? text[contact.friendShipStatusCode][idioma] : `${lastMsg.slice(0, 55)}... ${lastMsgTime}`}\r\n                    secondaryTypographyProps={contact.friendShipStatus > 3 \r\n                        ? {\r\n                            style: {color: `${red[500]}`}\r\n\r\n                        } \r\n                        : contact.friendShipStatus < 4 && contact.friendShipStatus > 1 ? {\r\n                            style: {color: `${green[500]}`}\r\n                        } : {}\r\n                    }\r\n                    className={classes.listItemText}\r\n                    classes={{\r\n                        primary: classes.primaryText,\r\n                        secondary: classes.secondaryText\r\n                    }}\r\n                />\r\n                \r\n                {contact.friendShipStatus > 1 ?\r\n                    <CustomTooltip title={text[`desc${contact.friendShipStatusCode}`][idioma]} color={contact.friendShipStatus > 3 ? 'red' : 'geen'}>\r\n                        <div className={classes.infoIcon}>\r\n                            <InfoIcon fontSize=\"small\" style={{color: contact.friendShipStatus > 3 ? red[500] : green[500]}}/>\r\n                        </div>\r\n                    </CustomTooltip>\r\n                : null }\r\n            \r\n            <ListItemSecondaryAction>\r\n                \r\n                \r\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleMenu}>\r\n                    <MoreVertIcon fontSize=\"default\"/>\r\n                </IconButton>\r\n                <StyledMenu\r\n                    id=\"customized-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >   \r\n                    <ActionProxy handleClose={handleClose} contact={contact}/>\r\n                </StyledMenu>\r\n            </ListItemSecondaryAction>\r\n            \r\n        </ListItem>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n        </>\r\n    );\r\n})\r\n\r\n\r\nexport default ContactView;","import React, {useState, useCallback} from 'react';\r\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, activeChatWith, loginData} from '../../../components/recoil/atoms';\r\nimport {friendSelector} from '../../../components/recoil/selectors';\r\nimport ContactView from './contact.view';\r\nimport socketClient from '../../../utils/socket';\r\n\r\nconst ContactContrller = ({contact}) => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const idioma = useRecoilValue(idiomaState);\r\n    const userData = useRecoilValue(loginData);\r\n    const setActiveChat = useSetRecoilState(activeChatWith);\r\n    const friendDispatcher = useSetRecoilState(friendSelector);\r\n    \r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    \r\n    const handleClose = useCallback(() => {\r\n        setAnchorEl(null);\r\n    },[]);\r\n\r\n    const openChat = () => {        \r\n        setActiveChat(contact.contactId);\r\n\r\n        // Poner el estado en leidos\r\n        friendDispatcher({\r\n            action: 'reset_cant_no_leidos',\r\n            payload: {\r\n                contactId: contact.contactId,\r\n            }\r\n        });\r\n        // Emit como leidos\r\n        const client = socketClient.getSocket();\r\n        client.emit('read messages', {\r\n            userId: userData.userId,\r\n            contactId: contact.contactId,\r\n            notifyTo: contact.socketId,\r\n            token: localStorage.getItem('token')\r\n        });\r\n    }\r\n\r\n    return <ContactView \r\n        handleMenu={handleMenu}\r\n        handleClose={handleClose}\r\n        contact={contact}\r\n        anchorEl={anchorEl}\r\n        idioma={idioma}\r\n        openChat={openChat}\r\n    />;\r\n\r\n}\r\nexport default ContactContrller;","import React from 'react';\r\n\r\nimport ContactController from './contact.controller';\r\nconst Contact = props => {\r\n\r\n    return <ContactController \r\n        {...props}\r\n    />;\r\n\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Contact from './contact';\r\n\r\nconst ContactsView = ({idioma, text, contacts}) => {\r\n\r\n    return (\r\n        <List>\r\n            {contacts.length > 0 \r\n                ? contacts.map((contact) => <Contact contact={contact} key={contact.contactId}/>)\r\n                : <div style={{margin: '2em'}}>\r\n                <Divider/>\r\n                    <Typography variant=\"h5\" align='justify'>{text.goMakeFriends[idioma]}</Typography>\r\n                    <Divider/>\r\n                    <Typography variant=\"subtitle1\" align='justify' style={{marginTop: '1em'}}>{text.beta[idioma]}</Typography>\r\n                </div>\r\n            }\r\n        </List>\r\n    );\r\n\r\n}\r\nexport default ContactsView;","import React, { useEffect} from 'react';\r\nimport text from './idioma.json';\r\nimport {useRecoilValue, useRecoilState, useSetRecoilState} from 'recoil';\r\nimport {idiomaState, subscribeToEventsState/*friendSelector*/ /*, friendsAtom*/} from '../../components/recoil/atoms';\r\nimport {friendSelector} from '../../components/recoil/selectors';\r\nimport useAxiosHook from '../../utils/axiosHook';\r\n\r\nimport ContactsView from './contacs.view';\r\n\r\n\r\n\r\nconst ContactsController = props => {\r\n\r\n    const setSubscribeToEvents = useSetRecoilState(subscribeToEventsState);\r\n    //const setContacts = useSetRecoilState(friendsAtom);\r\n    const {postRequest} = useAxiosHook();\r\n    \r\n    //const [contacts, addContact] = useRecoilState(friendSelector);\r\n    const [contacts, friendDispatcher] = useRecoilState(friendSelector);\r\n\r\n    const idioma = useRecoilValue(idiomaState);\r\n\r\n    const getFriendData = () => {\r\n        postRequest({\r\n            url: '/users/getContactData',\r\n            messageOnError: text.errorLoadingFriendsData[idioma],\r\n            doFnAfterSuccess: resp => {\r\n                if(resp.status === 200){\r\n                    friendDispatcher({\r\n                        action: 'set_message_info',\r\n                        payload: {\r\n                            dataObj: resp.data.contactsData\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    const searchFriends = () => {\r\n        \r\n        if(contacts.length === 0){\r\n            \r\n            postRequest({\r\n                url: '/users/searchFirends',\r\n                messageOnError: text.errorLoadingFriends[idioma],\r\n                doFnAfterSuccess: resp => {\r\n                    if(resp.status === 200){\r\n                        \r\n                        friendDispatcher({\r\n                            action: 'initialize', \r\n                            payload: {\r\n                                friends: resp.data.friends\r\n                            }});\r\n                        setSubscribeToEvents(true);\r\n                        if(resp.data.friends.length > 0){\r\n                            getFriendData();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }else{\r\n            console.log('NO LOS MANDA A BUSCAR');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchFriends();\r\n    }, []);\r\n\r\n    return <ContactsView \r\n        idioma={idioma}\r\n        contacts={contacts}\r\n        text={text}\r\n\r\n    />;\r\n\r\n}\r\n\r\nexport default ContactsController;","import React from 'react';\r\nimport ContactsController from './contacts.controller';\r\nconst Contacts = props => {\r\n\r\n    return <ContactsController />;\r\n\r\n}\r\nexport default Contacts;"],"sourceRoot":""}