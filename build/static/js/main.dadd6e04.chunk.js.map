{"version":3,"sources":["utils/socket.js","authMiddleware.js","utils/useLogout.js","components/recoil/atoms.js","conf/configuration.js","view/signin/forgotpass/forgotPass.view.js","view/signin/forgotpass/forgotPass.controller.js","view/signin/forgotpass/index.js","view/signin/signin.view.js","view/signin/signin.controller.js","view/signin/index.js","view/main/main.view.js","view/main/index.js","view/signup/signup.view.js","view/signup/signup.controller.js","view/signup/index.js","components/uiComponents/notification/notification.view.js","components/uiComponents/index.js","utils/useRefreshToken.js","App.js","serviceWorker.js","index.js","components/uiComponents/notification/notification.hook.js","components/uiComponents/notification/notification.atom.js"],"names":["socket","socketClient","getSocket","openSocket","DEFAULT_CONFIG","server","close","AuthMiddleware","nextOptimisticAction","a","token","localStorage","getItem","token_expires","Date","getTime","dataOptimistic","useLogout","setLoginData","useSetRecoilState","loginData","setUserAvatar","userAvatarState","setSubscribe","subscribeToEventsState","setContactList","contactListState","setFriends","friendsAtom","client","useCallback","emit","removeItem","idiomaState","atom","key","default","idioma","userLang","navigator","language","userLanguage","test","getDefaultLanguage","chatConversation","addContactViewOpenState","activeChatWith","getConversationWithContact","contactId","tokenTimeoutAtom","tokentimeout","darkModeAtom","location","origin","ForgotPassView","forgetPassHandler","forgotWinState","forgotWinOk","onChangeForgotEmail","forgotEmailState","Dialog","open","onClose","aria-labelledby","DialogTitle","id","text","title","DialogContent","DialogContentText","forgotText","TextField","autoFocus","margin","label","email","type","fullWidth","onChange","value","helperText","valid","invalidEmail","error","DialogActions","Button","onClick","color","forgotBtnCancel","forgotBtnOk","ForgotPassController","useState","setForgotEmailStste","NotificationHook","openSuccessNotification","openErrorNotification","target","axios","post","hostname","window","host","then","resp","status","emailSended","catch","err","response","emailNotFound","ForgotPass","props","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","submit","link","cursor","textDecoration","SignIn","emailRef","passRef","onSignIn","rememberChecked","onRememberChange","classes","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","signin","noValidate","required","name","autoComplete","inputRef","password","FormControlLabel","control","Checkbox","checked","rememberme","Grid","container","item","xs","Link","forgotpassword","to","gosignup","SigninController","useRecoilState","setIdiomaState","setUserAvatarState","setTokenTimeOut","redirectState","setRedirect","useRef","remember","setRemember","setforgotWinState","useEffect","authMiddleware","data","_id","nickname","firstName","lastName","gender","avatarUrl","setItem","timeleft","userId","console","log","current","event","preventDefault","refresh_token","refresh_token_expires","notAuthorized","internalError","Signin","padding","position","height","overflowY","background","MainView","children","MainContainer","SignUp","onSignUp","emailState","onEmailChange","passState","onPassChange","nameState","onNameChange","lastNameRef","signup","sm","msg","justify","SignupController","useRecoilValue","setEmailState","setPassState","setNameState","length","userCreated","duplicated","Signup","Alert","elevation","NotificationView","notificationAtom","notificationState","setNotState","handleClose","reason","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","Notification","useRefreshToken","setTokenTimeout","logout","new_token","new_refresh_token","new_token_expires","new_refresh_token_expires","AsyncToolbar","React","lazy","AsyncMainButton","AsyncContactList","AsyncChatCmp","AsyncActivateUser","AsyncChangePass","AsyncEvents","TimerCmp","refreshToken","timeoutData","setTimeout","themeDark","createMuiTheme","themeDefault","backdrop","zIndex","drawer","App","dark","subscribe","userData","chatWith","notistackRef","createRef","onClickDismiss","closeSnackbar","cmp","fallback","Backdrop","CircularProgress","path","exact","render","ThemeProvider","maxSnack","preventDuplicate","ref","action","IconButton","fontSize","style","from","Boolean","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message","setNotificationState","defaultToOpem","openSpecificNotification","openNotification","properties","openInfoNotification","openWarningNotification"],"mappings":"0GAAA,IAEIA,EAFJ,0BAIMC,EACL,CACGC,UAAW,WACP,OAAIF,IACAA,EAASG,IAAWC,IAAeC,UAK3CC,MAAO,WACHN,EAAOM,UAIAL,O,+DClBTM,EAAc,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDAEbC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAgBF,aAAaC,QAAQ,mBAEvCF,GAASG,GAAiB,IAAIC,KAAKD,GAAeE,WAAY,IAAID,MAAOC,WAL1D,gCAMYP,EAAqBE,GANjC,cAMXM,EANW,yBAOVA,GAPU,2CAAH,sDAYHT,O,iCCZjB,2CA+BeU,IAzBG,WAEd,IAAMC,EAAeC,4BAAkBC,KACjCC,EAAgBF,4BAAkBG,KAClCC,EAAeJ,4BAAkBK,KACjCC,EAAiBN,4BAAkBO,KACnCC,EAAaR,4BAAkBS,KAC/BC,EAAS5B,IAAaC,YAE5B,OAAO4B,uBAAY,WAEfT,EAAc,MACdI,EAAe,IACfE,EAAW,IACXE,EAAOE,KAAK,SAAU,IACtBpB,aAAaqB,WAAW,SACxBrB,aAAaqB,WAAW,iBACxBrB,aAAaqB,WAAW,yBACxBrB,aAAaqB,WAAW,iBACxBT,GAAa,GACbL,EAAa,W,gCCzBrB,maAWMe,EAAcC,eAAK,CACrBC,IAAK,cACLC,QAXsB,WACtB,IAAIC,EAAS,KACTC,EAAWC,UAAUC,UAAYD,UAAUE,aAI/C,MAHG,WAAWC,KAAKJ,KACfD,EAAS,MAENA,EAKEM,KAGPvB,EAAYc,eAAK,CACnBC,IAAK,YACLC,QAAS,OAEPd,EAAkBY,eAAK,CACzBC,IAAK,kBACLC,QAAS,OAKPQ,EAAmBV,eAAK,CAC1BC,IAAK,mBACLC,QAAS,CACL,QAAU,KAIZV,EAAmBQ,eAAK,CAC1BC,IAAK,mBACLC,QAAS,KAqBPZ,GAXOU,eAAK,CACVC,IAAK,OACLC,QAAS,UAIKF,eAAK,CACvBC,IAAK,gBACLC,SAAS,IAGkBF,eAAK,CAChCC,IAAK,yBACLC,SAAS,KAGPS,EAA0BX,eAAK,CACjCC,IAAK,0BACLC,SAAS,IAGPR,EAAcM,eAAK,CACrBC,IAAK,cACLC,QAAS,KAGPU,EAAiBZ,eAAK,CACxBC,IAAK,iBACLC,QAAS,OAGPW,EAA6B,SAAAC,GAAS,OAAId,eAAK,CACjDC,IAAI,oBAAD,OAAsBa,GACzBZ,QAAS,MAQPa,GALef,eAAK,CACtBC,IAAK,eACLC,QAAS,OAGYF,eAAK,CAC1BC,IAAK,mBACLC,QAAS,CACLc,aAAc,MAIhBC,EAAejB,eAAK,CACtBC,IAAK,YACLC,QAA8C,SAArCzB,aAAaC,QAAQ,e,smCCjGlC,sCAQaR,EALA,CAETC,OAAQ+C,SAASC,S,kaCsCNC,EAnCQ,SAAC,GAAqG,IAApGjB,EAAmG,EAAnGA,OAAQkB,EAA2F,EAA3FA,kBAAmBC,EAAwE,EAAxEA,eAAgBC,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,oBAAqBC,EAAsB,EAAtBA,iBAElG,OACI,kBAACC,EAAA,EAAD,CAAQC,KAAML,EAAgBM,QAASP,EAAmBQ,kBAAgB,qBAC1E,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAqBC,EAAKC,MAAM9B,IAChD,kBAAC+B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGH,EAAKI,WAAWjC,IAEnB,kBAACkC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPR,GAAG,OACHS,MAAOR,EAAKS,MAAMtC,GAClBuC,KAAK,QACLC,WAAS,EACTC,SAAUpB,EACVqB,MAAOpB,EAAiBoB,MACxBC,WAAarB,EAAiBsB,MAAoC,GAA5Bf,EAAKgB,aAAa7C,GACxD8C,OAAQxB,EAAiBsB,SAI7B,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAS/B,EAAmBgC,MAAM,WACvCrB,EAAKsB,gBAAgBnD,IAExB,kBAACgD,EAAA,EAAD,CAAQC,QAAS7B,EAAa8B,MAAM,WACjCrB,EAAKuB,YAAYpD,O,QCyBfqD,EArDc,SAAC,GAAiD,IAAhDrD,EAA+C,EAA/CA,OAAQmB,EAAuC,EAAvCA,eAAgBD,EAAuB,EAAvBA,kBAAuB,EAE1BoC,mBAAS,CAACZ,MAAM,GAAIE,OAAM,IAFA,mBAEnEtB,EAFmE,KAEjDiC,EAFiD,OAGjBC,cAAlDC,EAHmE,EAGnEA,wBAAyBC,EAH0C,EAG1CA,sBAuChC,OAAO,kBAAC,EAAD,CACH1D,OAAQA,EACRmB,eAAgBA,EAChBE,oBAxCwB,SAAC,GAAuB,IAAbqB,EAAY,EAArBiB,OAASjB,MACnCa,EAAoB,2BAAIjC,GAAL,IAAuBsB,OAAO,EAAMF,MAAOA,MAwC9DtB,YArCgB,WACZ,mCAAmCf,KAAKiB,EAAiBoB,OAGzDkB,IAAMC,KAAN,UAAc9F,IAAeC,OAA7B,iBAAoD,CAChDsE,MAAOhB,EAAiBoB,MACxBoB,SAAUC,OAAOhD,SAASiD,OAE7BC,MAAK,SAAAC,GACiB,MAAhBA,EAAKC,QAEJV,EAAwB5B,EAAKuC,YAAYpE,IAE7CkB,OAGHmD,OAAM,SAAAC,GACwB,MAAxBA,EAAIC,SAASJ,OACZT,EAAsB7B,EAAK2C,cAAcxE,IAEzC0D,EAAsB7B,EAAKiB,MAAM9C,OAlBzCuD,EAAoB,2BAAIjC,GAAL,IAAuBsB,OAAO,MAoCrDtB,iBAAkBA,EAClBiC,oBAAqBA,EACrBrC,kBAAmBA,KCjDZuD,EALI,SAAAC,GAEf,OAAO,kBAAC,EAAyBA,I,QCY/BC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNhD,OAAQyC,EAAMG,QAAQ,GACtBK,gBAAiBR,EAAMS,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPX,UAAWF,EAAMG,QAAQ,IAE3BW,OAAQ,CACNvD,OAAQyC,EAAMG,QAAQ,EAAG,EAAG,IAE9BY,KAAM,CACJC,OAAQ,UACRC,eAAgB,OAChB5C,MAAO2B,EAAMS,QAAQzD,KAAK0D,UAC1B,UAAU,CACNO,eAAgB,kBAKT,SAASC,EAAT,GACwB,IADP/F,EACM,EADNA,OAAQgG,EACF,EADEA,SAAUC,EACZ,EADYA,QAASC,EACrB,EADqBA,SAAUC,EAC/B,EAD+BA,gBAAiBC,EAChD,EADgDA,iBACpFlF,EAAoC,EAApCA,kBAAmBC,EAAiB,EAAjBA,eACbkF,EAAU1B,IAEhB,OACE,kBAAC2B,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWL,EAAQvB,OACtB,kBAAC6B,EAAA,EAAD,CAAQD,UAAWL,EAAQjB,QACzB,kBAAC,IAAD,OAEF,kBAACwB,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,MAChChF,EAAKiF,OAAO9G,IAEf,0BAAM0G,UAAWL,EAAQZ,KAAMsB,YAAU,GACvC,kBAAC7E,EAAA,EAAD,CACE2E,QAAQ,WACRzE,OAAO,SACP4E,UAAQ,EACRxE,WAAS,EACTZ,GAAG,QACHS,MAAOR,EAAKS,MAAMtC,GAClBiH,KAAK,QACLC,aAAa,QACb/E,WAAS,EACTgF,SAAUnB,IAEZ,kBAAC9D,EAAA,EAAD,CACE2E,QAAQ,WACRzE,OAAO,SACP4E,UAAQ,EACRxE,WAAS,EACTyE,KAAK,WACL5E,MAAOR,EAAKuF,SAASpH,GACrBuC,KAAK,WACLX,GAAG,WACHsF,aAAa,mBACbC,SAAUlB,IAEZ,kBAACoB,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAU7E,MAAM,WAAWQ,MAAM,UAAUsE,QAASrB,EAAiB1D,SAAU2D,IACxF/D,MAAOR,EAAK4F,WAAWzH,KAEzB,kBAACgD,EAAA,EAAD,CACET,KAAK,SACLC,WAAS,EACTqE,QAAQ,YACR3D,MAAM,UACNwD,UAAWL,EAAQV,OACnB1C,QAASiD,GAERrE,EAAKiF,OAAO9G,IAEf,kBAAC0H,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CAAMpB,UAAWL,EAAQT,KAAM3C,QAAS/B,GACrCW,EAAKkG,eAAe/H,KAGzB,kBAAC0H,EAAA,EAAD,CAAME,MAAI,GAEN,kBAAC,IAAD,CAAYI,GAAG,UAA+CtB,UAAWL,EAAQT,MAE5E/D,EAAKoG,SAASjI,QAQ7B,kBAAC,EAAD,CAAYA,OAAQA,EAAQmB,eAAgBA,EAAgBD,kBAAmBA,K,aC2CtEgH,EApJU,SAAAxD,GAAU,IAAD,EAEGyD,yBAAevI,KAFlB,mBAEvBI,EAFuB,KAEfoI,EAFe,KAIxBC,EAAqBvJ,4BAAkBG,KACvCqJ,EAAkBxJ,4BAAkB8B,KACpC/B,EAAeC,4BAAkBC,KANT,EAOOuE,mBAAS,MAPhB,mBAOvBiF,EAPuB,KAORC,EAPQ,KAQvB9E,EAAyBF,cAAzBE,sBACDsC,EAAWyC,iBAAO,IAElBxC,EAAUwC,iBAAO,IAXO,EAYEnF,oBAAS,GAZX,mBAYvBoF,EAZuB,KAYbC,EAZa,OAacrF,oBAAS,GAbvB,mBAavBnC,EAbuB,KAaPyH,EAbO,KAe9BC,qBAAU,WAwCNC,aAtCyB,SAAAzK,GACrBuF,IAAMC,KAAN,UAAc9F,IAAeC,OAA7B,yBAA2D,CACvDK,MAAOA,IAEV4F,MAAK,SAAAC,GACF,GAAmB,MAAhBA,EAAKC,OAAe,CAAC,IAAD,EAIfD,EAAK6E,KAFL1K,EAFe,EAEfA,MAAOG,EAFQ,EAERA,cAAewK,EAFP,EAEOA,IAAKC,EAFZ,EAEYA,SAAUC,EAFtB,EAEsBA,UACrCC,EAHe,EAGfA,SAAU7G,EAHK,EAGLA,MAAO8G,EAHF,EAGEA,OAAQjJ,EAHV,EAGUA,SAAUkJ,EAHpB,EAGoBA,UAIvC/K,aAAagL,QAAQ,QAASjL,GAC9BC,aAAagL,QAAQ,gBAAiB9K,GACtC8J,EAAgB,CACZiB,SAAU/K,IAGdK,EAAa,CACT2K,OAAQR,EACRC,SAAUA,EACVC,UAAWA,EACXC,SAAUA,EACV7G,MAAOA,EACP8G,OAAQA,IAEZhB,EAAejI,GACZkJ,GACChB,EAAmB,GAAD,OAAItK,IAAeC,QAAnB,OAA4BqL,IAElDb,GAAY,OAGnBnE,OAAM,SAAAC,GACHmF,QAAQC,IAAI,+DAQjBpL,aAAagE,OAAShE,aAAa8I,UAAY9I,aAAamJ,aAC3DzB,EAAS2D,QAAQjH,MAAQpE,aAAagE,MACtC2D,EAAQ0D,QAAQjH,MAAQpE,aAAa8I,SACrCuB,GAAY,MAElB,IAoEF,OAAGJ,EACQ,kBAAC,IAAD,CAAUP,GAAG,cAGjB,kBAAC,EAAD,CAAQhI,OAAQA,EACnBgG,SAAUA,EACVC,QAASA,EACTE,gBAAiBuC,EACjBtC,iBAAkB,SAAAwD,GAAK,OAAIjB,EAAYiB,EAAMjG,OAAO6D,UACpDtB,SArEa,SAAC0D,GACdA,EAAMC,kBAEU,IAAbnB,GACCpK,aAAagL,QAAQ,QAAStD,EAAS2D,QAAQjH,OAC/CpE,aAAagL,QAAQ,WAAYrD,EAAQ0D,QAAQjH,OACjDpE,aAAagL,QAAQ,cAAc,KAEnChL,aAAaqB,WAAW,SACxBrB,aAAaqB,WAAW,YACxBrB,aAAaqB,WAAW,eAG5BiE,IAAMC,KAAN,UAAc9F,IAAeC,OAA7B,gBAAmD,CAC/CsE,MAAO0D,EAAS2D,QAAQjH,MACxB0E,SAAUnB,EAAQ0D,QAAQjH,QAE7BuB,MAAK,SAAAC,GACF,GAAmB,MAAhBA,EAAKC,OAAe,CAAC,IAAD,EAMfD,EAAK6E,KAHL1K,EAHe,EAGfA,MAAOG,EAHQ,EAGRA,cAAewK,EAHP,EAGOA,IAAKC,EAHZ,EAGYA,SAAUC,EAHtB,EAGsBA,UACrCC,EAJe,EAIfA,SAAU7G,EAJK,EAILA,MAAO8G,EAJF,EAIEA,OAAQjJ,EAJV,EAIUA,SAAUkJ,EAJpB,EAIoBA,UACnCS,EALe,EAKfA,cAAeC,EALA,EAKAA,sBAInBzL,aAAagL,QAAQ,QAASjL,GAC9BC,aAAagL,QAAQ,gBAAiBQ,GACtCxL,aAAagL,QAAQ,gBAAiB9K,GACtCF,aAAagL,QAAQ,wBAAyBS,GAC9CzB,EAAgB,CACZiB,SAAU/K,IAGdK,EAAa,CACT2K,OAAQR,EACRC,SAAUA,EACVC,UAAWA,EACXC,SAAUA,EACV7G,MAAOA,EACP8G,OAAQA,IAEZhB,EAAejI,GACZkJ,GACChB,EAAmB,GAAD,OAAItK,IAAeC,QAAnB,OAA4BqL,IAElDb,GAAY,OAInBnE,OAAM,SAAAC,GACwB,MAAxBA,EAAIC,SAASJ,OACZT,EAAsB7B,EAAKmI,cAAchK,IAEzC0D,EAAsB7B,EAAKoI,cAAcjK,QAejDmB,eAAgBA,EAChBD,kBA7EsB,WACtB0H,GAAmBzH,OCvEZ+I,EALA,SAAAxF,GAEX,OAAO,kBAAC,EAAD,OCELC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC8C,UAAW,CACTwC,QAAS,EACTC,SAAU,WACVC,OAAQ,QACRC,UAAW,SACXjF,gBAAiBR,EAAMS,QAAQiF,WAAWzF,WAejC0F,GAXE,SAAA9F,GACb,IAAM2B,EAAU1B,IAEhB,OACI,kBAAC2B,EAAA,EAAD,CAAWE,SAAS,KAAKE,UAAWL,EAAQsB,UAAWpB,UAAU,QAC7D,kBAACE,EAAA,EAAD,MACC/B,EAAM+F,WCfJC,GALO,SAAAhG,GAElB,OAAO,kBAAC,GAAkBA,I,SCUxBC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNhD,OAAQyC,EAAMG,QAAQ,GACtBK,gBAAiBR,EAAMS,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPX,UAAWF,EAAMG,QAAQ,IAE3BW,OAAQ,CACNvD,OAAQyC,EAAMG,QAAQ,EAAG,EAAG,IAE9BY,KAAM,CACJC,OAAQ,UACRC,eAAgB,OAChB5C,MAAO2B,EAAMS,QAAQzD,KAAK0D,UAC1B,UAAU,CACNO,eAAgB,kBAKT,SAAS6E,GAAT,GAA8H,IAA7G3K,EAA4G,EAA5GA,OAAQ4K,EAAoG,EAApGA,SAASC,EAA2F,EAA3FA,WAAYC,EAA+E,EAA/EA,cAAeC,EAAgE,EAAhEA,UAAWC,EAAqD,EAArDA,aAAcC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,YACtH9E,EAAU1B,KAEhB,OACE,kBAAC2B,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAKC,UAAWL,EAAQvB,OACtB,kBAAC6B,EAAA,EAAD,CAAQD,UAAWL,EAAQjB,QACzB,kBAAC,IAAD,OAEF,kBAACwB,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,MAChChF,GAAKuJ,OAAOpL,IAEf,0BAAM0G,UAAWL,EAAQZ,KAAMsB,YAAU,GACvC,kBAACW,EAAA,EAAD,CAAMC,WAAS,EAAC3C,QAAS,GACvB,kBAAC0C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIwD,GAAI,GACrB,kBAACnJ,EAAA,EAAD,CACEgF,aAAa,QACbD,KAAK,YACLJ,QAAQ,WACRG,UAAQ,EACRxE,WAAS,EACTZ,GAAG,YACHS,MAAOR,GAAKqH,UAAUlJ,GACtBmC,WAAS,EACTO,MAAOuI,EAAUvI,MACjBC,WAAasI,EAAUrI,MAAsC,GAA9Bf,GAAKoJ,EAAUK,KAAKtL,GACnD8C,OAAQmI,EAAUrI,MAClBH,SAAUyI,KAGd,kBAACxD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIwD,GAAI,GACrB,kBAACnJ,EAAA,EAAD,CACE2E,QAAQ,WACRrE,WAAS,EACTZ,GAAG,WACHS,MAAOR,GAAKsH,SAASnJ,GACrBiH,KAAK,WACLC,aAAa,QACbC,SAAUgE,KAGd,kBAACzD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC3F,EAAA,EAAD,CACE2E,QAAQ,WACRG,UAAQ,EACRxE,WAAS,EACTZ,GAAG,QACHS,MAAOR,GAAKS,MAAMtC,GAClBiH,KAAK,QACLC,aAAa,QACbxE,MAAOmI,EAAWnI,MAClBC,WAAakI,EAAWjI,MAAoC,GAA5Bf,GAAKgB,aAAa7C,GAClD8C,OAAQ+H,EAAWjI,MACnBH,SAAUqI,KAGd,kBAACpD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC3F,EAAA,EAAD,CACE2E,QAAQ,WACRG,UAAQ,EACRxE,WAAS,EACTyE,KAAK,WACL5E,MAAOR,GAAKuF,SAASpH,GACrBuC,KAAK,WACLX,GAAG,WACHsF,aAAa,mBACbxE,MAAOqI,EAAUrI,MACjBC,WAAaoI,EAAUnI,MAAsC,GAA9Bf,GAAKkJ,EAAUO,KAAKtL,GACnD8C,OAAQiI,EAAUnI,MAClBH,SAAUuI,MAIhB,kBAAChI,EAAA,EAAD,CACET,KAAK,SACLC,WAAS,EACTqE,QAAQ,YACR3D,MAAM,UACNwD,UAAWL,EAAQV,OACnB1C,QAAS2H,GAER/I,GAAKuJ,OAAOpL,IAEf,kBAAC0H,EAAA,EAAD,CAAMC,WAAS,EAAC4D,QAAQ,YACtB,kBAAC7D,EAAA,EAAD,CAAME,MAAI,GACR,kBAAC,IAAD,CAAYI,GAAG,IAAItB,UAAWL,EAAQT,MACrC/D,GAAKiF,OAAO9G,SCxH3B,IAgFewL,GAhFU,SAAA9G,GAErB,IAAM1E,EAASyL,yBAAe7L,KAFA,EAG2B4D,cAAlDC,EAHuB,EAGvBA,wBAAyBC,EAHF,EAGEA,sBAHF,EAIMJ,mBAAS,CAACZ,MAAO,GAAIE,OAAO,IAJlC,mBAIvBiI,EAJuB,KAIXa,EAJW,OAKIpI,mBAAS,CAACZ,MAAO,GAAIE,OAAO,IALhC,mBAKvBmI,EALuB,KAKZY,EALY,OAMIrI,mBAAS,CAACZ,MAAO,GAAIE,OAAO,IANhC,mBAMvBqI,EANuB,KAMZW,EANY,KAQxBT,EAAc1C,mBAuDpB,OACI,kBAAC,GAAD,CACIzI,OAAQA,EAGRmL,YAAaA,EACbF,UAAWA,EACXF,UAAWA,EACXF,WAAYA,EACZD,SA9DS,SAAChB,GACdA,EAAMC,iBACF,mCAAmCxJ,KAAKwK,EAAWnI,OAGpDqI,EAAUrI,MAAMmJ,OAAS,EACxBF,EAAa,2BAAIZ,GAAL,IAAgBnI,OAAO,EAAO0I,IAAK,eAG/C,gBAAgBjL,KAAK4K,EAAUvI,OAGhCuI,EAAUvI,MAAMmJ,OAAS,EACxBD,EAAa,2BAAIX,GAAL,IAAgBrI,OAAO,EAAO0I,IAAK,eAEhDL,EAAUvI,MAAMmJ,QAAU,GACzBD,EAAa,2BAAIX,GAAL,IAAgBrI,OAAO,EAAO0I,IAAK,cAG/C1H,IAAMC,KAAN,UAAc9F,IAAeC,OAA7B,iBAAoD,CAChDkL,UAAW+B,EAAUvI,MACrByG,SAAUgC,EAAYxB,QAAQjH,MAC9BJ,MAAOuI,EAAWnI,MAClB0E,SAAU2D,EAAUrI,MACpBvC,SAAUH,EACV8D,SAAUC,OAAOhD,SAASiD,OAE7BC,MAAK,SAAAC,GACiB,MAAhBA,EAAKC,QAEJV,EAAwB5B,GAAKiK,YAAY9L,OAGhDqE,OAAM,SAAAC,GACwB,MAAxBA,EAAIC,SAASJ,OACZT,EAAsB7B,GAAKkK,WAAW/L,IAEtC0D,EAAsB7B,GAAKiB,MAAM9C,OA3BzC4L,EAAa,2BAAIX,GAAL,IAAgBrI,OAAO,EAAO0I,IAAK,iBAP/CI,EAAc,2BAAIb,GAAL,IAAiBjI,OAAO,MA4DrCsI,aApBa,SAAC,GAAuB,IAAbxI,EAAY,EAArBiB,OAASjB,MAC5BkJ,EAAa,2BAAIX,GAAL,IAAgBvI,MAAOA,EAAOE,OAAO,MAoB7CkI,cAlBc,SAAC,GAAsB,IAAbpI,EAAY,EAApBiB,OAAQjB,MAC5BgJ,EAAc,2BAAIb,GAAL,IAAiBnI,MAAOA,EAAOE,OAAO,MAkB/CoI,aAhBa,SAAC,GAAuB,IAAbtI,EAAY,EAArBiB,OAASjB,MAC5BiJ,EAAa,2BAAIZ,GAAL,IAAgBrI,MAAOA,EAAOE,OAAO,SC7D1CoJ,GALA,SAAAtH,GAEX,OAAO,kBAAC,GAAD,O,6BCMX,SAASuH,GAAMvH,GACX,OAAO,kBAAC,KAAD,eAAUwH,UAAW,EAAGrF,QAAQ,UAAanC,IAGxD,IA0BeyH,GA1BU,WAAO,IAAD,EACchE,yBAAeiE,MAD7B,mBACpBC,EADoB,KACDC,EADC,KAIrBC,EAAc,SAAC3C,EAAO4C,GACT,cAAXA,GAGJF,EAAY,2BAAID,GAAL,IAAwB7K,MAAM,MAG7C,OAAO,kBAACiL,GAAA,EAAD,CACHjL,KAAM6K,EAAkB7K,KACxBkL,iBAAkBL,EAAkBK,iBACpCjL,QAAS8K,EACTI,aAAc,CAAEC,SAAS,MAAOC,WAAW,WAE3C,kBAAC,GAAD,CACIpL,QAAS8K,EACTO,SAAUT,EAAkBS,UAE3BT,EAAkBf,OCrBhByB,GAXM,SAAArI,GAEjB,OACI,oCACI,kBAAC,GAAD,Q,UCsCKsI,GAtCO,WAEpB,IAAMC,EAAkBnO,4BAAkB8B,KACpCsM,EAAStO,eAgCf,OA9BqBa,uBAAY,WAC7B,IAAMpB,EAAQC,aAAaC,QAAQ,SAC7BuL,EAAgBxL,aAAaC,QAAQ,iBACrCwL,EAAwBzL,aAAaC,QAAQ,yBACnD,GAAIuL,GAAiBC,GAAyB,IAAItL,KAAKsL,GAAuBrL,WAAY,IAAID,MAAOC,UAEjG,OAAOkF,IAAMC,KAAN,UAAc9F,IAAeC,OAA7B,uBAA0D,CAC7DK,MAAOA,EAAOyL,cAAeA,IAE9B7F,MAAK,SAAAC,GACJ,GAAmB,MAAhBA,EAAKC,OAAe,CAAC,IAAD,EACgED,EAAK6E,KAAnFoE,EADc,EACdA,UAAWC,EADG,EACHA,kBAAmBC,EADhB,EACgBA,kBAAmBC,EADnC,EACmCA,0BACxDhP,aAAagL,QAAQ,QAAS6D,GAC9B7O,aAAagL,QAAQ,gBAAiB8D,GACtC9O,aAAagL,QAAQ,gBAAiB+D,GACtC/O,aAAagL,QAAQ,wBAAyBgE,GAC9CL,EAAgB,CACV1D,SAAU8D,QAInBhJ,OAAM,SAAAC,GACH4I,OAINA,MAEL,CAACA,EAAQD,KCLVM,GAAeC,IAAMC,MAAK,kBAAM,kCAChCC,GAAkBF,IAAMC,MAAK,kBAAM,+DACnCE,GAAmBH,IAAMC,MAAK,kBAAM,8DACpCG,GAAeJ,IAAMC,MAAK,kBAAM,uDAChCI,GAAoBL,IAAMC,MAAK,kBAAM,gEACrCK,GAAkBN,IAAMC,MAAK,kBAAM,kCACnCM,GAAcP,IAAMC,MAAK,kBAAM,kCAI/BO,GAAW,WAEb,IAAMC,EAAejB,KACfkB,EAAczC,yBAAe7K,KAanC,OAXA4M,IAAM3E,WAAU,WAEZ,IAAIU,EAAW,IAAI9K,KAAKyP,EAAY3E,UAAU7K,WAAY,IAAID,MAAOC,UAClE6K,GAAY,KACX4E,YAAW,WACPF,MACD1E,EAAW,OAGnB,CAAC2E,IAEG,sCAGLE,GAAYC,YAAe,CAAC/I,QAAS,CAAC/C,KAAM,UAC5C+L,GAAeD,YAAe,IAG9B1J,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0J,SAAU,CACRC,OAAQ3J,EAAM2J,OAAOC,OAAS,EAC9BvL,MAAO,YA+HIwL,GA1HH,WAER,IAAMrI,EAAU1B,KAEVgK,EAAOlD,yBAAe3K,KACtB8N,EAAYnD,yBAAetM,KAC3B0P,EAAWpD,yBAAe1M,KAC1B+P,EAAWrD,yBAAehL,KAC1BsO,EAAevB,IAAMwB,YACrBC,EAAiB,SAAAnP,GAAG,OAAI,WAC1BiP,EAAapF,QAAQuF,cAAcpP,KAGjCqP,EAAoB,OAAbN,EACX,oCAEUC,EACE,kBAAC,WAAD,CAAUM,SACR,kBAACC,EAAA,EAAD,CAAU3I,UAAWL,EAAQkI,SAAU/M,MAAM,GACzC,kBAAC8N,EAAA,EAAD,CAAkBpM,MAAM,cAG5B,kBAAC0K,GAAD,OAGF,kBAAC,IAAD,CAAO2B,KAAK,YAAYC,OAAK,EAACC,OAAS,kBACrC,kBAACC,EAAA,EAAD,CAAe7K,MAAO8J,EAAOP,GAAYE,IACrC,kBAAC,WAAD,CAAUc,SACN,kBAACC,EAAA,EAAD,CAAU3I,UAAWL,EAAQkI,SAAU/M,MAAM,GACzC,kBAAC8N,EAAA,EAAD,CAAkBpM,MAAM,cAG5B,kBAACqK,GAAD,MACA,kBAACG,GAAD,MACA,kBAACC,GAAD,YAMtB,KAGF,OAAQ,kBAAC+B,EAAA,EAAD,CAAe7K,MAAO8J,EAAOP,GAAYE,IAEzC,kBAAC,GAAD,KACI,kBAAC7H,EAAA,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,IAAD,CACIkJ,SAAU,EACVjD,iBAAkB,IAClBkD,kBAAgB,EAChBjD,aAAc,CACVC,SAAU,MACVC,WAAY,QAEhBgD,IAAKd,EACLe,OAAQ,SAAChQ,GAAD,OACJ,kBAACiQ,EAAA,EAAD,CAAY9M,QAASgM,EAAenP,IAChC,kBAAC,IAAD,CAAWkQ,SAAS,QAAQC,MAAO,CAAC/M,MAAO,cAInD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOqM,KAAK,IAAIC,OAAK,EAACjJ,UAAW2D,IACjC,kBAAC,IAAD,CAAOqF,KAAK,UAAUC,OAAK,EAACjJ,UAAWyF,KACtCmD,EACD,kBAAC,IAAD,CAAOI,KAAK,qBAAqBC,OAAK,EAACC,OAAQ,kBAC3C,kBAAC,WAAD,CAAUL,SACN,kBAACC,EAAA,EAAD,CAAU3I,UAAWL,EAAQkI,SAAU/M,MAAM,GACzC,kBAAC8N,EAAA,EAAD,CAAkBpM,MAAM,cAG5B,kBAAC4K,GAAD,UAMR,kBAAC,IAAD,CAAOyB,KAAK,0CAA0CC,OAAK,EAACC,OAAQ,kBAChE,kBAAC,WAAD,CAAUL,SACN,kBAACC,EAAA,EAAD,CAAU3I,UAAWL,EAAQkI,SAAU/M,MAAM,GACzC,kBAAC8N,EAAA,EAAD,CAAkBpM,MAAM,cAG5B,kBAAC2K,GAAD,UAGR,kBAAC,IAAD,CAAO0B,KAAK,iCAAiCC,OAAK,EAACC,OAAQ,kBACvD,kBAAC,WAAD,CAAUL,SACN,kBAACC,EAAA,EAAD,CAAU3I,UAAWL,EAAQkI,SAAU/M,MAAM,GACzC,kBAAC8N,EAAA,EAAD,CAAkBpM,MAAM,cAG5B,kBAAC2K,GAAD,UAOR,kBAAC,IAAD,CAAUqC,KAAK,IAAIlI,GAAG,OAGzB4G,EACG,kBAAC,WAAD,CAAUQ,SACN,kBAACC,EAAA,EAAD,CAAU3I,UAAWL,EAAQkI,SAAU/M,MAAM,GACzC,kBAAC8N,EAAA,EAAD,CAAkBpM,MAAM,cAG5B,kBAAC6K,GAAD,OAEN,KAEF,kBAAC,GAAD,UCnLAoC,QACW,cAA7BpM,OAAOhD,SAAS+C,UAEe,UAA7BC,OAAOhD,SAAS+C,UAEhBC,OAAOhD,SAAS+C,SAASsM,MACvB,2D,OCJNC,IAASZ,OACP,kBAAC,IAAMa,WAAP,KACE,kBAAC,aAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,SAINC,SAASC,eAAe,SD6GpB,kBAAmBtQ,WACrBA,UAAUuQ,cAAcC,MACrBzM,MAAK,SAAA0M,GACJA,EAAaC,gBAEdvM,OAAM,SAAAvB,GACL2G,QAAQ3G,MAAMA,EAAM+N,a,m1CElFbrN,IAlDU,WAAO,IAAD,EAEuB2E,yBAAeiE,KAFtC,mBAEpBC,EAFoB,KAEDyE,EAFC,KAIrBC,EAAa,2BACZ1E,GADY,IAEf7K,MAAM,EACNkL,iBAAkB,MAUhBsE,EAA2B,SAAClE,EAAUxB,GACxCwF,EAAqB,2BACdC,GADa,IAEhBjE,SAAUA,EACVxB,IAAKA,MAoBb,MAAO,CACH2F,iBAhCqB,SAAAC,GACrBJ,EAAqB,2BACdC,GACAG,KA8BPzN,wBAlB4B,SAAA6H,GAC5B0F,EAAyB,UAAU1F,IAkBnC5H,sBAX0B,SAAA4H,GAC1B0F,EAAyB,QAAQ1F,IAWjC6F,qBARyB,SAAA7F,GACzB0F,EAAyB,OAAO1F,IAQhC8F,wBAjB4B,SAAA9F,GAC5B0F,EAAyB,UAAU1F,O,gCCnC3C,6CAEMc,EAAmBvM,eAAK,CAC1BC,IAAK,mBACLC,QAAS,CACLyB,MAAM,EACNkL,iBAAkB,IAClBI,SAAU,UACVxB,IAAK,Q","file":"static/js/main.dadd6e04.chunk.js","sourcesContent":["import openSocket from 'socket.io-client'; \r\nimport {DEFAULT_CONFIG} from '../conf/configuration';\r\nlet socket;\r\n\r\nconst socketClient = \r\n {   \r\n    getSocket: () => {\r\n        if(!socket){\r\n            socket = openSocket(DEFAULT_CONFIG.server);\r\n            return socket;    \r\n        }\r\n        return socket;\r\n    },\r\n    close: () => {\r\n        socket.close();\r\n    }\r\n};\r\n\r\nexport default socketClient;","const AuthMiddleware = async (nextOptimisticAction) => {\r\n    // Revisar si el token esta en timepo\r\n    const token = localStorage.getItem('token');\r\n    const token_expires = localStorage.getItem('token_expires');\r\n\r\n    if (token && token_expires && new Date(token_expires).getTime() > new Date().getTime()) {\r\n      const dataOptimistic = await nextOptimisticAction(token);\r\n      return dataOptimistic;\r\n    } \r\n  }\r\n\r\n  \r\n  export default AuthMiddleware;","import {useSetRecoilState} from 'recoil';\r\nimport axios from 'axios';\r\nimport {loginData, userAvatarState, subscribeToEventsState, contactListState, friendsAtom} from '../components/recoil/atoms';\r\nimport { useCallback } from 'react';\r\nimport socketClient from './socket';\r\n\r\nconst useLogout = () => {\r\n\r\n    const setLoginData = useSetRecoilState(loginData);\r\n    const setUserAvatar = useSetRecoilState(userAvatarState);\r\n    const setSubscribe = useSetRecoilState(subscribeToEventsState);\r\n    const setContactList = useSetRecoilState(contactListState);\r\n    const setFriends = useSetRecoilState(friendsAtom);\r\n    const client = socketClient.getSocket();\r\n\r\n    return useCallback(() => {\r\n        \r\n        setUserAvatar(null);\r\n        setContactList([]);\r\n        setFriends([]);\r\n        client.emit('logout', {});\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refresh_token');\r\n        localStorage.removeItem('refresh_token_expires');\r\n        localStorage.removeItem('token_expires');\r\n        setSubscribe(false);\r\n        setLoginData(null);\r\n        \r\n        \r\n    });\r\n}\r\nexport default useLogout;","\r\nimport {atom, selector} from 'recoil';\r\n\r\nconst getDefaultLanguage= () => {\r\n    let idioma = 'en';\r\n    var userLang = navigator.language || navigator.userLanguage;\r\n    if(/^(es-).+/.test(userLang)){\r\n        idioma = 'es';\r\n    }\r\n    return idioma;\r\n}\r\n\r\nconst idiomaState = atom({\r\n    key: 'idiomaState',\r\n    default: getDefaultLanguage()\r\n});\r\n\r\nconst loginData = atom({\r\n    key: 'loginData',\r\n    default: null\r\n});\r\nconst userAvatarState = atom({\r\n    key: 'userAvatarState',\r\n    default: null\r\n});\r\n\r\n\r\n\r\nconst chatConversation = atom({\r\n    key: 'chatConversation',\r\n    default: {\r\n        'active': false\r\n    }\r\n});\r\n\r\nconst contactListState = atom({\r\n    key: 'contactListState',\r\n    default: []\r\n});\r\n\r\n\r\nconst view = {\r\n    posibleViews: {\r\n        LOGIN: 'LOGIN',\r\n        CONTACTS: 'CONTACTS',\r\n        CHAT: 'CHAT'\r\n    },\r\n    getAtom: atom({\r\n        key: 'view',\r\n        default: 'LOGIN'\r\n    })\r\n};\r\n\r\nconst backdropState = atom({\r\n    key: 'backdropState',\r\n    default: false\r\n});\r\n\r\nconst subscribeToEventsState = atom({\r\n    key: 'subscribeToEventsState',\r\n    default: false\r\n})\r\n\r\nconst addContactViewOpenState = atom({\r\n    key: 'addContactViewOpenState',\r\n    default: false\r\n});\r\n\r\nconst friendsAtom = atom({\r\n    key: 'friendsAtom',\r\n    default: []\r\n});\r\n\r\nconst activeChatWith = atom({\r\n    key: 'activeChatWith',\r\n    default: null\r\n});\r\n\r\nconst getConversationWithContact = contactId => atom({\r\n    key: `conversationWith_${contactId}`,\r\n    default: []\r\n});\r\n\r\nconst messagesAtom = atom({\r\n    key: 'messagesAtom',\r\n    default: null\r\n});\r\n\r\nconst tokenTimeoutAtom = atom({\r\n    key: 'tokenTimeoutAtom',\r\n    default: {\r\n        tokentimeout: 0\r\n    }\r\n});\r\n\r\nconst darkModeAtom = atom({\r\n    key: 'themeAtom',\r\n    default: localStorage.getItem('darkMode') === 'true' ? true : false\r\n});\r\n\r\nexport {idiomaState, loginData, chatConversation, view, contactListState, subscribeToEventsState, \r\n    backdropState, userAvatarState, addContactViewOpenState,\r\n    friendsAtom, \r\n    activeChatWith, messagesAtom, getConversationWithContact, tokenTimeoutAtom, darkModeAtom\r\n};","const DEV = {\r\n    server: \"http://localhost:3001\"\r\n}\r\nconst PROD = {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    server: location.origin //\"https://shut-app-back.herokuapp.com\"\r\n}\r\n\r\nexport const DEFAULT_CONFIG = process.env.NODE_ENV === \"development\" ? DEV : PROD;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\r\nimport text from './idioma.json';\r\n\r\n\r\n\r\nconst ForgotPassView = ({idioma, forgetPassHandler, forgotWinState, forgotWinOk, onChangeForgotEmail, forgotEmailState}) => {\r\n\r\n    return (\r\n        <Dialog open={forgotWinState} onClose={forgetPassHandler} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{text.title[idioma]}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {text.forgotText[idioma]}\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label={text.email[idioma]}\r\n            type=\"email\"\r\n            fullWidth\r\n            onChange={onChangeForgotEmail}\r\n            value={forgotEmailState.value}\r\n            helperText={!forgotEmailState.valid ? text.invalidEmail[idioma] : ''}\r\n            error={!forgotEmailState.valid}\r\n\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={forgetPassHandler} color=\"primary\">\r\n            {text.forgotBtnCancel[idioma]}\r\n          </Button>\r\n          <Button onClick={forgotWinOk} color=\"primary\">\r\n            {text.forgotBtnOk[idioma]}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n\r\n}\r\nexport default ForgotPassView;","import React, {useState} from 'react';\r\nimport NotificationHook from '../../../components/uiComponents/notification/notification.hook';\r\nimport text from './idioma.json';\r\nimport ForgotPassView from './forgotPass.view';\r\nimport axios from 'axios';\r\nimport {DEFAULT_CONFIG} from '../../../conf/configuration';\r\n\r\n\r\nconst ForgotPassController = ({idioma, forgotWinState, forgetPassHandler}) => {\r\n\r\n    const [forgotEmailState, setForgotEmailStste] = useState({value:'', valid:true});\r\n    const {openSuccessNotification, openErrorNotification} = NotificationHook();\r\n\r\n    const onChangeForgotEmail = ({target: {value}}) => {\r\n        setForgotEmailStste({...forgotEmailState, valid: true, value: value});\r\n    }\r\n\r\n    const forgotWinOk = () => {        \r\n        if(!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(forgotEmailState.value)){\r\n            setForgotEmailStste({...forgotEmailState, valid: false});\r\n        }else{\r\n            axios.post(`${DEFAULT_CONFIG.server}/users/forgot`, {\r\n                email: forgotEmailState.value,\r\n                hostname: window.location.host\r\n            })\r\n            .then(resp => {\r\n                if(resp.status === 201){\r\n                    // Send a notification\r\n                    openSuccessNotification(text.emailSended[idioma]);\r\n                }\r\n                forgetPassHandler();\r\n\r\n            })\r\n            .catch(err => {\r\n                if(err.response.status === 404){\r\n                    openErrorNotification(text.emailNotFound[idioma]);\r\n                }else{\r\n                    openErrorNotification(text.error[idioma]);\r\n                }\r\n            });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    return <ForgotPassView \r\n        idioma={idioma}\r\n        forgotWinState={forgotWinState}\r\n        onChangeForgotEmail={onChangeForgotEmail}\r\n        forgotWinOk={forgotWinOk}\r\n        forgotEmailState={forgotEmailState}\r\n        setForgotEmailStste={setForgotEmailStste}\r\n        forgetPassHandler={forgetPassHandler}\r\n    />;\r\n\r\n}\r\nexport default ForgotPassController;","import React from 'react';\r\nimport ForgotPassController from './forgotPass.controller';\r\n\r\nconst ForgotPass = props => {\r\n\r\n    return <ForgotPassController {...props}/>;\r\n\r\n}\r\nexport default ForgotPass;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport ForgotPass from './forgotpass';\r\nimport text from './idioma.json'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    cursor: 'pointer',\r\n    textDecoration: 'none',\r\n    color: theme.palette.text.secondary,\r\n    '&:hover':{\r\n        textDecoration: 'underline',\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function SignIn({idioma, emailRef, passRef, onSignIn, rememberChecked, onRememberChange, \r\n  forgetPassHandler, forgotWinState}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {text.signin[idioma]}\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label={text.email[idioma]}\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            inputRef={emailRef}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label={text.password[idioma]}\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            inputRef={passRef}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" checked={rememberChecked} onChange={onRememberChange}/>}\r\n            label={text.rememberme[idioma]}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={onSignIn}            \r\n          >\r\n            {text.signin[idioma]}\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link className={classes.link} onClick={forgetPassHandler}>\r\n                {text.forgotpassword[idioma]}\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n                {\r\n                <RouterLink to=\"/signup\" /*style={{textDecoration: 'none'}}*/ className={classes.link}>\r\n                    \r\n                    {text.gosignup[idioma]}\r\n                    \r\n                </RouterLink>\r\n                }\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <ForgotPass idioma={idioma} forgotWinState={forgotWinState} forgetPassHandler={forgetPassHandler}/>\r\n\r\n    </Container>\r\n  );\r\n}","import React, {useRef, useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {useSetRecoilState, useRecoilState} from 'recoil';\r\nimport {idiomaState, /*authTokenState,*/ userAvatarState, loginData, tokenTimeoutAtom} from '../../components/recoil/atoms';\r\nimport Signin from \"./signin.view\";\r\nimport {DEFAULT_CONFIG} from '../../conf/configuration';\r\nimport NotificationHook from '../../components/uiComponents/notification/notification.hook';\r\nimport text from './idioma.json';\r\nimport authMiddleware from '../../authMiddleware';\r\n\r\nconst SigninController = props => {\r\n\r\n    const [idioma, setIdiomaState] = useRecoilState(idiomaState);\r\n    //const setAuthTokenState = useSetRecoilState(authTokenState);\r\n    const setUserAvatarState = useSetRecoilState(userAvatarState);\r\n    const setTokenTimeOut = useSetRecoilState(tokenTimeoutAtom);\r\n    const setLoginData = useSetRecoilState(loginData);\r\n    const [redirectState, setRedirect] = useState(null);\r\n    const {openErrorNotification} = NotificationHook();\r\n    const emailRef = useRef('');\r\n    \r\n    const passRef = useRef('');\r\n    const [remember, setRemember] = useState(false);\r\n    const [forgotWinState, setforgotWinState] = useState(false);\r\n\r\n    useEffect(() => {\r\n        \r\n        const optimisticAction = token => {\r\n            axios.post(`${DEFAULT_CONFIG.server}/users/loginWithToken`,{\r\n                token: token\r\n            })\r\n            .then(resp => {\r\n                if(resp.status === 200){\r\n                    const {\r\n                        token, token_expires, _id, nickname, firstName,\r\n                        lastName, email, gender, language, avatarUrl\r\n                    } = resp.data;\r\n    \r\n                    \r\n                    localStorage.setItem('token', token);\r\n                    localStorage.setItem('token_expires', token_expires);\r\n                    setTokenTimeOut({\r\n                        timeleft: token_expires\r\n                    });\r\n    \r\n                    setLoginData({\r\n                        userId: _id, \r\n                        nickname: nickname,\r\n                        firstName: firstName,\r\n                        lastName: lastName,\r\n                        email: email,\r\n                        gender: gender\r\n                    });\r\n                    setIdiomaState(language);\r\n                    if(avatarUrl)\r\n                        setUserAvatarState(`${DEFAULT_CONFIG.server}${avatarUrl}`);\r\n\r\n                    setRedirect(true);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('Error al cargar los datos del usuario usando el token');\r\n            })\r\n        }\r\n        \r\n        authMiddleware(optimisticAction);\r\n\r\n\r\n\r\n        if(localStorage.email && localStorage.password && localStorage.rememberme){\r\n            emailRef.current.value = localStorage.email;\r\n            passRef.current.value = localStorage.password;\r\n            setRemember(true);\r\n        }\r\n    },[])\r\n\r\n    const forgetPassHandler = () => {\r\n        setforgotWinState(!forgotWinState);\r\n    }\r\n\r\n    \r\n\r\n    const onSignIn = (event) => {\r\n        event.preventDefault();\r\n        \r\n        if(remember === true){\r\n            localStorage.setItem('email', emailRef.current.value);\r\n            localStorage.setItem('password', passRef.current.value);\r\n            localStorage.setItem('rememberme', true);\r\n        }else{\r\n            localStorage.removeItem('email');\r\n            localStorage.removeItem('password');\r\n            localStorage.removeItem('rememberme');\r\n        }\r\n\r\n        axios.post(`${DEFAULT_CONFIG.server}/users/login`, {\r\n            email: emailRef.current.value,\r\n            password: passRef.current.value\r\n        })\r\n        .then(resp => {\r\n            if(resp.status === 200){\r\n                \r\n                const {\r\n                    token, token_expires, _id, nickname, firstName,\r\n                    lastName, email, gender, language, avatarUrl,\r\n                    refresh_token, refresh_token_expires\r\n                } = resp.data;\r\n\r\n                \r\n                localStorage.setItem('token', token);\r\n                localStorage.setItem('refresh_token', refresh_token);\r\n                localStorage.setItem('token_expires', token_expires);\r\n                localStorage.setItem('refresh_token_expires', refresh_token_expires);\r\n                setTokenTimeOut({\r\n                    timeleft: token_expires\r\n                });\r\n\r\n                setLoginData({\r\n                    userId: _id, \r\n                    nickname: nickname,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    email: email,\r\n                    gender: gender\r\n                });\r\n                setIdiomaState(language);\r\n                if(avatarUrl)\r\n                    setUserAvatarState(`${DEFAULT_CONFIG.server}${avatarUrl}`);\r\n\r\n                setRedirect(true);\r\n\r\n            }\r\n        })\r\n        .catch(err => {\r\n            if(err.response.status === 403){\r\n                openErrorNotification(text.notAuthorized[idioma]);\r\n            }else{\r\n                openErrorNotification(text.internalError[idioma]);\r\n            }\r\n        });\r\n    }\r\n\r\n    if(redirectState){\r\n        return <Redirect to=\"/contacts\" />\r\n    }\r\n    \r\n    return <Signin idioma={idioma} \r\n        emailRef={emailRef}\r\n        passRef={passRef}\r\n        rememberChecked={remember}\r\n        onRememberChange={event => setRemember(event.target.checked)}\r\n        onSignIn={onSignIn}\r\n        forgotWinState={forgotWinState}\r\n        forgetPassHandler={forgetPassHandler}\r\n    />;\r\n\r\n}\r\n\r\nexport default SigninController;\r\n","import React from 'react';\r\nimport SigninController from './signin.controller';\r\nconst Signin = props => {\r\n\r\n    return <SigninController />;\r\n\r\n}\r\nexport default Signin;","import React from 'react';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      padding: 0,\r\n      position: 'relative',\r\n      height: '100vh',\r\n      overflowY: 'hidden',\r\n      backgroundColor: theme.palette.background.paper\r\n    }\r\n  }));\r\n\r\nconst MainView = props => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" className={classes.container} component=\"main\">\r\n            <CssBaseline />\r\n            {props.children}\r\n        </Container>\r\n    );\r\n\r\n}\r\nexport default MainView;","import React from 'react';\r\nimport ContainerView from './main.view';\r\nconst MainContainer = props => {\r\n\r\n    return <ContainerView {...props}/>;\r\n\r\n}\r\nexport default MainContainer;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\n\r\nimport text from './idioma.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    cursor: 'pointer',\r\n    textDecoration: 'none',\r\n    color: theme.palette.text.secondary,\r\n    '&:hover':{\r\n        textDecoration: 'underline',\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function SignUp({idioma, onSignUp,emailState, onEmailChange, passState, onPassChange, nameState, onNameChange, lastNameRef}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {text.signup[idioma]}\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label={text.firstName[idioma]}\r\n                autoFocus\r\n                value={nameState.value}\r\n                helperText={!nameState.valid ? text[nameState.msg][idioma] : ''}\r\n                error={!nameState.valid}\r\n                onChange={onNameChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label={text.lastName[idioma]}\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                inputRef={lastNameRef}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label={text.email[idioma]}\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={emailState.value}\r\n                helperText={!emailState.valid ? text.invalidEmail[idioma] : ''}\r\n                error={!emailState.valid}\r\n                onChange={onEmailChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label={text.password[idioma]}\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={passState.value}\r\n                helperText={!passState.valid ? text[passState.msg][idioma] : ''}\r\n                error={!passState.valid}\r\n                onChange={onPassChange}\r\n              />\r\n            </Grid>            \r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={onSignUp}\r\n          >\r\n            {text.signup[idioma]}\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <RouterLink to=\"/\" className={classes.link}>\r\n              {text.signin[idioma]}\r\n              </RouterLink>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","import React, {useState, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport {DEFAULT_CONFIG} from '../../conf/configuration';\r\nimport Signup from './signup.view';\r\nimport {useRecoilValue} from 'recoil';\r\nimport {idiomaState} from '../../components/recoil/atoms';\r\nimport NotificationHook from '../../components/uiComponents/notification/notification.hook';\r\nimport text from './idioma.json';\r\n\r\nconst SignupController = props => {\r\n    \r\n    const idioma = useRecoilValue(idiomaState);\r\n    const {openSuccessNotification, openErrorNotification} = NotificationHook();\r\n    const [emailState, setEmailState] = useState({value: \"\", valid: true});\r\n    const [passState, setPassState] = useState({value: \"\", valid: true});    \r\n    const [nameState, setNameState] = useState({value: \"\", valid: true});    \r\n    \r\n    const lastNameRef = useRef();\r\n\r\n    const onSignUp = (event) => {\r\n        event.preventDefault();\r\n        if(!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(emailState.value)){\r\n            setEmailState({...emailState, valid: false});\r\n        }else\r\n        if(passState.value.length < 8){\r\n            setPassState({...passState, valid: false, msg: 'passShort'});\r\n        }else\r\n\r\n        if(!/^[a-zA-Z\\']+$/.test(nameState.value)){\r\n            setNameState({...nameState, valid: false, msg: 'nameInvalid'});\r\n        }else\r\n        if(nameState.value.length < 2){\r\n            setNameState({...nameState, valid: false, msg: 'nameShort'});\r\n        }else\r\n        if(nameState.value.length >= 20){\r\n            setNameState({...nameState, valid: false, msg: 'nameLong'});\r\n        }else {\r\n            // All validations pass!\r\n            axios.post(`${DEFAULT_CONFIG.server}/users/signup`, {\r\n                firstName: nameState.value,\r\n                lastName: lastNameRef.current.value,\r\n                email: emailState.value,\r\n                password: passState.value,\r\n                language: idioma,\r\n                hostname: window.location.host\r\n            })\r\n            .then(resp => {\r\n                if(resp.status === 201){\r\n                    // Send a notification\r\n                    openSuccessNotification(text.userCreated[idioma]);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if(err.response.status === 409){\r\n                    openErrorNotification(text.duplicated[idioma]);\r\n                }else{\r\n                    openErrorNotification(text.error[idioma]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const onNameChange = ({target: {value}}) => {\r\n        setNameState({...nameState, value: value, valid: true});\r\n    }\r\n    const onEmailChange = ({target:{value}}) => {\r\n        setEmailState({...emailState, value: value, valid: true});\r\n    }\r\n    const onPassChange = ({target: {value}}) => {\r\n        setPassState({...passState, value: value, valid: true});\r\n    }\r\n\r\n    return (\r\n        <Signup \r\n            idioma={idioma}\r\n           \r\n            \r\n            lastNameRef={lastNameRef}\r\n            nameState={nameState}\r\n            passState={passState}\r\n            emailState={emailState}\r\n            onSignUp={onSignUp}\r\n            onNameChange={onNameChange}\r\n            onEmailChange={onEmailChange}\r\n            onPassChange={onPassChange}\r\n        />\r\n    );\r\n\r\n}\r\nexport default SignupController;","import React from 'react';\r\nimport SignupController from './signup.controller';\r\n\r\nconst Signup = props => {\r\n\r\n    return <SignupController />;\r\n\r\n}\r\nexport default Signup;","import React from 'react';\r\nimport {useRecoilState} from 'recoil';\r\nimport {Snackbar } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nimport {notificationAtom} from './notification.atom';\r\n\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst NotificationView = () => {\r\n    const [notificationState, setNotState] = useRecoilState(notificationAtom);\r\n    \r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setNotState({...notificationState, open: false});\r\n    };\r\n\r\n    return <Snackbar \r\n        open={notificationState.open}\r\n        autoHideDuration={notificationState.autoHideDuration}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical:'top', horizontal:'center' }}\r\n    >\r\n        <Alert\r\n            onClose={handleClose}\r\n            severity={notificationState.severity}\r\n        >\r\n            {notificationState.msg}\r\n        </Alert>\r\n    </Snackbar>;\r\n\r\n}\r\nexport default NotificationView;","import React from 'react';\r\nimport NotificationView from './notification/notification.view';\r\n//import Backdrop from './backdrop/backdrop.view';\r\n\r\nconst Notification = props => {\r\n\r\n    return (\r\n        <>\r\n            <NotificationView />\r\n            {/*<Backdrop />*/}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Notification;","//import React from 'react';\r\nimport {useSetRecoilState} from 'recoil';\r\nimport axios from 'axios';\r\nimport {tokenTimeoutAtom} from '../components/recoil/atoms';\r\nimport useLogout from './useLogout';\r\nimport {DEFAULT_CONFIG} from '../conf/configuration'\r\nimport { useCallback } from 'react';\r\n\r\nconst useRefreshToken = () => {\r\n\r\n    const setTokenTimeout = useSetRecoilState(tokenTimeoutAtom);\r\n    const logout = useLogout();\r\n    \r\n    const refreshToken = useCallback(() => {\r\n        const token = localStorage.getItem('token');\r\n        const refresh_token = localStorage.getItem('refresh_token');\r\n        const refresh_token_expires = localStorage.getItem('refresh_token_expires');\r\n        if (refresh_token && refresh_token_expires && new Date(refresh_token_expires).getTime() > new Date().getTime()) {\r\n            \r\n            return axios.post(`${DEFAULT_CONFIG.server}/users/refreshtoken`, {\r\n                token: token, refresh_token: refresh_token\r\n              })\r\n              .then(resp => {\r\n                if(resp.status === 200){\r\n                  const {new_token, new_refresh_token, new_token_expires, new_refresh_token_expires} = resp.data;\r\n                  localStorage.setItem('token', new_token);\r\n                  localStorage.setItem('refresh_token', new_refresh_token);\r\n                  localStorage.setItem('token_expires', new_token_expires);\r\n                  localStorage.setItem('refresh_token_expires', new_refresh_token_expires);\r\n                  setTokenTimeout({\r\n                        timeleft: new_token_expires\r\n                  })\r\n                }          \r\n              })\r\n              .catch(err => {\r\n                  logout();\r\n              });\r\n    \r\n        }else{\r\n            logout();\r\n        }\r\n    }, [logout, setTokenTimeout])\r\n    \r\n    return refreshToken;\r\n  }\r\n\r\n  export default useRefreshToken;","import React, {Suspense} from 'react';\r\nimport {useRecoilValue} from 'recoil';\r\n\r\n// Recoil Atoms\r\nimport {subscribeToEventsState, loginData, activeChatWith, tokenTimeoutAtom, darkModeAtom} from './components/recoil/atoms';\r\n\r\n// React router\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\n\r\n// Materia UI\r\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {SnackbarProvider} from 'notistack';\r\n\r\n// Componentes visuales\r\nimport Signin from './view/signin';\r\nimport MainContainter from './view/main';\r\nimport Signup from './view/signup';\r\nimport UiComponents from './components/uiComponents';\r\nimport useRefreshToken from './utils/useRefreshToken';\r\n\r\n\r\n\r\n//import Toolbar from './view/toolbar';\r\n//import MainButton from './view/mainButton';\r\n//import ContactList from './view/contacts';\r\n//import ChatCmp from './view/chat';\r\n//import ActivateUser from './view/activateuser';\r\n//import Events from './components/events';\r\n//import ChangePass from './view/changepass';\r\n\r\nconst AsyncToolbar = React.lazy(() => import('./view/toolbar'));\r\nconst AsyncMainButton = React.lazy(() => import('./view/mainButton'));\r\nconst AsyncContactList = React.lazy(() => import('./view/contacts'));\r\nconst AsyncChatCmp = React.lazy(() => import('./view/chat'));\r\nconst AsyncActivateUser = React.lazy(() => import('./view/activateuser'));\r\nconst AsyncChangePass = React.lazy(() => import('./view/changepass'));\r\nconst AsyncEvents = React.lazy(() => import('./components/events'));\r\n\r\n\r\n\r\nconst TimerCmp = () => {\r\n\r\n    const refreshToken = useRefreshToken();\r\n    const timeoutData = useRecoilValue(tokenTimeoutAtom);\r\n    \r\n    React.useEffect(() => {\r\n        \r\n        let timeleft = new Date(timeoutData.timeleft).getTime() - new Date().getTime();\r\n        if(timeleft >= 10000){\r\n            setTimeout(()=> {\r\n                refreshToken();\r\n            }, timeleft - 10000);\r\n        }\r\n\r\n    }, [timeoutData]);\r\n\r\n    return <></>;\r\n}\r\n\r\nconst themeDark = createMuiTheme({palette: {type: 'dark',}});\r\nconst themeDefault = createMuiTheme({});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\n\r\nconst App = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const dark = useRecoilValue(darkModeAtom);\r\n    const subscribe = useRecoilValue(subscribeToEventsState);\r\n    const userData = useRecoilValue(loginData);\r\n    const chatWith = useRecoilValue(activeChatWith);\r\n    const notistackRef = React.createRef();\r\n    const onClickDismiss = key => () => { \r\n        notistackRef.current.closeSnackbar(key);\r\n    }\r\n  \r\n    const cmp  = userData !== null \r\n    ? <>\r\n            {\r\n                chatWith \r\n                ? <Suspense fallback={\r\n                    <Backdrop className={classes.backdrop} open={true} >\r\n                        <CircularProgress color=\"inherit\" />\r\n                    </Backdrop>}\r\n                >\r\n                    <AsyncChatCmp />\r\n                </Suspense>\r\n                                    \r\n                : <Route path=\"/contacts\" exact render={ () => (\r\n                    <ThemeProvider theme={dark ? themeDark : themeDefault}>\r\n                        <Suspense fallback={\r\n                            <Backdrop className={classes.backdrop} open={true} >\r\n                                <CircularProgress color=\"inherit\" />\r\n                            </Backdrop>}\r\n                        >\r\n                            <AsyncToolbar />\r\n                            <AsyncMainButton />\r\n                            <AsyncContactList />\r\n                        </Suspense>\r\n                    </ThemeProvider>\r\n                )} />\r\n            }\r\n        </> \r\n    : null ;\r\n\r\n\r\n    return (<ThemeProvider theme={dark ? themeDark : themeDefault}>\r\n       \r\n            <MainContainter>\r\n                <CssBaseline />\r\n                <UiComponents />\r\n                <SnackbarProvider \r\n                    maxSnack={3} \r\n                    autoHideDuration={3000}\r\n                    preventDuplicate\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    ref={notistackRef}\r\n                    action={(key) => (\r\n                        <IconButton onClick={onClickDismiss(key)}>\r\n                            <CloseIcon fontSize=\"small\" style={{color: 'white'}} />\r\n                        </IconButton>\r\n                    )}\r\n                >\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Signin} />\r\n                        <Route path=\"/signup\" exact component={Signup} />\r\n                        {cmp}\r\n                        <Route path=\"/changepass/:token\" exact render={() => (\r\n                            <Suspense fallback={\r\n                                <Backdrop className={classes.backdrop} open={true} >\r\n                                    <CircularProgress color=\"inherit\" />\r\n                                </Backdrop>}\r\n                            >\r\n                                <AsyncChangePass />\r\n                            </Suspense>\r\n                        )} />\r\n                        \r\n                        \r\n                        \r\n                        <Route path=\"/activateuser/:token/:nickname/:invited\" exact render={() => (\r\n                            <Suspense fallback={\r\n                                <Backdrop className={classes.backdrop} open={true} >\r\n                                    <CircularProgress color=\"inherit\" />\r\n                                </Backdrop>}\r\n                            >\r\n                                <AsyncActivateUser />\r\n                            </Suspense>\r\n                        )} /> \r\n                        <Route path=\"/activateuser/:token/:nickname\" exact render={() => (\r\n                            <Suspense fallback={\r\n                                <Backdrop className={classes.backdrop} open={true} >\r\n                                    <CircularProgress color=\"inherit\" />\r\n                                </Backdrop>}\r\n                            >\r\n                                <AsyncActivateUser />\r\n                            </Suspense>\r\n                        )} /> \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        <Redirect from='/' to='/' />       \r\n                    </Switch>\r\n                    \r\n                    {subscribe ? \r\n                        <Suspense fallback={\r\n                            <Backdrop className={classes.backdrop} open={true} >\r\n                                <CircularProgress color=\"inherit\" />\r\n                            </Backdrop>}\r\n                        >\r\n                            <AsyncEvents />\r\n                        </Suspense>\r\n                    : null\r\n                    }\r\n                    <TimerCmp />\r\n                </SnackbarProvider>\r\n            </MainContainter>\r\n        </ThemeProvider>);\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {RecoilRoot} from 'recoil';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'typeface-roboto';\r\n//import 'fontsource-roboto';\r\n//import \"fontsource-roboto/300.css\"\r\n//import \"fontsource-roboto/400.css\"\r\n//import \"fontsource-roboto/500.css\"\r\n//import \"fontsource-roboto/700.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>      \r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n//serviceWorker.register();\r\n","import React from 'react';\r\nimport {useRecoilState} from 'recoil'\r\nimport {notificationAtom} from './notification.atom';\r\n\r\n\r\nconst NotificationHook = () => {\r\n    \r\n    const [notificationState, setNotificationState] = useRecoilState(notificationAtom);\r\n\r\n    const defaultToOpem = {\r\n        ...notificationState,\r\n        open: true,\r\n        autoHideDuration: 3000\r\n    };\r\n\r\n    const openNotification = properties => {\r\n        setNotificationState({\r\n            ...defaultToOpem,\r\n            ...properties\r\n        });\r\n    }\r\n\r\n    const openSpecificNotification = (severity, msg) => {\r\n        setNotificationState({\r\n            ...defaultToOpem,\r\n            severity: severity,\r\n            msg: msg\r\n        });\r\n    }\r\n\r\n    const openSuccessNotification = msg => {\r\n        openSpecificNotification(\"success\",msg);\r\n    }\r\n\r\n    const openWarningNotification = msg => {\r\n        openSpecificNotification(\"warning\",msg);\r\n    }\r\n\r\n    const openErrorNotification = msg => {\r\n        openSpecificNotification(\"error\",msg);\r\n    }\r\n\r\n    const openInfoNotification = msg => {\r\n        openSpecificNotification(\"info\",msg);\r\n    }\r\n\r\n    return {    \r\n        openNotification: openNotification,\r\n        openSuccessNotification: openSuccessNotification,\r\n        openErrorNotification: openErrorNotification,\r\n        openInfoNotification: openInfoNotification,\r\n        openWarningNotification: openWarningNotification\r\n    };\r\n\r\n}\r\nexport default NotificationHook;","import {atom} from 'recoil';\r\n\r\nconst notificationAtom = atom({\r\n    key: \"notificationAtom\",\r\n    default: {\r\n        open: false,\r\n        autoHideDuration: 6000,\r\n        severity: 'success',\r\n        msg: \"\"\r\n    }\r\n});\r\n\r\nexport {notificationAtom};"],"sourceRoot":""}